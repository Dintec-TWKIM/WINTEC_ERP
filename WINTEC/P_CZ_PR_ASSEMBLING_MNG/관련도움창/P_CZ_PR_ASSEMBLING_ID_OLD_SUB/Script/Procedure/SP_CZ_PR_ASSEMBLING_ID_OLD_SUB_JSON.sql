USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_ASSEMBLING_ID_OLD_SUB_JSON]    Script Date: 2017-01-05 오후 5:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PR_ASSEMBLING_ID_OLD_SUB_JSON]          
(
	@P_JSON			NVARCHAR(MAX),
	@P_ID_USER		NVARCHAR(10)	
)  
AS
   
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_ERRMSG NVARCHAR(255)   -- ERROR 메시지

BEGIN TRAN SP_CZ_PR_ASSEMBLING_ID_OLD_SUB
BEGIN TRY

SELECT * INTO #JSON_D
FROM OPENJSON(@P_JSON)
WITH
(
	CD_COMPANY		NVARCHAR(7),
	CD_PLANT		NVARCHAR(7),
	NO_ID			NVARCHAR(20),
	JSON_FLAG		NVARCHAR(1)
) JS
WHERE JS.JSON_FLAG = 'D'

IF EXISTS (SELECT 1 
		   FROM #JSON_D JS 
		   WHERE EXISTS (SELECT 1 
						 FROM CZ_PR_ASSEMBLING_DATA MD 
						 WHERE MD.CD_COMPANY = JS.CD_COMPANY
						 AND MD.CD_PLANT = JS.CD_PLANT
						 AND MD.NO_ID_C = JS.NO_ID))
BEGIN
	SET @V_ERRMSG = '조립완료된 데이터는 삭제 할 수 없습니다.'
    GOTO ERROR
END


DELETE ID
FROM CZ_PR_ASSEMBLING_ID_OLD ID
WHERE EXISTS (SELECT 1 
			  FROM #JSON_D JS
			  WHERE JS.CD_COMPANY = ID.CD_COMPANY
			  AND JS.CD_PLANT = ID.CD_PLANT
			  AND JS.NO_ID = ID.NO_ID)

SELECT * INTO #JSON_I
FROM OPENJSON(@P_JSON)
WITH
(
	CD_COMPANY          NVARCHAR(7),
	CD_PLANT            NVARCHAR(7),
	NO_ID               NVARCHAR(10),
	CD_ITEM             NVARCHAR(20),
	NO_HEAT             NVARCHAR(200),
	NO_LOT              NVARCHAR(20),
	DC_RMK              NVARCHAR(100),
	JSON_FLAG			NVARCHAR(1)
) JS
WHERE JS.JSON_FLAG = 'I'

IF EXISTS (SELECT 1 
		   FROM CZ_PR_WO_REQ_D WD
		   JOIN #JSON_I JS ON JS.CD_COMPANY = WD.CD_COMPANY AND JS.NO_ID = WD.NO_ID)
BEGIN
	SELECT @V_ERRMSG = '작업진행 중인 가공ID는 등록할 수 없습니다. (' + STRING_AGG(A.NO_ID, ',') + ')' 
	FROM (SELECT TOP 10 MI.NO_ID 
		  FROM CZ_PR_WO_REQ_D WD
		  JOIN #JSON_I JS ON JS.CD_COMPANY = WD.CD_COMPANY AND JS.NO_ID = WD.NO_ID) A
    GOTO ERROR
END

IF EXISTS (SELECT 1 
		   FROM CZ_PR_MATCHING_ID_OLD MI
		   JOIN #JSON_I JS ON JS.CD_COMPANY = MI.CD_COMPANY AND JS.NO_ID = MI.NO_ID)
BEGIN
	SELECT @V_ERRMSG = '현합에 등록된 가공ID는 등록할 수 없습니다. (' + STRING_AGG(A.NO_ID, ',') + ')' 
	FROM (SELECT TOP 10 MI.NO_ID 
		  FROM CZ_PR_MATCHING_ID_OLD MI
		  JOIN #JSON_I JS ON JS.CD_COMPANY = MI.CD_COMPANY AND JS.NO_ID = MI.NO_ID) A
    GOTO ERROR
END

INSERT INTO CZ_PR_ASSEMBLING_ID_OLD
(
	CD_COMPANY,
	CD_PLANT,
	NO_ID,
	CD_ITEM,
	NO_HEAT,
	NO_LOT,
	DC_RMK,
	ID_INSERT,
	DTS_INSERT
)
SELECT JS.CD_COMPANY,
	   JS.CD_PLANT,
	   JS.NO_ID,
	   JS.CD_ITEM,
	   JS.NO_HEAT,
	   JS.NO_LOT,
	   JS.DC_RMK,
	   @P_ID_USER,
	   NEOE.SF_SYSDATE(GETDATE())
FROM #JSON_I JS

UPDATE ID
SET ID.CD_ITEM = JS.CD_ITEM,
    ID.NO_HEAT = JS.NO_HEAT,
    ID.NO_LOT = JS.NO_LOT,
	ID.DC_RMK = JS.DC_RMK,
	ID.ID_UPDATE = @P_ID_USER,
	ID.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
FROM CZ_PR_ASSEMBLING_ID_OLD ID
JOIN OPENJSON(@P_JSON)
     WITH (CD_COMPANY          NVARCHAR(7),
		   CD_PLANT            NVARCHAR(7),
		   NO_ID               NVARCHAR(10),
		   CD_ITEM             NVARCHAR(20),
		   NO_HEAT             NVARCHAR(200),
		   NO_LOT              NVARCHAR(20),
		   DC_RMK              NVARCHAR(100),
		   JSON_FLAG		   NVARCHAR(1)) JS
ON JS.JSON_FLAG = 'U' 
AND JS.CD_COMPANY = ID.CD_COMPANY 
AND JS.CD_PLANT = ID.CD_PLANT 
AND JS.NO_ID = ID.NO_ID

DROP TABLE #JSON_I

COMMIT TRAN SP_CZ_PR_ASSEMBLING_ID_OLD_SUB

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PR_ASSEMBLING_ID_OLD_SUB
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PR_ASSEMBLING_ID_OLD_SUB

GO