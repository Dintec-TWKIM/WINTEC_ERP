USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[UP_PU_POH_DELETE]    Script Date: 2022-03-24 오후 3:23:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROC [NEOE].[UP_PU_POH_DELETE]  
(  
	@P_NO_PO                    NVARCHAR(20),                -- 발주번호          
	@P_CD_COMPANY               NVARCHAR(7),                   -- 회사    
	@P_ID_DELETE				NVARCHAR(15) = NULL      
)  
AS  
BEGIN  
  
DECLARE  
@ERRNO                 INT,  
@ERRMSG                VARCHAR(255),  
@NO_LINE               NUMERIC(3),                -- 발주 항번  
@P_DTS_DELETE		   NVARCHAR(14),
@P_NO_UPDATEHST		   INT,
@V_SEQ                 INT,
@V_SERVER_KEY          VARCHAR(25)

SELECT @V_SERVER_KEY = MAX(SERVER_KEY) FROM CM_SERVER_CONFIG WHERE YN_UPGRADE = 'Y'
SET @P_DTS_DELETE = REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(20), GETDATE(), 120), '-',''), ' ', ''),':','')              
 
 IF @V_SERVER_KEY LIKE 'HYDGT%'
 BEGIN
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
 END
 
 --PU_POH LOG (D20130829078)  
 SELECT @P_NO_UPDATEHST = COUNT(1) FROM PU_POH_LOG WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY AND FG_STAT = 'DELETE'
 BEGIN
	INSERT INTO PU_POH_LOG
		(
			NO_PO,		CD_COMPANY,		CD_PLANT,		CD_PARTNER,		DT_PO,		CD_PURGRP,		NO_EMP,		
			CD_TPPO,	FG_UM,			FG_PAYMENT,		FG_TAX,			TP_UM_TAX,	CD_PJT,			CD_EXCH,		
			RT_EXCH,	AM_EX,			AM,				VAT,			DC50_PO,	TP_PROCESS,		FG_TAXP,		
			YN_AM,		DTS_INSERT,		ID_INSERT,		DTS_UPDATE,		ID_UPDATE,	DTS_DELETE,		ID_DELETE,	
			FG_TRANS,	FG_TRACK,		DC_RMK2,		FG_STAT,		NO_UPDATEHST
		)
	SELECT	NO_PO,		CD_COMPANY,		CD_PLANT,		CD_PARTNER,		DT_PO,		CD_PURGRP,		NO_EMP,
			CD_TPPO,	FG_UM,			FG_PAYMENT,		FG_TAX,			TP_UM_TAX,	CD_PJT,			CD_EXCH,
			RT_EXCH,	AM_EX,			AM,				VAT,			DC50_PO,	TP_PROCESS,		FG_TAXP,
			YN_AM,		@P_DTS_DELETE,	@P_ID_DELETE,	'',				'',			'',				'',
			FG_TRANS,	FG_TRACK,		DC_RMK2,		'DELETE',		@P_NO_UPDATEHST +1
	  FROM PU_POH
	 WHERE CD_COMPANY = @P_CD_COMPANY
	   AND NO_PO = @P_NO_PO 	
 END
/* PU_POL.TD_PU_POL 트리거로 옮김  
-- 라인 존재 여부   
IF EXISTS (SELECT 1 FROM PU_POL WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY)  
BEGIN    
  
 DECLARE CUR_POLDELETE CURSOR FOR          
         SELECT NO_LINE FROM PU_POL WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY          
  
 OPEN CUR_POLDELETE     
 FETCH NEXT FROM CUR_POLDELETE     
 INTO         @NO_LINE  
 WHILE (@@FETCH_STATUS = 0)     
 BEGIN                             
         -- 라인 삭제  
         EXEC UP_PU_POL_DELETE_BY_POH @P_NO_PO, @NO_LINE, @P_CD_COMPANY  
         IF (@@ERROR <> 0 )  
         BEGIN    
               SELECT @ERRNO  = 100000,    
                            @ERRMSG = 'CM_M100010'    
               GOTO ERROR    
         END             
           
 FETCH NEXT FROM CUR_POLDELETE   
 INTO         @NO_LINE  
 END     
 CLOSE CUR_POLDELETE     DEALLOCATE CUR_POLDELETE     
  
END  
*/  
     
 IF (SELECT CD_EXC  
      FROM  MA_EXC  
     WHERE  CD_COMPANY = @P_CD_COMPANY
       AND  ISNULL(EXC_TITLE,'') = 'H41적용여부' ) = 'Y'
 BEGIN
	UPDATE PU_H41_ITEM_NIKON
	   SET NO_PO = ''
	 WHERE CD_COMPANY = @P_CD_COMPANY
	   AND NO_PO = @P_NO_PO
    IF (@@ERROR <> 0)BEGIN SELECT @ERRNO = 100000, @ERRMSG = 'CM_M100010' GOTO ERROR END  
 END		

IF (@V_SERVER_KEY LIKE 'DONGWOON%' OR @V_SERVER_KEY = 'DZSQLv4' )
BEGIN

	UPDATE MM_QTIOLOT
	   SET NUM_USERDEF1 = ISNULL(LOT.NUM_USERDEF1,0) - ISNULL(POLL.QT_NEED,0)
	  FROM MM_QTIOLOT LOT
	  INNER JOIN PU_POLL POLL ON LOT.NO_IO = POLL.NO_RELATION AND LOT.NO_IOLINE = POLL.SEQ_RELATION AND LOT.NO_IOLINE2 = POLL.NUM_USERDEF1
	 WHERE POLL.CD_COMPANY = @P_CD_COMPANY
	   AND NO_PO = @P_NO_PO

END 

-- 소요자재라인 삭제  
DELETE PU_POLL  WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY           
IF (@@ERROR <> 0 )  
BEGIN    
      SELECT @ERRNO  = 100000,    
             @ERRMSG = 'CM_M100010'    
        GOTO ERROR    
END    



SELECT @V_SEQ = ISNULL(MAX(NO_SEQ),0) FROM PU_POL_LOG WHERE CD_COMPANY = @P_CD_COMPANY AND NO_PO = @P_NO_PO 

SET @V_SEQ = @V_SEQ + 1

INSERT INTO PU_POL_LOG (NO_PO,NO_LINE,NO_SEQ,CD_COMPANY,CD_PLANT,NO_PR,NO_PRLINE,CD_ITEM,CD_UNIT_MM,DT_LIMIT,		
						QT_PO_MM,QT_PO,QT_REQ,QT_RCV,FG_TAX,UM_EX_PO,UM_EX,AM_EX,UM,AM,				
						VAT,CD_SL,CD_PJT,QT_REQ_MM,QT_TR_MM,QT_TR,AM_EXTR,AM_TR,AM_EXREQ,AM_REQ,
						NO_APP,NO_APPLINE,QT_RCV_MM,SEQ_PROJECT,CD_CC,CD_BUDGET,CD_BGACCT,NO_SO,NO_SOLINE,GI_PARTNER,		
						NO_HST,NO_IO_MGMT,NO_IOLINE_MGMT,DC3,DT_PLAN,DC4,NO_WBS,NO_CBS,TP_UM_TAX,NO_LINE_PJTBOM , 
						ID_INSERT,DTS_INSERT,ID_UPDATE,DTS_UPDATE,CD_STND_ITEM_1,CD_STND_ITEM_2,CD_STND_ITEM_3,CD_STND_ITEM_4,CD_STND_ITEM_5,  
						NUM_STND_ITEM_1,NUM_STND_ITEM_2,NUM_STND_ITEM_3,NUM_STND_ITEM_4,NUM_STND_ITEM_5,UM_WEIGHT,TOT_WEIGHT		
						)
	             SELECT NO_PO,NO_LINE,@V_SEQ,CD_COMPANY,CD_PLANT,NO_PR,NO_PRLINE,CD_ITEM,CD_UNIT_MM,DT_LIMIT,							
						QT_PO_MM,QT_PO,QT_REQ,QT_RCV,FG_TAX,UM_EX_PO,UM_EX,AM_EX,UM,AM,				
						VAT,CD_SL,CD_PJT,QT_REQ_MM,QT_TR_MM,QT_TR,AM_EXTR,AM_TR,AM_EXREQ,AM_REQ,
						NO_APP,NO_APPLINE,QT_RCV_MM,SEQ_PROJECT,CD_CC,CD_BUDGET,CD_BGACCT,NO_SO,NO_SOLINE,GI_PARTNER,		
						NO_HST,NO_IO_MGMT,NO_IOLINE_MGMT,DC3,DT_PLAN,DC4,NO_WBS,NO_CBS,TP_UM_TAX,NO_LINE_PJTBOM , 
						ID_INSERT,DTS_INSERT,ID_UPDATE,DTS_UPDATE,CD_STND_ITEM_1,CD_STND_ITEM_2,CD_STND_ITEM_3,CD_STND_ITEM_4,CD_STND_ITEM_5,  
						NUM_STND_ITEM_1,NUM_STND_ITEM_2,NUM_STND_ITEM_3,NUM_STND_ITEM_4,NUM_STND_ITEM_5,UM_WEIGHT,TOT_WEIGHT		
				   FROM PU_POL
				  WHERE CD_COMPANY = @P_CD_COMPANY
				    AND NO_PO = @P_NO_PO
				    
-- 라인 삭제  
DELETE PU_POL  WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY           
IF (@@ERROR <> 0 )  
BEGIN    
      SELECT @ERRNO  = 100000,    
             @ERRMSG = 'CM_M100010'    
        GOTO ERROR    
END    


  
-- 헤더 삭제  
DELETE PU_POH  WHERE NO_PO = @P_NO_PO AND CD_COMPANY = @P_CD_COMPANY           
IF (@@ERROR <> 0 )  
BEGIN    
      SELECT @ERRNO  = 100000,    
             @ERRMSG = 'CM_M100010'    
        GOTO ERROR    
END             

DELETE PU_POLH
 WHERE CD_COMPANY = @P_CD_COMPANY        
   AND NO_PO = @P_NO_PO   
IF (@@ERROR <> 0 )  
BEGIN    
      SELECT @ERRNO  = 100000,    
             @ERRMSG = 'CM_M100010'    
        GOTO ERROR    
END  
					              
 
DELETE PU_POHH       
 WHERE CD_COMPANY = @P_CD_COMPANY        
   AND NO_PO = @P_NO_PO  
IF (@@ERROR <> 0 )   
BEGIN    
      SELECT @ERRNO  = 100000,    
             @ERRMSG = 'CM_M100010'    
        GOTO ERROR    
END       

DELETE PU_CUST_PUBLIC
WHERE CD_NO_PK_1 = @P_CD_COMPANY
  AND CD_NO_PK_2 = @P_NO_PO
  AND NM_BUSINESS = 'P_PU_PO_REG2'
  AND CD_CUST_SERVER_KEY = @V_SERVER_KEY
  
  
-- 매입정보삭제  
DELETE  PU_POH_SUB
 WHERE  NO_PO = @P_NO_PO
   AND  CD_COMPANY = @P_CD_COMPANY
  
 --기성매입정보 삭제
DELETE PU_PBL 
 WHERE NO_PO = @P_NO_PO 
   AND CD_COMPANY = @P_CD_COMPANY

--IF @V_SERVER_KEY LIKE 'HYDGT%'
--BEGIN
--	EXEC UP_PU_Z_HYDGT_REGACY_PO_I @P_NO_PO, @P_CD_COMPANY
--	IF (@@ERROR <> 0 )   
--	BEGIN    
--		  SELECT @ERRNO  = 100000,    
--				 @ERRMSG = 'CM_M100010'    
--			GOTO ERROR    
--	END 
--END
  
RETURN  
ERROR:    
    RAISERROR (@ERRMSG, 18,1)    
END
GO


