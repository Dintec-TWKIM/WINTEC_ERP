USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_WO_SA_SOL_CHANGE_S1]    Script Date: 2021-03-02 오전 10:51:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_PR_WO_SA_SOL_CHANGE_S1]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_NO_OPPATH		NVARCHAR(3),
	@P_NO_SO			NVARCHAR(20),
	@P_SEQ_SO			NUMERIC(5, 0),
    @P_CD_ITEM			NVARCHAR(20),
	@P_NO_WO			NVARCHAR(20),
	@P_CD_MATL			NVARCHAR(20)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #BOM
(
	CD_COMPANY	NVARCHAR(7), 
	CD_PLANT	NVARCHAR(7), 
	CD_ITEM_T	NVARCHAR(20), 
	CD_ITEM		NVARCHAR(20), 
	CD_MATL		NVARCHAR(20), 
	LEVEL		INT, 
	PATH		NVARCHAR(100), 
	QT			NUMERIC(25, 10)
)

CREATE NONCLUSTERED INDEX BOM ON #BOM (CD_COMPANY, CD_PLANT, CD_ITEM_T);

WITH BOM 
(
	CD_COMPANY, 
	CD_PLANT, 
	CD_ITEM_T, 
	CD_ITEM, 
	CD_MATL, 
	LEVEL, 
	PATH, 
	QT
) 
AS
(
	SELECT PB.CD_COMPANY,
		   PB.CD_PLANT,
		   PB.CD_ITEM AS CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL = 1, 
		   CONVERT(VARCHAR(1000), PB.CD_MATL),
		   PB1.QT_ITEM_NET
    FROM PR_ROUT_ASN PB
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE PB.CD_COMPANY = @P_CD_COMPANY
	AND PB.NO_OPPATH = @P_NO_OPPATH
	AND PB.CD_ITEM = @P_CD_ITEM
	AND EXISTS (SELECT 1 
				FROM MA_PITEM MI 
				WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				AND MI.CD_PLANT = PB.CD_PLANT 
				AND MI.CD_ITEM = PB.CD_MATL
				AND MI.TP_PROC IN ('M')
				AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
	UNION ALL
	SELECT BM.CD_COMPANY,
		   BM.CD_PLANT,
		   BM.CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL + 1, 
		   CONVERT(VARCHAR(1000), PATH + ' -> ' + PB.CD_MATL),
		   PB1.QT_ITEM_NET
	FROM BOM BM
	JOIN PR_ROUT_ASN PB ON PB.CD_ITEM = BM.CD_MATL AND PB.NO_OPPATH = @P_NO_OPPATH
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE EXISTS (SELECT 1 
				  FROM MA_PITEM MI 
				  WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				  AND MI.CD_PLANT = PB.CD_PLANT 
				  AND MI.CD_ITEM = PB.CD_MATL
				  AND MI.TP_PROC IN ('M')
				  AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
)
INSERT INTO #BOM
SELECT CD_COMPANY, 
	   CD_PLANT, 
	   CD_ITEM_T, 
	   CD_ITEM, 
	   CD_MATL, 
	   LEVEL, 
	   PATH, 
	   QT 
FROM BOM;

WITH A AS
(
	SELECT SL.CD_COMPANY,
	       SL.NO_SO,
		   SL.SEQ_SO,
		   SL.CD_ITEM,
		   SL.CD_PLANT,
		   SL.QT_SO,
		   WS.QT_APPLY,
		   SL.CD_ITEM AS CD_MATL,
	       0 AS LEVEL,
		   1 AS QT_BOM,
		   SL.QT_SO AS QT_NEED
	FROM SA_SOL SL
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY,
					  MAX(WO.NO_WO) AS NO_WO,
					  MAX(WO.DT_REL) AS DT_REL, 
				      MAX(WO.ST_WO) AS ST_WO,
				      MAX(TW.FG_AUTO) AS FG_AUTO
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   LEFT JOIN PR_TPWO TW ON TW.CD_COMPANY = WO.CD_COMPANY AND TW.TP_WO = WO.TP_ROUT
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SL.CD_COMPANY AND WS.NO_SO = SL.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = SL.CD_ITEM
	WHERE SL.CD_COMPANY = @P_CD_COMPANY
	AND SL.NO_SO = @P_NO_SO
	AND SL.SEQ_SO = @P_SEQ_SO
	AND SL.CD_ITEM = @P_CD_ITEM
	AND (ISNULL(@P_CD_MATL, '') = '' OR SL.CD_ITEM = @P_CD_MATL)
	AND (ISNULL(@P_NO_WO, '') = '' OR EXISTS (SELECT 1 
											  FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
											  WHERE WS.CD_COMPANY = SL.CD_COMPANY 
											  AND WS.NO_SO = SL.NO_SO 
											  AND WS.NO_LINE = SL.SEQ_SO 
											  AND WS.CD_ITEM = SL.CD_ITEM
											  AND WS.NO_WO = @P_NO_WO))
	UNION ALL
	SELECT SL.CD_COMPANY,
		   SL.NO_SO,
		   SL.SEQ_SO,
		   SL.CD_ITEM,
		   SL.CD_PLANT,
		   SL.QT_SO,
		   WS.QT_APPLY,
		   BM.CD_MATL,
	       BM.LEVEL,
		   BM.QT AS QT_BOM,
		   (BM.QT * SL.QT_SO) AS QT_NEED
	FROM SA_SOL SL
	JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_PLANT = SL.CD_PLANT AND BM.CD_ITEM_T = SL.CD_ITEM
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY,
					  MAX(WO.NO_WO) AS NO_WO,
					  MAX(WO.DT_REL) AS DT_REL,
				      MAX(WO.ST_WO) AS ST_WO,
				      MAX(TW.FG_AUTO) AS FG_AUTO
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   LEFT JOIN PR_TPWO TW ON TW.CD_COMPANY = WO.CD_COMPANY AND TW.TP_WO = WO.TP_ROUT
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SL.CD_COMPANY AND WS.NO_SO = SL.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = BM.CD_MATL
	WHERE SL.CD_COMPANY = @P_CD_COMPANY
	AND SL.NO_SO = @P_NO_SO
	AND SL.SEQ_SO = @P_SEQ_SO
	AND SL.CD_ITEM = @P_CD_ITEM
	AND (ISNULL(@P_CD_MATL, '') = '' OR BM.CD_MATL = @P_CD_MATL)
	AND (ISNULL(@P_NO_WO, '') = '' OR EXISTS (SELECT 1 
											  FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
											  WHERE WS.CD_COMPANY = SL.CD_COMPANY 
											  AND WS.NO_SO = SL.NO_SO 
											  AND WS.NO_LINE = SL.SEQ_SO 
											  AND WS.CD_ITEM = BM.CD_MATL
											  AND WS.NO_WO = @P_NO_WO))
)
SELECT A.NO_SO,
	   A.SEQ_SO,
	   A.CD_ITEM,
	   A.CD_PLANT,
	   A.QT_SO,
	   A.CD_MATL,
	   MI.NM_ITEM AS NM_MATL,
	   A.LEVEL,
	   A.QT_BOM,
	   ISNULL(A.QT_NEED, 0) AS QT_NEED,
	   ISNULL(A.QT_APPLY, 0) AS QT_APPLY,
	   ISNULL(ST.QT_STOCK, 0) AS QT_STOCK,
	   (ISNULL(A.QT_NEED, 0) - (ISNULL(A.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_REMAIN,
	   (ISNULL(A.QT_NEED, 0) - (ISNULL(A.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_ADD
FROM A
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = A.CD_COMPANY AND MI.CD_PLANT = A.CD_PLANT AND MI.CD_ITEM = A.CD_MATL
LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
		   	      SUM(QL.QT_GI) AS QT_STOCK
		   FROM MM_GIREQH QH
		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
		   WHERE QL.CD_SL = 'SL_STND'
		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
ON ST.CD_COMPANY = A.CD_COMPANY AND ST.NO_SO = A.NO_SO AND ST.SEQ_SO = A.SEQ_SO AND ST.CD_ITEM = A.CD_MATL
ORDER BY A.LEVEL

GO