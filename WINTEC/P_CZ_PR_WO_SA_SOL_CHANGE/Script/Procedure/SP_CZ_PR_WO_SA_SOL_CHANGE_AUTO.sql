USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_WO_SA_SOL_CHANGE_AUTO]    Script Date: 2021-03-02 오전 10:51:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_PR_WO_SA_SOL_CHANGE_AUTO]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_NO_OPPATH		NVARCHAR(3)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #BOM
(
	CD_COMPANY	NVARCHAR(7), 
	CD_PLANT	NVARCHAR(7), 
	CD_ITEM_T	NVARCHAR(20), 
	CD_ITEM		NVARCHAR(20), 
	CD_MATL		NVARCHAR(20), 
	LEVEL		INT, 
	PATH		NVARCHAR(100), 
	QT			NUMERIC(25, 10)
)

CREATE NONCLUSTERED INDEX BOM ON #BOM (CD_COMPANY, CD_PLANT, CD_ITEM_T)

CREATE TABLE #작업지시
(
	NO_WO		NVARCHAR(20),
	DT_REL		NVARCHAR(8),
	CD_ITEM		NVARCHAR(20),
	NUM_ORDER	NUMERIC(17, 4),
	QT_REMAIN	NUMERIC(17, 4)
)

CREATE NONCLUSTERED INDEX 작업지시 ON #작업지시 (NO_WO, CD_ITEM)

CREATE TABLE #수주잔량
(
	CD_COMPANY  NVARCHAR(7),
	CD_PLANT	NVARCHAR(7),
	NO_SO		NVARCHAR(20),
	SEQ_SO		NUMERIC(5, 0),
	DT_DUEDATE	NVARCHAR(8),
	CD_MATL		NVARCHAR(20),
	QT_REMAIN	NUMERIC(17, 4),
    NUM_ORDER   INT
)

CREATE NONCLUSTERED INDEX 수주잔량 ON #수주잔량 (NO_SO, SEQ_SO, CD_MATL)

EXEC SP_CZ_PR_MATCHING_ITEM_AUTO @P_CD_COMPANY
EXEC SP_CZ_PR_ASSEMBLING_ITEM_AUTO @P_CD_COMPANY

;WITH BOM 
(
	CD_COMPANY, 
	CD_PLANT, 
	CD_ITEM_T, 
	CD_ITEM, 
	CD_MATL, 
	LEVEL, 
	PATH, 
	QT
) 
AS
(
	SELECT PB.CD_COMPANY,
		   PB.CD_PLANT,
		   PB.CD_ITEM AS CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL = 1, 
		   CONVERT(VARCHAR(1000), PB.CD_MATL),
		   PB1.QT_ITEM_NET
    FROM PR_ROUT_ASN PB
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE PB.CD_COMPANY = @P_CD_COMPANY
    AND PB.NO_OPPATH = @P_NO_OPPATH
	AND EXISTS (SELECT 1 
				FROM MA_PITEM MI 
				WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				AND MI.CD_PLANT = PB.CD_PLANT 
				AND MI.CD_ITEM = PB.CD_MATL
				AND MI.TP_PROC = 'M'
				AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
	UNION ALL
	SELECT BM.CD_COMPANY,
		   BM.CD_PLANT,
		   BM.CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL + 1, 
		   CONVERT(VARCHAR(1000), PATH + ' -> ' + PB.CD_MATL),
		   PB1.QT_ITEM_NET
	FROM BOM BM
	JOIN PR_ROUT_ASN PB ON PB.CD_ITEM = BM.CD_MATL AND PB.NO_OPPATH = @P_NO_OPPATH
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE EXISTS (SELECT 1 
				  FROM MA_PITEM MI 
				  WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				  AND MI.CD_PLANT = PB.CD_PLANT 
				  AND MI.CD_ITEM = PB.CD_MATL
				  AND MI.TP_PROC = 'M'
				  AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
)
INSERT INTO #BOM
SELECT CD_COMPANY, 
	   CD_PLANT, 
	   CD_ITEM_T, 
	   CD_ITEM, 
	   CD_MATL, 
	   LEVEL, 
	   PATH, 
	   QT 
FROM BOM;

DELETE MP
FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = MP.CD_COMPANY AND SL.CD_PLANT = MP.CD_PLANT AND SL.NO_SO = MP.NO_SO AND SL.SEQ_SO = MP.NO_LINE
WHERE MP.CD_COMPANY = @P_CD_COMPANY
AND (SL.NO_SO IS NULL OR SL.QT_SO > SL.QT_GIR)
AND SL.STA_SO <> 'C'
AND NOT EXISTS (SELECT 1 
                FROM CZ_PR_WO_INSP WI
                WHERE WI.CD_COMPANY = MP.CD_COMPANY
                AND WI.NO_WO = MP.NO_WO
				AND WI.NO_SO = MP.NO_SO
				AND WI.NO_INSP = 997) -- 현합제외
AND NOT EXISTS (SELECT 1 
                FROM CZ_PR_ASSEMBLING_ITEM AI
                WHERE AI.CD_COMPANY = MP.CD_COMPANY
                AND AI.CD_PLANT = MP.CD_PLANT
                AND AI.CD_ITEM = MP.CD_ITEM) -- 조립제외

INSERT INTO #작업지시
SELECT WO.NO_WO,
	   WO.DT_REL,
       WO.CD_ITEM,
	   WO.NUM_USERDEF1 AS NUM_ORDER,
       ((ISNULL(WO.QT_ITEM, 0) - ISNULL(WR.QT_REJECT, 0)) - ISNULL(MP.QT_APPLY, 0)) AS QT_REMAIN
FROM PR_WO WO
LEFT JOIN (SELECT MP.CD_COMPANY, MP.NO_WO,
                  SUM(MP.QT_APPLY) AS QT_APPLY
           FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
           GROUP BY MP.CD_COMPANY, MP.NO_WO) MP
ON MP.CD_COMPANY = WO.CD_COMPANY AND MP.NO_WO = WO.NO_WO
LEFT JOIN (SELECT WR.CD_COMPANY, WR.NO_WO,
                  SUM(WR.QT_REJECT) AS QT_REJECT
           FROM PR_WO_ROUT WR
           GROUP BY WR.CD_COMPANY, WR.NO_WO) WR
ON WR.CD_COMPANY = WO.CD_COMPANY AND WR.NO_WO = WO.NO_WO
WHERE WO.CD_COMPANY = @P_CD_COMPANY
AND (ISNULL(WO.QT_ITEM, 0) - ISNULL(WR.QT_REJECT, 0)) > ISNULL(MP.QT_APPLY, 0)

;WITH A AS
(
    SELECT SL.CD_COMPANY, -- 미출고
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           SL.CD_ITEM AS CD_MATL,
    	   (SL.QT_SO - (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_REMAIN,
           0 AS NUM_ORDER
    FROM SA_SOL SL
    LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = SL.CD_ITEM
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND SL.QT_SO > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND ISNULL(SL.QT_GIR, 0) = 0
    AND MI.TP_PROC = 'M'
    UNION ALL
    SELECT SL.CD_COMPANY,
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           BM.CD_MATL,
    	   ((SL.QT_SO * BM.QT) - (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_REMAIN,
           0 AS NUM_ORDER
    FROM SA_SOL SL
    JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_ITEM_T = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = BM.CD_MATL
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = BM.CD_MATL
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND (SL.QT_SO * BM.QT) > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND ISNULL(SL.QT_GIR, 0) = 0
	UNION ALL
	SELECT SL.CD_COMPANY, -- 출고
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           SL.CD_ITEM AS CD_MATL,
    	   (SL.QT_GIR - (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_REMAIN,
           1 AS NUM_ORDER
    FROM SA_SOL SL
    LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = SL.CD_ITEM
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND SL.QT_SO > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND SL.QT_SO > SL.QT_GIR
	AND ISNULL(SL.QT_GIR, 0) > 0
    AND MI.TP_PROC = 'M'
    UNION ALL
    SELECT SL.CD_COMPANY,
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           BM.CD_MATL,
    	   ((SL.QT_GIR * BM.QT) - (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0))) AS QT_REMAIN,
           1 AS NUM_ORDER
    FROM SA_SOL SL
    JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_ITEM_T = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = BM.CD_MATL
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = BM.CD_MATL
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND (SL.QT_SO * BM.QT) > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND SL.QT_SO > SL.QT_GIR
	AND ISNULL(SL.QT_GIR, 0) > 0
	UNION ALL
	SELECT SL.CD_COMPANY, -- 나머지
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           SL.CD_ITEM AS CD_MATL,
    	   (CASE WHEN ISNULL(SL.QT_GIR, 0) >= (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0)) THEN (ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GIR, 0)) 
                                                                                               ELSE (ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GIR, 0)) - ((ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0)) - ISNULL(SL.QT_GIR, 0)) END) AS QT_REMAIN,
           0 AS NUM_ORDER
    FROM SA_SOL SL
    LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = SL.CD_ITEM
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = SL.CD_ITEM
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND SL.QT_SO > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND SL.QT_SO > SL.QT_GIR
	AND ISNULL(SL.QT_GIR, 0) > 0
    AND MI.TP_PROC = 'M'
    UNION ALL
    SELECT SL.CD_COMPANY,
    	   SL.CD_PLANT,
    	   SL.NO_SO,
           SL.SEQ_SO,
           SL.DT_DUEDATE,
           BM.CD_MATL,
    	   (CASE WHEN ISNULL(SL.QT_GIR, 0) >= (ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0)) THEN ((ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GIR, 0)) * BM.QT) 
                                                                                               ELSE ((ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GIR, 0)) * BM.QT) - ((ISNULL(MP.QT_APPLY, 0) + ISNULL(ST.QT_STOCK, 0)) - ISNULL(SL.QT_GIR, 0)) END) AS QT_REMAIN,
           0 AS NUM_ORDER
    FROM SA_SOL SL
    JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_ITEM_T = SL.CD_ITEM
    LEFT JOIN (SELECT MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM,
                      SUM(MP.QT_APPLY) AS QT_APPLY
               FROM CZ_PR_SA_SOL_PR_WO_MAPPING MP
               GROUP BY MP.CD_COMPANY, MP.CD_PLANT, MP.NO_SO, MP.NO_LINE, MP.CD_ITEM) MP
    ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PLANT = SL.CD_PLANT AND MP.NO_SO = SL.NO_SO AND MP.NO_LINE = SL.SEQ_SO AND MP.CD_ITEM = BM.CD_MATL
    LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM,
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SL.CD_COMPANY AND ST.NO_SO = SL.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = BM.CD_MATL
    WHERE SL.CD_COMPANY = @P_CD_COMPANY
    AND (SL.QT_SO * BM.QT) > ISNULL(MP.QT_APPLY, 0)
    AND SL.STA_SO <> 'C'
    AND SL.QT_SO > SL.QT_GIR
	AND ISNULL(SL.QT_GIR, 0) > 0
)
INSERT INTO #수주잔량
SELECT A.CD_COMPANY,
       A.CD_PLANT,
       A.NO_SO,
       A.SEQ_SO,
       A.DT_DUEDATE,
       A.CD_MATL,
       A.QT_REMAIN,
       A.NUM_ORDER
FROM A
WHERE A.QT_REMAIN > 0

;WITH A AS
(
	SELECT A.CD_COMPANY,
		   A.CD_PLANT,
		   A.NO_SO,
		   A.SEQ_SO,
		   A.DT_DUEDATE,
		   A.CD_MATL,
		   A.QT_REMAIN,
		   SUM(A.QT_REMAIN) OVER (PARTITION BY A.CD_MATL ORDER BY A.NUM_ORDER DESC, A.DT_DUEDATE, A.NO_SO, A.SEQ_SO) AS QT_TOTAL
	FROM #수주잔량 A
),
B AS
(
	SELECT B.NO_WO,
		   B.DT_REL,
		   B.CD_ITEM,
		   B.QT_REMAIN,
	       SUM(B.QT_REMAIN) OVER (PARTITION BY B.CD_ITEM ORDER BY B.NUM_ORDER DESC, B.DT_REL, B.NO_WO) AS QT_TOTAL
	FROM #작업지시 B
),
C AS
(
	SELECT A.CD_COMPANY,
		   A.CD_PLANT,
		   A.NO_SO,
		   A.SEQ_SO,
		   A.DT_DUEDATE,
		   B.NO_WO,
		   B.CD_ITEM,
		   A.QT_REMAIN AS QT_REMAIN_A,
		   B.QT_REMAIN AS QT_REMAIN_B,
		   A.QT_TOTAL AS QT_TOTAL_A,
		   B.QT_TOTAL AS QT_TOTAL_B,
		   (A.QT_TOTAL - (B.QT_TOTAL - B.QT_REMAIN)) AS QT_TOTAL_A1
	FROM B
	JOIN A ON A.CD_MATL = B.CD_ITEM
),
D AS
(
	SELECT C.CD_COMPANY,
		   C.CD_PLANT,
		   C.NO_SO,
		   C.SEQ_SO,
		   C.NO_WO,
		   C.CD_ITEM,
		   C.QT_REMAIN_B,
		   (CASE WHEN C.QT_TOTAL_A1 > C.QT_REMAIN_B THEN C.QT_REMAIN_A - (C.QT_TOTAL_A1 - C.QT_REMAIN_B)
		   		 WHEN C.QT_REMAIN_A >= C.QT_TOTAL_A1 THEN C.QT_TOTAL_A1 
		   										     ELSE C.QT_REMAIN_A END) AS QT_REMAIN_A1
	FROM C
	WHERE (C.QT_REMAIN_B >= C.QT_TOTAL_A1 OR C.QT_TOTAL_B > (C.QT_TOTAL_A - C.QT_REMAIN_A))
	AND C.QT_TOTAL_A > (C.QT_TOTAL_B - C.QT_REMAIN_B)
)
SELECT D.CD_COMPANY,
	   D.CD_PLANT,
	   D.NO_SO,
	   D.SEQ_SO AS NO_LINE,
	   D.NO_WO,
	   D.CD_ITEM,
	   SUM(CASE WHEN D.QT_REMAIN_A1 > D.QT_REMAIN_B THEN D.QT_REMAIN_B ELSE D.QT_REMAIN_A1 END) AS QT_APPLY,
	   'SYSTEM' AS ID_INSERT,
	   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
INTO #CZ_PR_SA_SOL_PR_WO_MAPPING
FROM D
GROUP BY D.CD_COMPANY,
	     D.CD_PLANT,
	     D.NO_SO,
	     D.SEQ_SO,
	     D.NO_WO,
	     D.CD_ITEM

UPDATE A
SET A.QT_APPLY = (ISNULL(A.QT_APPLY, 0) + ISNULL(B.QT_APPLY, 0)),
    ID_UPDATE = 'SYSTEM',
    DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
FROM CZ_PR_SA_SOL_PR_WO_MAPPING A
JOIN #CZ_PR_SA_SOL_PR_WO_MAPPING B ON B.CD_COMPANY = A.CD_COMPANY AND B.CD_PLANT = A.CD_PLANT AND B.NO_SO = A.NO_SO AND B.NO_LINE = A.NO_LINE AND B.NO_WO = A.NO_WO

INSERT INTO CZ_PR_SA_SOL_PR_WO_MAPPING
(
	CD_COMPANY,
	CD_PLANT,
	NO_SO,
	NO_LINE,
	NO_WO,
	CD_ITEM,
	QT_APPLY,
	ID_INSERT,
	DTS_INSERT
)
SELECT CD_COMPANY,
	   CD_PLANT,
	   NO_SO,
	   NO_LINE,
	   NO_WO,
	   CD_ITEM,
	   QT_APPLY,
	   ID_INSERT,
	   DTS_INSERT 
FROM #CZ_PR_SA_SOL_PR_WO_MAPPING A
WHERE NOT EXISTS (SELECT 1 
                  FROM CZ_PR_SA_SOL_PR_WO_MAPPING B
                  WHERE B.CD_COMPANY = A.CD_COMPANY
                  AND B.CD_PLANT = A.CD_PLANT
                  AND B.NO_SO = A.NO_SO
                  AND B.NO_LINE = A.NO_LINE
                  AND B.NO_WO = A.NO_WO)

DROP TABLE #BOM
DROP TABLE #작업지시
DROP TABLE #수주잔량
DROP TABLE #CZ_PR_SA_SOL_PR_WO_MAPPING

GO