USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_WO_SIMULATION_H_S]    Script Date: 2017-01-05 오후 5:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PR_WO_SIMULATION_H_S]          
(
	@P_CD_COMPANY	NVARCHAR(7),
	@P_TP_DATE		NVARCHAR(3),
	@P_DT_FROM		NVARCHAR(8),
	@P_DT_TO		NVARCHAR(8),
	@P_NO_SO		NVARCHAR(20),
	@P_CD_ITEM		NVARCHAR(20),
	@P_YN_GIR		NVARCHAR(1),
	@P_YN_GI		NVARCHAR(1),
	@P_YN_CLOSE		NVARCHAR(1),
	@P_ST_WO		NVARCHAR(3),
	@P_ST_PR		NVARCHAR(3),
	@P_ST_SU_PR		NVARCHAR(3),
	@P_TP_PROC      NVARCHAR(1),
	@P_NO_OPPATH    NVARCHAR(3)
)  
AS
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #BOM
(
	CD_COMPANY	NVARCHAR(7), 
	CD_PLANT	NVARCHAR(7), 
	CD_ITEM_T	NVARCHAR(20), 
	CD_ITEM		NVARCHAR(20), 
	CD_MATL		NVARCHAR(20), 
	LEVEL		INT, 
	PATH		NVARCHAR(100), 
	QT			NUMERIC(25, 10)
)

CREATE NONCLUSTERED INDEX BOM ON #BOM (CD_COMPANY, CD_PLANT, CD_ITEM_T);

WITH BOM 
(
	CD_COMPANY, 
	CD_PLANT, 
	CD_ITEM_T, 
	CD_ITEM, 
	CD_MATL, 
	LEVEL, 
	PATH, 
	QT,
	TP_PROC
) 
AS
(
	SELECT PB.CD_COMPANY,
		   PB.CD_PLANT,
		   PB.CD_ITEM AS CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL = 1, 
		   CONVERT(VARCHAR(1000), PB.CD_MATL),
		   PB1.QT_ITEM_NET,
		   MI.TP_PROC
    FROM PR_ROUT_ASN PB
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	JOIN MA_PITEM MI ON MI.CD_COMPANY = PB.CD_COMPANY AND MI.CD_PLANT = PB.CD_PLANT AND MI.CD_ITEM = PB.CD_MATL
	WHERE PB.CD_COMPANY = @P_CD_COMPANY
	AND PB.NO_OPPATH = @P_NO_OPPATH
	AND MI.TP_PROC IN ('M', 'P', 'S')
    AND ISNULL(MI.YN_USE, 'N') = 'Y'
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
	UNION ALL
	SELECT BM.CD_COMPANY,
		   BM.CD_PLANT,
		   BM.CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL + 1, 
		   CONVERT(VARCHAR(1000), PATH + ' -> ' + PB.CD_MATL),
		   PB1.QT_ITEM_NET,
		   MI.TP_PROC
	FROM BOM BM
	JOIN PR_ROUT_ASN PB ON PB.CD_ITEM = BM.CD_MATL AND PB.NO_OPPATH = @P_NO_OPPATH
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	JOIN MA_PITEM MI ON MI.CD_COMPANY = PB.CD_COMPANY AND MI.CD_PLANT = PB.CD_PLANT AND MI.CD_ITEM = PB.CD_MATL
	WHERE MI.TP_PROC IN ('M', 'P', 'S')
    AND ISNULL(MI.YN_USE, 'N') = 'Y'
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
)
INSERT INTO #BOM
SELECT CD_COMPANY, 
	   CD_PLANT, 
	   CD_ITEM_T, 
	   CD_ITEM, 
	   CD_MATL, 
	   LEVEL, 
	   PATH, 
	   QT 
FROM BOM
WHERE (ISNULL(@P_TP_PROC, '') = '' OR TP_PROC = @P_TP_PROC)

;WITH A AS
(
	SELECT SL.CD_COMPANY, SL.CD_PLANT, SL.NO_SO, SL.SEQ_SO, SL.CD_ITEM, 0 AS LEVEL,
		   ISNULL(SL.QT_SO, 0) AS QT_NEED
	FROM SA_SOL SL
	WHERE (ISNULL(@P_TP_PROC, '') = '' OR EXISTS (SELECT 1 
												  FROM MA_PITEM MI 
												  WHERE MI.CD_COMPANY = SL.CD_COMPANY 
												  AND MI.CD_PLANT = SL.CD_PLANT 
												  AND MI.CD_ITEM = SL.CD_ITEM
												  AND MI.TP_PROC = @P_TP_PROC))
	UNION ALL
	SELECT SL.CD_COMPANY, SL.CD_PLANT, SL.NO_SO, SL.SEQ_SO, BM.CD_MATL, BM.LEVEL,
	 	   (ISNULL(SL.QT_SO, 0) * ISNULL(BM.QT, 0)) AS QT_NEED
	FROM SA_SOL SL
	JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_PLANT = SL.CD_PLANT AND BM.CD_ITEM_T = SL.CD_ITEM
),
B AS
(
	SELECT A.CD_COMPANY,
		   A.NO_SO,
		   A.SEQ_SO,
		   SUM(CASE WHEN MI.TP_PROC = 'M' THEN ISNULL(A.QT_NEED, 0) - ISNULL(ST.QT_STOCK, 0) ELSE 0 END) AS QT_NEED_M,
		   SUM(CASE WHEN MI.TP_PROC = 'P' THEN ISNULL(A.QT_NEED, 0) - ISNULL(ST.QT_STOCK, 0) ELSE 0 END) AS QT_NEED_P,
		   SUM(CASE WHEN MI.TP_PROC = 'S' THEN ISNULL(A.QT_NEED, 0) - ISNULL(ST.QT_STOCK, 0) ELSE 0 END) AS QT_NEED_S,
		   ISNULL(SUM(WS.QT_APPLY), 0) AS QT_APPLY,
		   ISNULL(SUM(PL.QT_PR), 0) AS QT_PR,
		   ISNULL(SUM(SR.QT_SU_PR), 0) AS QT_SU_PR,
		   MAX(CASE WHEN A.LEVEL = 0 THEN WS.NO_WO ELSE NULL END) AS NO_WO,
	       MAX(CASE WHEN A.LEVEL = 0 THEN WS.ST_WO ELSE NULL END) AS ST_WO,
	       MAX(CASE WHEN A.LEVEL = 0 THEN WS.FG_AUTO ELSE NULL END) AS FG_AUTO,
	       MAX(CASE WHEN A.LEVEL = 0 THEN PL.NO_PR ELSE NULL END) AS NO_PR,
	       MAX(CASE WHEN A.LEVEL = 0 THEN PL.ST_PRST ELSE NULL END) AS ST_PRST,
	       MAX(CASE WHEN A.LEVEL = 0 THEN SR.NO_SU_PR ELSE NULL END) AS NO_SU_PR,
	       MAX(CASE WHEN A.LEVEL = 0 THEN SR.ST_PROC ELSE NULL END) AS ST_PROC
	FROM A
	LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = A.CD_COMPANY AND MI.CD_PLANT = A.CD_PLANT AND MI.CD_ITEM = A.CD_ITEM
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
	 				  SUM(WS.QT_APPLY) AS QT_APPLY,
					  MAX(WO.NO_WO) AS NO_WO,
				      MAX(WO.ST_WO) AS ST_WO,
				      MAX(TW.FG_AUTO) AS FG_AUTO
	 		   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO 
		       LEFT JOIN PR_TPWO TW ON TW.CD_COMPANY = WO.CD_COMPANY AND TW.TP_WO = WO.TP_ROUT
	 		   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = A.CD_COMPANY AND WS.NO_SO = A.NO_SO AND WS.NO_LINE = A.SEQ_SO AND WS.CD_ITEM = A.CD_ITEM
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
	 				  SUM(PL.QT_PR) AS QT_PR,
					  MAX(PL.NO_PR) AS NO_PR,
				      MAX(PL1.ST_PRST) AS ST_PRST
	 		   FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
			   JOIN PU_PRL PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PR = PL.NO_PR AND PL1.NO_PRLINE = PL.NO_PRLINE
	 		   GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
	ON PL.CD_COMPANY = A.CD_COMPANY AND PL.NO_SO = A.NO_SO AND PL.NO_LINE = A.SEQ_SO AND PL.CD_ITEM = A.CD_ITEM
	LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
	 	   			  SUM(SR.QT_PR) AS QT_SU_PR,
					  MAX(SR.NO_PR) AS NO_SU_PR,
				      MAX(SR1.ST_PROC) AS ST_PROC
	 		   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
			   JOIN SU_PRL SR1 ON SR1.CD_COMPANY = SR.CD_COMPANY AND SR1.NO_PR = SR.NO_PR AND SR1.NO_LINE = SR.NO_LINE
	 		   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
	ON SR.CD_COMPANY = A.CD_COMPANY AND SR.NO_SO = A.NO_SO AND SR.NO_LINE = A.SEQ_SO AND SR.CD_ITEM = A.CD_ITEM
	LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = A.CD_COMPANY AND ST.NO_SO = A.NO_SO AND ST.SEQ_SO = A.SEQ_SO AND ST.CD_ITEM = A.CD_ITEM
	WHERE MI.TP_PROC IN ('M', 'P', 'S')
    AND ISNULL(MI.YN_USE, 'N') = 'Y'
	GROUP BY A.CD_COMPANY, A.NO_SO, A.SEQ_SO
),
C AS
(
	SELECT B.CD_COMPANY,
		   B.NO_SO,
		   B.SEQ_SO,
		   B.NO_WO,
	       B.ST_WO,
	       B.FG_AUTO,
	       B.NO_PR,
	       B.ST_PRST,
	       B.NO_SU_PR,
	       B.ST_PROC,
		   (CASE WHEN B.QT_NEED_M = 0 THEN '000'
		         WHEN B.QT_APPLY = 0 THEN '001'
			     WHEN B.QT_NEED_M > B.QT_APPLY THEN '002'
			     WHEN B.QT_NEED_M <= B.QT_APPLY THEN '003' END) AS TP_WO,
		   (CASE WHEN B.QT_NEED_P = 0 THEN '000'
		         WHEN B.QT_PR = 0 THEN '001'
			     WHEN B.QT_NEED_P > B.QT_PR THEN '002'
			     WHEN B.QT_NEED_P <= B.QT_PR THEN '003' END) AS TP_PR,
	       (CASE WHEN B.QT_NEED_S = 0 THEN '000'
		         WHEN B.QT_SU_PR = 0 THEN '001'
			     WHEN B.QT_NEED_S > B.QT_SU_PR THEN '002'
			     WHEN B.QT_NEED_S <= B.QT_SU_PR THEN '003' END) AS TP_SU_PR
	FROM B
)
SELECT SH.NO_SO,
       SH.NO_PO_PARTNER,
	   MP.LN_PARTNER,
	   SH.DT_SO,
	   SL.SEQ_SO,
	   SL.DT_DUEDATE,
	   SL.CD_ITEM,
	   SL.CD_PLANT,
	   MI.NM_ITEM,
	   MI.NO_DESIGN,
	   MI.CD_SL,
	   MI.TP_PROC,
	   MC.NM_SYSDEF AS NM_TP_PROC,
	   SL.QT_SO,
	   SL.QT_GIR,
	   SL.QT_GI,
	   SL1.TP_WO,
	   SL1.TP_PR,
	   SL1.TP_SU_PR,
	   SL1.NO_WO,
	   SL1.ST_WO,
	   SL1.FG_AUTO,
	   SL1.NO_PR,
	   SL1.ST_PRST,
	   SL1.NO_SU_PR,
	   SL1.ST_PROC,
	   MC1.NM_SYSDEF AS NM_ENGINE,
	   SL.TXT_USERDEF6 AS NO_HULL,
	   MI.UNIT_SO,
	   MC2.NM_SYSDEF AS NM_CLASS,
	   (CASE WHEN EXISTS (SELECT 1 
						  FROM PR_ROUT_L RL
						  JOIN PR_ROUT_ASN RA ON RA.CD_COMPANY = RL.CD_COMPANY AND RA.CD_PLANT = RL.CD_PLANT AND RA.CD_ITEM = RL.CD_ITEM AND RA.NO_OPPATH = RL.NO_OPPATH AND RA.TP_OPPATH = RL.TP_OPPATH AND RA.CD_OP = RL.CD_OP
						  WHERE RL.CD_COMPANY = SL.CD_COMPANY
						  AND RL.CD_PLANT = SL.CD_PLANT
						  AND RL.NO_OPPATH = @P_NO_OPPATH
						  AND RL.CD_ITEM = SL.CD_ITEM
						  AND RL.YN_USE = 'Y') THEN 'Y' ELSE 'N' END) AS YN_ASN,
	   (CASE WHEN EXISTS (SELECT 1 
						  FROM CZ_PR_WO_REQ_D WD
						  WHERE WD.CD_COMPANY = SL1.CD_COMPANY
						  AND WD.NO_WO = SL1.NO_WO) THEN 'Y' ELSE 'N' END) AS YN_INPUT
FROM SA_SOH SH
JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
JOIN C SL1 ON SL1.CD_COMPANY = SL.CD_COMPANY AND SL1.NO_SO = SL.NO_SO AND SL1.SEQ_SO = SL.SEQ_SO
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = SH.CD_COMPANY AND MP.CD_PARTNER = SH.CD_PARTNER
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = MI.CD_COMPANY AND MC.CD_FIELD = 'MA_B000009' AND MC.CD_SYSDEF = MI.TP_PROC
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = SL.CD_COMPANY AND MC1.CD_FIELD = 'CZ_WIN0003' AND MC1.CD_SYSDEF = SL.CD_USERDEF3
LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = SL.CD_COMPANY AND MC2.CD_FIELD = 'CZ_WIN0001' AND MC2.CD_SYSDEF = SL.CD_USERDEF1
WHERE SH.CD_COMPANY = @P_CD_COMPANY
AND (@P_TP_DATE <> '001' OR SH.DT_SO BETWEEN @P_DT_FROM AND @P_DT_TO)
AND (@P_TP_DATE <> '002' OR SL.DT_DUEDATE BETWEEN @P_DT_FROM AND @P_DT_TO)
AND (ISNULL(@P_NO_SO, '') = '' OR SH.NO_SO LIKE @P_NO_SO + '%')
AND (ISNULL(@P_CD_ITEM, '') = '' OR SL.CD_ITEM = @P_CD_ITEM)
AND (ISNULL(@P_ST_WO, '') = '' OR SL1.TP_WO = @P_ST_WO)
AND (ISNULL(@P_ST_PR, '') = '' OR SL1.TP_PR = @P_ST_PR)
AND (ISNULL(@P_ST_SU_PR, '') = '' OR SL1.TP_SU_PR = @P_ST_SU_PR)
AND (@P_YN_GIR = 'N' OR SL.QT_SO > ISNULL(SL.QT_GIR, 0))
AND (@P_YN_GI = 'N' OR SL.QT_SO > ISNULL(SL.QT_GI, 0))
AND (@P_YN_CLOSE = 'N' OR ISNULL(SH.STA_SO, '') <> 'C')
ORDER BY SL.DT_DUEDATE

GO