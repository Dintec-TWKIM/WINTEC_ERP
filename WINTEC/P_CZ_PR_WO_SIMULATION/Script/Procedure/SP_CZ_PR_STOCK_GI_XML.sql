USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_STOCK_GI_XML]    Script Date: 2021-03-12 오후 3:39:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PR_STOCK_GI_XML]      
(
	@P_CD_COMPANY   NVARCHAR(7),
	@P_CD_PLANT		NVARCHAR(7),
	@P_NO_EMP		NVARCHAR(20),
	@P_XML			XML,
	@P_ID_USER		NVARCHAR(10)
)      
AS

DECLARE @V_DOC			INT
DECLARE @V_ERRMSG		NVARCHAR(255)
DECLARE @V_YYYYMM		NVARCHAR(6)
DECLARE @V_NO_GIREQ		NVARCHAR(20)
DECLARE @V_NO_IO		NVARCHAR(20)

EXEC SP_XML_PREPAREDOCUMENT @V_DOC OUTPUT, @P_XML

SELECT * INTO #XML
FROM OPENXML (@V_DOC, '/XML/ROW', 2) WITH 
(
	CD_ITEM			NVARCHAR(20),
	QT_GIREQ		NUMERIC(17, 4),
	NO_SO			NVARCHAR(20),
	SEQ_SO			NUMERIC(5, 0)
)

EXEC SP_XML_REMOVEDOCUMENT @V_DOC

BEGIN TRAN SP_CZ_PR_STOCK_GI_XML
BEGIN TRY

DECLARE SRC_CURSOR CURSOR FOR
SELECT XL.CD_ITEM,
	   SUM(XL.QT_GIREQ) AS QT_GIREQ
FROM #XML XL
GROUP BY XL.CD_ITEM

DECLARE @V_CD_ITEM		NVARCHAR(20)
DECLARE @V_QT_GIREQ		INT
DECLARE @V_QT_INV		INT

OPEN SRC_CURSOR
FETCH NEXT FROM SRC_CURSOR INTO @V_CD_ITEM, @V_QT_GIREQ

WHILE @@FETCH_STATUS = 0
BEGIN
	SELECT @V_QT_INV = (SUM(MY.QT_GOOD_OPEN + MY.QT_REJECT_OPEN + MY.QT_INSP_OPEN + MY.QT_TRANS_OPEN) 
					   + SUM(MY.QT_GOOD_GR + MY.QT_REJECT_GR + MY.QT_INSP_GR + MY.QT_TRANS_GR) 
					   - SUM(MY.QT_GOOD_GI + MY.QT_REJECT_GI + MY.QT_INSP_GI + MY.QT_TRANS_GI))
	FROM MM_PINVN MY WITH(NOLOCK)
	WHERE MY.CD_COMPANY = @P_CD_COMPANY
	AND MY.P_YR = SUBSTRING(CONVERT(NVARCHAR(8), GETDATE(), 112), 1, 4)
	AND MY.CD_SL = 'SL_STND'
	AND MY.CD_ITEM = @V_CD_ITEM
	GROUP BY MY.CD_COMPANY, MY.CD_ITEM

	IF @V_QT_GIREQ > ISNULL(@V_QT_INV, 0)
	BEGIN
		SELECT @V_ERRMSG = '사용가능한 재고수량이 부족 합니다.\n' + @V_CD_ITEM + ' : ' + CONVERT(VARCHAR, CONVERT(INT, ISNULL(@V_QT_INV, 0))) + '개 사용가능, ' + CONVERT(VARCHAR, CONVERT(INT, @V_QT_GIREQ)) + '개 사용요청'
		GOTO ERROR
	END

	FETCH NEXT FROM SRC_CURSOR INTO @V_CD_ITEM, @V_QT_GIREQ
END

CLOSE SRC_CURSOR
DEALLOCATE SRC_CURSOR

SET @V_YYYYMM = SUBSTRING(CONVERT(CHAR(8), GETDATE(), 112), 1, 6)
EXEC CP_GETNO @P_CD_COMPANY, 'PU', '08', @V_YYYYMM, @V_NO_GIREQ OUTPUT

INSERT INTO MM_GIREQH
(	
	NO_GIREQ,
    CD_PLANT,
	CD_COMPANY,
	DT_GIREQ, 
	FG_GIREQ,
	FG_GI,
	CD_DEPT,
	NO_EMP,
	FG_MODULE,
	YN_APP,
	ST_STAT
)
SELECT @V_NO_GIREQ,
	   @P_CD_PLANT,
	   @P_CD_COMPANY,
	   CONVERT(CHAR(8), GETDATE(), 112), -- DT_GIREQ
	   '500', -- FG_GIREQ
	   '', -- FG_GI,
	   (SELECT ME.CD_DEPT 
		FROM MA_EMP ME 
		WHERE ME.CD_COMPANY = @P_CD_COMPANY
		AND ME.NO_EMP = @P_NO_EMP), -- CD_DEPT
	   @P_NO_EMP,
	   'PU', -- FG_MODULE,
	   'N', -- YN_APP,
	   'N' -- ST_STAT

INSERT INTO MM_GIREQL
(
	NO_GIREQ,
	NO_LINE,
	CD_PLANT,
	CD_COMPANY,
	CD_ITEM,   
    DT_DELIVERY,
	CD_SL,
	QT_GIREQ,
	ID_INSERT,
	DTS_INSERT,
	CD_GRSL,
	YN_APPEND,
	QT_PO_MM,
	NO_SO,
	SEQ_SO,
	QT_MGREQ,
	FG_POST,
	GI_PARTNER
)
SELECT @V_NO_GIREQ,
	   ROW_NUMBER() OVER (ORDER BY (SELECT 1)) , -- NO_LINE
	   @P_CD_PLANT,
	   @P_CD_COMPANY,
	   XL.CD_ITEM,   
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_DELIVERY,
	   'SL_STND',  -- CD_SL
	   XL.QT_GIREQ, -- QT_GIREQ
	   @P_ID_USER, -- ID_INSERT
	   NEOE.SF_SYSDATE(GETDATE()), -- DTS_INSERT
	   MI.CD_SL, -- CD_GRSL
	   'N', -- YN_APPEND
	   XL.QT_GIREQ, -- QT_PO_MM
	   XL.NO_SO,
	   XL.SEQ_SO,
	   XL.QT_GIREQ, -- QT_MGREQ,
	   'O', -- FG_POST
	   SL.GI_PARTNER 
FROM #XML XL
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = @P_CD_COMPANY AND MI.CD_PLANT = @P_CD_PLANT AND MI.CD_ITEM = XL.CD_ITEM
LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = @P_CD_COMPANY AND SL.NO_SO = XL.NO_SO AND SL.SEQ_SO = XL.SEQ_SO

INSERT INTO MM_GIREQL_LOG                
(
	NO_GIREQ,
	NO_LINE,
	CD_COMPANY,
	FG_PROCESS,
	DTS_PROCESS,
	ID_PROCESS,
	CD_PLANT,
	CD_ITEM,
	DT_DELIVERY,
	CD_SL,
	QT_GIREQ,
	ID_INSERT,
	DTS_INSERT,
	CD_GRSL,
	YN_APPEND,
	QT_PO_MM,
	NO_SO,
	SEQ_SO
)                
SELECT GL.NO_GIREQ,
	   GL.NO_LINE,
	   GL.CD_COMPANY,
	   'INSERT',
	   GL.DTS_INSERT,
	   GL.ID_INSERT,
	   GL.CD_PLANT,
	   GL.CD_ITEM,
	   GL.DT_DELIVERY,
	   GL.CD_SL,
	   GL.QT_GIREQ,
	   GL.ID_INSERT,
	   GL.DTS_INSERT,
	   GL.CD_GRSL,
	   GL.YN_APPEND,
	   GL.QT_PO_MM,
	   GL.NO_SO,
	   GL.SEQ_SO             
FROM MM_GIREQL GL            
WHERE GL.CD_COMPANY = @P_CD_COMPANY
AND GL.NO_GIREQ = @V_NO_GIREQ

EXEC CP_GETNO @P_CD_COMPANY, 'PU', '12', @V_YYYYMM, @V_NO_IO OUTPUT

INSERT INTO MM_QTIOH        
(
	CD_COMPANY,
	NO_IO,
	CD_PLANT,
	YN_RETURN,
	DT_IO,
	CD_DEPT,
	NO_EMP,
	ID_INSERT,
	DTS_INSERT,
	CD_QTIOTP
)        
SELECT QH.CD_COMPANY,
	   @V_NO_IO,
	   QH.CD_PLANT,
	   'N', -- YN_RETURN
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   QH.CD_DEPT,
	   QH.NO_EMP,
	   @P_ID_USER, -- ID_INSERT,
	   NEOE.SF_SYSDATE(GETDATE()),
	   '500' -- CD_QTIOTP
FROM MM_GIREQH QH
WHERE QH.CD_COMPANY = @P_CD_COMPANY
AND QH.NO_GIREQ = @V_NO_GIREQ

INSERT INTO MM_QTIO
(
	NO_IO,
	NO_IOLINE,
	CD_COMPANY,
	CD_PLANT,
	CD_BIZAREA,
	CD_SL,
	DT_IO,
	NO_ISURCV,
	NO_ISURCVLINE,
	NO_PSO_MGMT,
	NO_PSOLINE_MGMT,
	FG_PS,
	FG_IO,
	CD_QTIOTP,
	FG_TRANS,
	CD_ITEM,
	QT_IO,
	QT_REJECT_INV,
	QT_GOOD_INV,
	CD_EXCH,
	RT_EXCH,
	YN_AM,
	GI_PARTNER,
	NO_EMP,
	CD_PLANT_RCV,
	CD_SL_REF,
	QT_UNIT_MM,
	NO_TRACK,
	NO_TRACK_LINE,
	TP_UM_TAX,
	DT_DELIVERY,
	FG_TRACK,
	DTS_INSERT,
	ID_INSERT
)
SELECT @V_NO_IO,
	   (QL.NO_LINE * 2 - 1) AS NO_IOLINE,
	   QL.CD_COMPANY,
	   QL.CD_PLANT,
	   ME.CD_BIZAREA,
	   QL.CD_SL,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   QL.NO_GIREQ AS NO_ISURCV,
	   QL.NO_LINE AS NO_ISURCVLINE,
	   QL.NO_SO AS NO_PSO_MGMT,
	   QL.SEQ_SO AS NO_PSOLINE_MGMT,
	   '2' AS FG_PS,
	   '022' AS FG_IO,
	   QH.FG_GIREQ AS CD_QTIOTP,
	   '001' AS FG_TRANS,
	   QL.CD_ITEM,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_IO,
	   0 AS QT_REJECT_INV,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_GOOD_INV,
	   QL.CD_EXCH,
	   QL.RT_EXCH,
	   'N', -- YN_AM
	   QL.GI_PARTNER,
	   QH.NO_EMP,
	   QL.CD_PLANT,
	   QL.CD_GRSL,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_UNIT_MM,
	   '' AS NO_TRACK,
	   0 AS NO_TRACK_LINE,
	   '002' AS TP_UM_TAX,
	   QL.DT_DELIVERY,
	   'GIR' AS FG_TRACK,
	   QL.DTS_INSERT,
	   QL.ID_INSERT
FROM MM_GIREQL QL
LEFT JOIN MM_GIREQH QH ON QH.CD_COMPANY = QL.CD_COMPANY AND QH.NO_GIREQ = QL.NO_GIREQ
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = QH.CD_COMPANY AND ME.NO_EMP = QH.NO_EMP
WHERE QL.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_GIREQ = @V_NO_GIREQ
UNION ALL
SELECT @V_NO_IO,
	   (QL.NO_LINE * 2) AS NO_IOLINE,
	   QL.CD_COMPANY,
	   QL.CD_PLANT,
	   ME.CD_BIZAREA,
	   QL.CD_GRSL,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   QL.NO_GIREQ AS NO_ISURCV,
	   QL.NO_LINE AS NO_ISURCVLINE,
	   QL.NO_SO AS NO_PSO_MGMT,
	   QL.SEQ_SO AS NO_PSOLINE_MGMT,
	   '1' AS FG_PS,
	   '022' AS FG_IO,
	   QH.FG_GIREQ AS CD_QTIOTP,
	   '001' AS FG_TRANS,
	   QL.CD_ITEM,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_IO,
	   0 AS QT_REJECT_INV,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_GOOD_INV,
	   QL.CD_EXCH,
	   QL.RT_EXCH,
	   'N', -- YN_AM
	   QL.GI_PARTNER,
	   QH.NO_EMP AS NO_EMP,
	   QL.CD_PLANT,
	   QL.CD_SL,
	   ISNULL(QL.QT_GIREQ, 0) AS QT_UNIT_MM,
	   QL.NO_SO AS NO_TRACK,
	   QL.SEQ_SO AS NO_TRACK_LINE,
	   '002' AS TP_UM_TAX,
	   QL.DT_DELIVERY,
	   'GIR' AS FG_TRACK,
	   QL.DTS_INSERT,
	   QL.ID_INSERT
FROM MM_GIREQL QL
LEFT JOIN MM_GIREQH QH ON QH.CD_COMPANY = QL.CD_COMPANY AND QH.NO_GIREQ = QL.NO_GIREQ
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = QH.CD_COMPANY AND ME.NO_EMP = QH.NO_EMP
WHERE QL.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_GIREQ = @V_NO_GIREQ

COMMIT TRAN SP_CZ_PR_STOCK_GI_XML

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PR_STOCK_GI_XML
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN

ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PR_STOCK_GI_XML

GO