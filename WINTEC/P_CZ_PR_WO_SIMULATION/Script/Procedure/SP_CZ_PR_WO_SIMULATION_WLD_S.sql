USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_WO_SIMULATION_WLD_S]    Script Date: 2017-01-05 오후 5:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PR_WO_SIMULATION_WLD_S]          
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_NO_SO			NVARCHAR(20),
	@P_CD_ITEM			NVARCHAR(20),
	@P_CD_MATL			NVARCHAR(20),
	@P_DT_FROM			NVARCHAR(8),
	@P_DT_TO			NVARCHAR(8),
	@P_YN_GIR			NVARCHAR(1),
	@P_YN_GI			NVARCHAR(1),
	@P_YN_CLOSE			NVARCHAR(1),
	@P_YN_WO		    NVARCHAR(1),
	@P_YN_PR			NVARCHAR(1),
	@P_YN_SU_PR			NVARCHAR(1),
	@P_YN_STOCK			NVARCHAR(1),
	@P_TP_PROC			NVARCHAR(1),
	@P_NO_OPPATH		NVARCHAR(3),
	@P_YN_REQ			NVARCHAR(1)
)  
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #BOM
(
	CD_COMPANY	NVARCHAR(7), 
	CD_PLANT	NVARCHAR(7), 
	CD_ITEM_T	NVARCHAR(20), 
	CD_ITEM		NVARCHAR(20), 
	CD_MATL		NVARCHAR(20), 
	LEVEL		INT, 
	PATH		NVARCHAR(100), 
	QT			NUMERIC(25, 10)
)

CREATE NONCLUSTERED INDEX BOM ON #BOM (CD_COMPANY, CD_PLANT, CD_ITEM_T);

WITH BOM 
(
	CD_COMPANY, 
	CD_PLANT, 
	CD_ITEM_T, 
	CD_ITEM, 
	CD_MATL, 
	LEVEL, 
	PATH, 
	QT
) 
AS
(
	SELECT PB.CD_COMPANY,
		   PB.CD_PLANT,
		   PB.CD_ITEM AS CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL = 1, 
		   CONVERT(VARCHAR(1000), PB.CD_MATL),
		   PB1.QT_ITEM_NET
    FROM PR_ROUT_ASN PB
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE PB.CD_COMPANY = @P_CD_COMPANY
	AND PB.NO_OPPATH = @P_NO_OPPATH
	AND EXISTS (SELECT 1 
				FROM MA_PITEM MI 
				WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				AND MI.CD_PLANT = PB.CD_PLANT 
				AND MI.CD_ITEM = PB.CD_MATL
				AND MI.TP_PROC IN ('M', 'P', 'S')
				AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
	UNION ALL
	SELECT BM.CD_COMPANY,
		   BM.CD_PLANT,
		   BM.CD_ITEM_T,
		   PB.CD_ITEM, 
		   PB.CD_MATL, 
		   LEVEL + 1, 
		   CONVERT(VARCHAR(1000), PATH + ' -> ' + PB.CD_MATL),
		   PB.QT_ITEM_NET
	FROM BOM BM
	JOIN PR_ROUT_ASN PB ON PB.CD_ITEM = BM.CD_MATL AND PB.NO_OPPATH = @P_NO_OPPATH
	JOIN PR_BOM PB1 ON PB1.CD_COMPANY = PB.CD_COMPANY AND PB1.CD_PLANT = PB.CD_PLANT AND PB1.CD_ITEM = PB.CD_ITEM AND PB1.CD_MATL = PB.CD_MATL AND PB1.DT_END >= CONVERT(CHAR(8), GETDATE(), 112)
	WHERE EXISTS (SELECT 1 
				  FROM MA_PITEM MI 
				  WHERE MI.CD_COMPANY = PB.CD_COMPANY 
				  AND MI.CD_PLANT = PB.CD_PLANT 
				  AND MI.CD_ITEM = PB.CD_MATL
				  AND MI.TP_PROC IN ('M', 'P', 'S')
				  AND ISNULL(MI.YN_USE, 'N') = 'Y')
	AND EXISTS (SELECT 1 
		        FROM PR_ROUT_L RL
		        WHERE RL.CD_COMPANY = PB.CD_COMPANY
		        AND RL.CD_PLANT = PB.CD_PLANT
		        AND RL.CD_ITEM = PB.CD_ITEM
		        AND RL.NO_OPPATH = PB.NO_OPPATH
		        AND RL.TP_OPPATH = PB.TP_OPPATH
		        AND RL.CD_OP = PB.CD_OP
			    AND RL.YN_USE = 'Y')
)
INSERT INTO #BOM
SELECT CD_COMPANY, 
	   CD_PLANT, 
	   CD_ITEM_T, 
	   CD_ITEM, 
	   CD_MATL, 
	   LEVEL, 
	   PATH, 
	   QT 
FROM BOM;

WITH A AS
(
	SELECT SH.CD_COMPANY, -- 해당 수주건 모품목
		   SH.NO_SO,
		   SL.CD_PLANT,
		   SL.CD_ITEM,
		   SL.CD_ITEM AS CD_MATL,
		   SL.DT_DUEDATE,
		   SH.NO_SO AS NO_SO_FROM,
		   SL.SEQ_SO AS SEQ_SO_FROM,
		   SL.CD_ITEM AS CD_ITEM_FROM,
		   SL.QT_SO,
		   SL.QT_GIR,
		   SL.QT_GI,
		   WS.QT_APPLY,
		   PL.QT_PR,
		   SR.QT_SU_PR,
		   ST.QT_STOCK,
	       0 AS LEVEL,
		   1 AS QT_BOM,
		   SL.QT_SO AS QT_NEED,
		   SH.DT_SO,
		   SH.CD_PARTNER,
		   SH.NO_PO_PARTNER,
		   SL.CD_USERDEF1,
		   SL.CD_USERDEF3,
		   SL.TXT_USERDEF6
	FROM SA_SOH SH
	JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SH.CD_COMPANY AND WS.NO_SO = SH.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
				      SUM(PL.QT_PR) AS QT_PR
		       FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
			   JOIN PU_PRL PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PR = PL.NO_PR AND PL1.NO_PRLINE = PL.NO_PRLINE
		       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
    ON PL.CD_COMPANY = SH.CD_COMPANY AND PL.NO_SO = SH.NO_SO AND PL.NO_LINE = SL.SEQ_SO AND PL.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
			   	      SUM(SR.QT_PR) AS QT_SU_PR
			   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
			   JOIN SU_PRL SR1 ON SR1.CD_COMPANY = SR.CD_COMPANY AND SR1.NO_PR = SR.NO_PR AND SR1.NO_LINE = SR.NO_LINE
			   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
    ON SR.CD_COMPANY = SH.CD_COMPANY AND SR.NO_SO = SH.NO_SO AND SR.NO_LINE = SL.SEQ_SO AND SR.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.NO_SO = SH.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = SL.CD_ITEM
	WHERE SH.CD_COMPANY = @P_CD_COMPANY
	AND SH.NO_SO = @P_NO_SO
	AND SL.CD_ITEM = @P_CD_ITEM
	AND SL.CD_ITEM = @P_CD_MATL
	AND SL.DT_DUEDATE BETWEEN @P_DT_FROM AND @P_DT_TO
	AND (@P_YN_GIR = 'N' OR SL.QT_SO > ISNULL(SL.QT_GIR, 0))
	AND (@P_YN_GI = 'N' OR SL.QT_SO > ISNULL(SL.QT_GI, 0))
	AND (@P_YN_CLOSE = 'N' OR ISNULL(SH.STA_SO, '') <> 'C')
	AND (@P_YN_STOCK = 'N' OR SL.QT_SO > ISNULL(ST.QT_STOCK, 0))
	AND (@P_YN_WO = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(WS.QT_APPLY, 0))
	AND (@P_YN_PR = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(PL.QT_PR, 0))
	AND (@P_YN_SU_PR = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(SR.QT_SU_PR, 0))
	UNION ALL
	SELECT SH.CD_COMPANY, -- 해당 수주건 자품목
		   SH.NO_SO,
		   SL.CD_PLANT,
		   SL.CD_ITEM,
		   BM.CD_MATL,
		   SL.DT_DUEDATE,
		   SH.NO_SO AS NO_SO_FROM,
		   SL.SEQ_SO AS SEQ_SO_FROM,
		   SL.CD_ITEM AS CD_ITEM_FROM,
		   SL.QT_SO,
		   SL.QT_GIR,
		   SL.QT_GI,
		   WS.QT_APPLY,
		   PL.QT_PR,
		   SR.QT_SU_PR,
		   ST.QT_STOCK,
	       BM.LEVEL,
		   BM.QT AS QT_BOM,
		   (BM.QT * SL.QT_SO) AS QT_NEED,
		   SH.DT_SO,
		   SH.CD_PARTNER,
		   SH.NO_PO_PARTNER,
		   SL.CD_USERDEF1,
		   SL.CD_USERDEF3,
		   SL.TXT_USERDEF6
	FROM SA_SOH SH
	JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
	JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_PLANT = SL.CD_PLANT AND BM.CD_ITEM_T = SL.CD_ITEM
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SH.CD_COMPANY AND WS.NO_SO = SH.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
				      SUM(PL.QT_PR) AS QT_PR
		       FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
			   JOIN PU_PRL PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PR = PL.NO_PR AND PL1.NO_PRLINE = PL.NO_PRLINE
		       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
    ON PL.CD_COMPANY = SH.CD_COMPANY AND PL.NO_SO = SH.NO_SO AND PL.NO_LINE = SL.SEQ_SO AND PL.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
			   	      SUM(SR.QT_PR) AS QT_SU_PR
			   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
			   JOIN SU_PRL SR1 ON SR1.CD_COMPANY = SR.CD_COMPANY AND SR1.NO_PR = SR.NO_PR AND SR1.NO_LINE = SR.NO_LINE
			   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
    ON SR.CD_COMPANY = SH.CD_COMPANY AND SR.NO_SO = SH.NO_SO AND SR.NO_LINE = SL.SEQ_SO AND SR.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.NO_SO = SH.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = BM.CD_MATL
	WHERE SH.CD_COMPANY = @P_CD_COMPANY
	AND SH.NO_SO = @P_NO_SO
	AND SL.CD_ITEM = @P_CD_ITEM
	AND BM.CD_MATL = @P_CD_MATL
	AND SL.DT_DUEDATE BETWEEN @P_DT_FROM AND @P_DT_TO
	AND (@P_YN_GIR = 'N' OR SL.QT_SO > ISNULL(SL.QT_GIR, 0))
	AND (@P_YN_GI = 'N' OR SL.QT_SO > ISNULL(SL.QT_GI, 0))
	AND (@P_YN_CLOSE = 'N' OR ISNULL(SH.STA_SO, '') <> 'C')
	AND (@P_YN_STOCK = 'N' OR (BM.QT * SL.QT_SO) > ISNULL(ST.QT_STOCK, 0))
	AND (@P_YN_WO = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(WS.QT_APPLY, 0))
	AND (@P_YN_PR = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(PL.QT_PR, 0))
	AND (@P_YN_SU_PR = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(SR.QT_SU_PR, 0))

),
B AS
(
	SELECT SH.CD_COMPANY, -- 타 수주건 모품목
		   A.NO_SO,
		   A.CD_PLANT,
		   A.CD_ITEM,
		   A.CD_MATL,
		   SL.DT_DUEDATE,
		   SH.NO_SO AS NO_SO_FROM,
		   SL.SEQ_SO AS SEQ_SO_FROM,
		   SL.CD_ITEM AS CD_ITEM_FROM,
		   SL.QT_SO,
		   SL.QT_GIR,
		   SL.QT_GI,
		   WS.QT_APPLY,
		   PL.QT_PR,
		   SR.QT_SU_PR,
		   ST.QT_STOCK,
	       0 AS LEVEL,
		   1 AS QT_BOM,
		   SL.QT_SO AS QT_NEED,
		   SH.DT_SO,
		   SH.CD_PARTNER,
		   SH.NO_PO_PARTNER,
		   SL.CD_USERDEF1,
		   SL.CD_USERDEF3,
		   SL.TXT_USERDEF6
	FROM SA_SOH SH
	JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SH.CD_COMPANY AND WS.NO_SO = SH.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
				      SUM(PL.QT_PR) AS QT_PR
		       FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
			   JOIN PU_PRL PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PR = PL.NO_PR AND PL1.NO_PRLINE = PL.NO_PRLINE
		       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
    ON PL.CD_COMPANY = SH.CD_COMPANY AND PL.NO_SO = SH.NO_SO AND PL.NO_LINE = SL.SEQ_SO AND PL.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
			   	      SUM(SR.QT_PR) AS QT_SU_PR
			   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
			   JOIN SU_PRL SR1 ON SR1.CD_COMPANY = SR.CD_COMPANY AND SR1.NO_PR = SR.NO_PR AND SR1.NO_LINE = SR.NO_LINE
			   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
    ON SR.CD_COMPANY = SH.CD_COMPANY AND SR.NO_SO = SH.NO_SO AND SR.NO_LINE = SL.SEQ_SO AND SR.CD_ITEM = SL.CD_ITEM
	LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.NO_SO = SH.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = SL.CD_ITEM
	JOIN A ON A.CD_COMPANY = SL.CD_COMPANY AND A.CD_MATL = SL.CD_ITEM
	WHERE SH.CD_COMPANY = @P_CD_COMPANY
	AND SH.NO_SO <> @P_NO_SO
	AND SL.DT_DUEDATE BETWEEN @P_DT_FROM AND @P_DT_TO
	AND (@P_YN_GIR = 'N' OR SL.QT_SO > ISNULL(SL.QT_GIR, 0))
	AND (@P_YN_GI = 'N' OR SL.QT_SO > ISNULL(SL.QT_GI, 0))
	AND (@P_YN_CLOSE = 'N' OR ISNULL(SH.STA_SO, '') <> 'C')
	AND (@P_YN_STOCK = 'N' OR SL.QT_SO > ISNULL(ST.QT_STOCK, 0))
	AND (@P_YN_WO = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(WS.QT_APPLY, 0))
	AND (@P_YN_PR = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(PL.QT_PR, 0))
	AND (@P_YN_SU_PR = 'N' OR (SL.QT_SO - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(SR.QT_SU_PR, 0))
	UNION ALL
	SELECT SH.CD_COMPANY, -- 타 수주건 자품목
		   A.NO_SO,
		   A.CD_PLANT,
		   A.CD_ITEM,
		   A.CD_MATL,
		   SL.DT_DUEDATE,
		   SH.NO_SO AS NO_SO_FROM,
		   SL.SEQ_SO AS SEQ_SO_FROM,
		   SL.CD_ITEM AS CD_ITEM_FROM,
		   SL.QT_SO,
		   SL.QT_GIR,
		   SL.QT_GI,
		   WS.QT_APPLY,
		   PL.QT_PR,
		   SR.QT_SU_PR,
		   ST.QT_STOCK,
	       BM.LEVEL,
		   BM.QT AS QT_BOM,
		   (BM.QT * SL.QT_SO) AS QT_NEED,
		   SH.DT_SO,
		   SH.CD_PARTNER,
		   SH.NO_PO_PARTNER,
		   SL.CD_USERDEF1,
		   SL.CD_USERDEF3,
		   SL.TXT_USERDEF6
	FROM SA_SOH SH
	JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
	JOIN #BOM BM ON BM.CD_COMPANY = SL.CD_COMPANY AND BM.CD_PLANT = SL.CD_PLANT AND BM.CD_ITEM_T = SL.CD_ITEM
	LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
					  SUM(WS.QT_APPLY) AS QT_APPLY
			   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
			   JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
			   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
	ON WS.CD_COMPANY = SH.CD_COMPANY AND WS.NO_SO = SH.NO_SO AND WS.NO_LINE = SL.SEQ_SO AND WS.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
				      SUM(PL.QT_PR) AS QT_PR
		       FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
			   JOIN PU_PRL PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PR = PL.NO_PR AND PL1.NO_PRLINE = PL.NO_PRLINE
		       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
    ON PL.CD_COMPANY = SH.CD_COMPANY AND PL.NO_SO = SH.NO_SO AND PL.NO_LINE = SL.SEQ_SO AND PL.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
			   	      SUM(SR.QT_PR) AS QT_SU_PR
			   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
			   JOIN SU_PRL SR1 ON SR1.CD_COMPANY = SR.CD_COMPANY AND SR1.NO_PR = SR.NO_PR AND SR1.NO_LINE = SR.NO_LINE
			   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
    ON SR.CD_COMPANY = SH.CD_COMPANY AND SR.NO_SO = SH.NO_SO AND SR.NO_LINE = SL.SEQ_SO AND SR.CD_ITEM = BM.CD_MATL
	LEFT JOIN (SELECT QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM, 
    		   	      SUM(QL.QT_GI) AS QT_STOCK
    		   FROM MM_GIREQH QH
    		   JOIN MM_GIREQL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_GIREQ = QH.NO_GIREQ
    		   WHERE QL.CD_SL = 'SL_STND'
    		   GROUP BY QH.CD_COMPANY, QL.NO_SO, QL.SEQ_SO, QL.CD_ITEM) ST
    ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.NO_SO = SH.NO_SO AND ST.SEQ_SO = SL.SEQ_SO AND ST.CD_ITEM = BM.CD_MATL
	JOIN A ON A.CD_COMPANY = BM.CD_COMPANY AND A.CD_MATL = BM.CD_MATL
	WHERE SH.CD_COMPANY = @P_CD_COMPANY
	AND SH.NO_SO <> @P_NO_SO
	AND SL.DT_DUEDATE BETWEEN @P_DT_FROM AND @P_DT_TO
	AND (@P_YN_GIR = 'N' OR SL.QT_SO > ISNULL(SL.QT_GIR, 0))
	AND (@P_YN_GI = 'N' OR SL.QT_SO > ISNULL(SL.QT_GI, 0))
	AND (@P_YN_CLOSE = 'N' OR ISNULL(SH.STA_SO, '') <> 'C')
	AND (@P_YN_STOCK = 'N' OR (BM.QT * SL.QT_SO) > ISNULL(ST.QT_STOCK, 0))
	AND (@P_YN_WO = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(WS.QT_APPLY, 0))
	AND (@P_YN_PR = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(PL.QT_PR, 0))
	AND (@P_YN_SU_PR = 'N' OR ((BM.QT * SL.QT_SO) - (CASE WHEN @P_YN_STOCK = 'Y' THEN ISNULL(ST.QT_STOCK, 0) ELSE 0 END)) > ISNULL(SR.QT_SU_PR, 0))
),
C AS
(
	SELECT * FROM A
	UNION ALL
	SELECT * FROM B
),
D AS
(
	SELECT C.CD_COMPANY,
		   C.NO_SO,
		   C.CD_PLANT,
		   C.CD_ITEM,
		   C.CD_MATL,
		   C.DT_DUEDATE,
		   C.NO_SO_FROM,
		   C.SEQ_SO_FROM,
		   C.CD_ITEM_FROM,
		   C.LEVEL,
		   C.QT_SO,
		   C.QT_GIR,
		   C.QT_GI,
		   C.QT_APPLY,
		   C.QT_PR,
		   C.QT_SU_PR,
		   C.QT_STOCK,
	       C.QT_BOM,
		   C.QT_NEED,
		   C.DT_SO,
		   C.CD_PARTNER,
		   C.NO_PO_PARTNER,
		   C.CD_USERDEF1,
		   C.CD_USERDEF3,
		   C.TXT_USERDEF6
	FROM C
)
SELECT 'N' AS S,
       D.NO_SO,
	   D.CD_ITEM,
	   D.CD_MATL,
	   D.DT_DUEDATE,
	   D.NO_SO_FROM,
	   D.SEQ_SO_FROM,
	   D.CD_ITEM_FROM,
	   MI.NM_ITEM,
	   MI.NO_DESIGN,
	   D.LEVEL,
	   WS.NO_WO,
	   WS.NO_WO_SO,
	   PL.NO_PR,
	   SR.NO_SU_PR,
	   D.QT_SO,
	   ISNULL(D.QT_APPLY, 0) AS QT_APPLY,
	   ISNULL(D.QT_PR, 0) AS QT_PR,
	   ISNULL(D.QT_SU_PR, 0) AS QT_SU_PR,
	   ISNULL(D.QT_GIR, 0) AS QT_GIR,
	   ISNULL(D.QT_GI, 0) AS QT_GI,
	   ISNULL(D.QT_STOCK, 0) AS QT_STOCK,
	   D.QT_BOM,
	   D.QT_NEED,
	   (((ISNULL(D.QT_SO, 0) - ISNULL(D.QT_GIR, 0)) * ISNULL(D.QT_BOM, 0)) - (ISNULL(D.QT_APPLY, 0) + ISNULL(D.QT_PR, 0) + ISNULL(D.QT_SU_PR, 0) + ISNULL(D.QT_STOCK, 0))) AS QT_REQ_OLD,
	   (CASE WHEN @P_YN_REQ = 'Y' THEN (((ISNULL(D.QT_SO, 0) - ISNULL(D.QT_GIR, 0)) * ISNULL(D.QT_BOM, 0)) - (ISNULL(D.QT_APPLY, 0) + ISNULL(D.QT_PR, 0) + ISNULL(D.QT_SU_PR, 0) + ISNULL(D.QT_STOCK, 0))) ELSE 0 END) AS QT_REQ,
	   0 AS QT_STOCK_REQ,
	   D.DT_SO,
	   MP.LN_PARTNER,
	   D.NO_PO_PARTNER,
	   MC.NM_SYSDEF AS NM_ENGINE,
	   MC1.NM_SYSDEF AS NM_CLASS,
	   D.TXT_USERDEF6 AS NO_HULL,
	   MI.UNIT_SO
FROM D
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = D.CD_COMPANY AND MI.CD_PLANT = D.CD_PLANT AND MI.CD_ITEM = D.CD_ITEM_FROM
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = D.CD_COMPANY AND MP.CD_PARTNER = D.CD_PARTNER
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = D.CD_COMPANY AND MC.CD_FIELD = 'CZ_WIN0003' AND MC.CD_SYSDEF = D.CD_USERDEF3
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = D.CD_COMPANY AND MC1.CD_FIELD = 'CZ_WIN0001' AND MC1.CD_SYSDEF = D.CD_USERDEF1
LEFT JOIN (SELECT WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM,
				  MAX(WS.NO_WO) AS NO_WO,
				  MAX(WO.NO_SO) AS NO_WO_SO
		   FROM CZ_PR_SA_SOL_PR_WO_MAPPING WS
		   LEFT JOIN PR_WO WO ON WO.CD_COMPANY = WS.CD_COMPANY AND WO.NO_WO = WS.NO_WO
		   GROUP BY WS.CD_COMPANY, WS.NO_SO, WS.NO_LINE, WS.CD_ITEM) WS
ON WS.CD_COMPANY = D.CD_COMPANY AND WS.NO_SO = D.NO_SO_FROM AND WS.NO_LINE = D.SEQ_SO_FROM AND WS.CD_ITEM = D.CD_MATL
LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM,
				  MAX(PL.NO_PR) AS NO_PR
		   FROM CZ_PR_SA_SOL_PU_PRL_MAPPING PL
		   GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_LINE, PL.CD_ITEM) PL 
ON PL.CD_COMPANY = D.CD_COMPANY AND PL.NO_SO = D.NO_SO_FROM AND PL.NO_LINE = D.SEQ_SO_FROM AND PL.CD_ITEM = D.CD_MATL
LEFT JOIN (SELECT SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM,
		   	      MAX(SR.NO_PR) AS NO_SU_PR
		   FROM CZ_PR_SA_SOL_SU_PRL_MAPPING SR
		   GROUP BY SR.CD_COMPANY, SR.NO_SO, SR.NO_LINE, SR.CD_ITEM) SR 
ON SR.CD_COMPANY = D.CD_COMPANY AND SR.NO_SO = D.NO_SO_FROM AND SR.NO_LINE = D.SEQ_SO_FROM AND SR.CD_ITEM = D.CD_MATL
ORDER BY D.DT_DUEDATE ASC
OPTION(RECOMPILE)

GO