USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[UP_CZ_PU_INV_SCH2_SELECT]    Script Date: 2022-03-28 오후 3:02:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROC [NEOE].[UP_CZ_PU_INV_SCH2_SELECT]              
(              
 @P_CD_COMPANY                NVARCHAR(7),              
 @P_CD_PLANT                  NVARCHAR(7),              
 @P_DT                        NVARCHAR(8),    -- 기준일자                    
 @P_ITEM	                  NVARCHAR(50)
)              
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
           
BEGIN      
SELECT @P_CD_PLANT AS CD_PLANT,
	UPPER(X.CD_ITEM) AS CD_ITEM,       
	MAX(ISNULL(P.NM_ITEM, '')) AS NM_ITEM,     
	MAX(ISNULL(P.NO_DESIGN, '')) AS NO_DESIGN,
	MAX(ISNULL(P.STND_ITEM, '')) AS STND_ITEM,            
	MAX(P.FG_ABC) AS FG_ABC, --색깔구별컬럼          
	'FALSE' AS FG_VAL,        -- 금액이 0이면 0 그렇지 않으면 1 (금액이 모두 0인것은 필터처리하기위함)	   
	MAX(ISNULL(MC1.NM_SYSDEF, '')) AS NM_CLS_L,          
	MAX(ISNULL(MC2.NM_SYSDEF, '')) AS NM_CLS_M,           
	MAX(ISNULL(MC3.NM_SYSDEF, '')) AS NM_CLS_S,  --20090210 추가        
	MAX(ISNULL(P.CD_ZONE,'')) AS CD_ZONE, -- 2011/01/31 컬럼 추가       
	MAX(ISNULL(E1.NM_KOR,'')) AS NM_KOR1,   -- 관리자 1      
	MAX(ISNULL(E2.NM_KOR,'')) AS NM_KOR2,   -- 관리자 2      
	MAX(MC4.NM_SYSDEF) AS CLS_ITEM,    -- 계정구분      
	MAX(ISNULL(MC6.NM_SYSDEF, '' )) AS NM_GRP_MFG, -- 제품군 컬럼 추가  2011.04.05 (송철호)       
	MAX(ISNULL(MC5.NM_SYSDEF, '' )) AS NM_TP_ITEM, -- 품목타입 컬럼 추가2011-03-31 (송철호)      
	MAX(ISNULL(MI.NM_ITEMGRP, '' )) AS NM_ITEMGRP, -- 품목군 컬럼 추가 2011-03-31 (송철호)      
	MAX(CASE WHEN P.FG_SERNO = '001' THEN '미관리' ELSE ISNULL(MC7.NM_SYSDEF, '') END) AS FG_SERNO, -- S/N,LOT관리 컬럼추가 2011.05.12 (최규원)    
	MAX(ISNULL(MG.NM_PURGRP,'')) AS NM_PURGRP , /*품목 구매그룹*/     
	MAX(ISNULL(P.STND_DETAIL_ITEM,'')) AS STND_DETAIL_ITEM,
	MAX(ISNULL(P.MAT_ITEM,'')) AS MAT_ITEM,
	MAX(ISNULL(P.GRP_ITEM,'')) AS GRP_ITEM,
    MAX(ISNULL(P.GRP_MFG,'')) AS GRP_MFG,
    MAX(ISNULL(P.PARTNER,'')) AS PARTNER,
    MAX(ISNULL(MP.LN_PARTNER,'')) AS LN_PARTNER,
    ISNULL(MAX(P.BARCODE),'') AS BARCODE,    
    ISNULL(MAX(P.EN_ITEM),'') EN_ITEM,
	MAX(CASE WHEN ( ISNULL(P.IMAGE1,'') = '' AND ISNULL(P.IMAGE2,'') = '' 
				AND ISNULL(P.IMAGE3,'') = '' AND ISNULL(P.IMAGE4,'') = '' 
				AND ISNULL(P.IMAGE5,'') = '' AND ISNULL(P.IMAGE6,'') = ''  ) THEN 'N' ELSE 'Y' END) YN_IMAGE,
    X.CD_SL, 			
	'1' AS NUM,
	/*신규 컬럼추가시 아래의 UNIT_IM , NM_SL, QT_INV 은 항상 맨 하단에 존재해야합니다*/      
	MAX(ISNULL(P.UNIT_IM, '')) AS UNIT_IM,               
	MAX(CASE WHEN S.NM_SL IS NULL THEN X.CD_SL ELSE S.NM_SL END) AS NM_SL,          
	SUM(X.QT_INV) AS QT_INV      
FROM (              
   SELECT 
		CD_SL
	,	CD_ITEM
	,	QT_GOOD_INV QT_INV             
   FROM MM_OPENQTL              
   WHERE CD_COMPANY = @P_CD_COMPANY              
    AND CD_PLANT = @P_CD_PLANT      
	AND CD_SL != 'SL_FAUL'
    AND YM_STANDARD = LEFT(@P_DT, 4) + '00'         
    AND (CD_ITEM = @P_ITEM OR @P_ITEM = '' OR @P_ITEM IS NULL)               
                 
   UNION ALL              
                 
   SELECT 
		CD_SL
	,	CD_ITEM
	,	SUM(QT_GOOD_GR + QT_REJECT_GR + QT_INSP_GR + QT_TRANS_GR) - SUM(QT_GOOD_GI + QT_REJECT_GI + QT_INSP_GI + QT_TRANS_GI) QT_INV            
   FROM MM_OHSLINVM              
   WHERE CD_COMPANY = @P_CD_COMPANY    
	AND CD_SL != 'SL_FAUL'
    AND YM_IO >= LEFT(@P_DT, 4) + '00'           
    AND YM_IO <= LEFT(@P_DT, 6) - 1              
    AND CD_PLANT = @P_CD_PLANT      
    AND (CD_ITEM = @P_ITEM OR @P_ITEM = '' OR @P_ITEM IS NULL)                      
   GROUP BY CD_SL , CD_ITEM              
                 
   UNION ALL              
                 
   SELECT
		L.CD_SL
	,	L.CD_ITEM
	,	SUM(L.QT_GOOD_GR - L.QT_GOOD_GI + L.QT_REJECT_GR - L.QT_REJECT_GI + L.QT_TRANS_GR - L.QT_TRANS_GI + L.QT_INSP_GR - L.QT_INSP_GI) AS QT_INV                    
   FROM MM_OHSLINVD L         
   INNER JOIN DZSN_MA_PITEM P ON P.CD_COMPANY = L.CD_COMPANY AND P.CD_PLANT = L.CD_PLANT AND P.CD_ITEM = L.CD_ITEM
   WHERE L.CD_COMPANY = @P_CD_COMPANY
	 AND L.CD_SL != 'SL_FAUL'
     AND L.CD_PLANT = @P_CD_PLANT
     AND L.DT_IO <= @P_DT
     AND L.DT_IO > LEFT(@P_DT, 6) + '00'
     AND (L.CD_ITEM = @P_ITEM OR @P_ITEM = '' OR @P_ITEM IS NULL)
   GROUP BY L.CD_SL, L.CD_ITEM
) X
INNER JOIN DZSN_MA_PITEM P ON P.CD_COMPANY = @P_CD_COMPANY AND P.CD_PLANT = @P_CD_PLANT AND P.CD_ITEM = X.CD_ITEM
LEFT OUTER JOIN DZSN_MA_SL S ON S.CD_COMPANY = @P_CD_COMPANY AND S.CD_PLANT =  @P_CD_PLANT AND S.CD_SL = X.CD_SL
LEFT OUTER JOIN DZSN_MA_CODEDTL MC1 ON P.CD_COMPANY = MC1.CD_COMPANY AND MC1.CD_FIELD = 'MA_B000030' AND P.CLS_L = MC1.CD_SYSDEF              
LEFT OUTER JOIN DZSN_MA_CODEDTL MC2 ON P.CD_COMPANY = MC2.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000031' AND P.CLS_M = MC2.CD_SYSDEF              
LEFT OUTER JOIN DZSN_MA_CODEDTL MC3 ON P.CD_COMPANY = MC3.CD_COMPANY AND MC3.CD_FIELD = 'MA_B000032' AND P.CLS_S = MC3.CD_SYSDEF      
LEFT OUTER JOIN DZSN_MA_CODEDTL MC4 ON P.CD_COMPANY = MC4.CD_COMPANY AND MC4.CD_FIELD = 'MA_B000010' AND P.CLS_ITEM = MC4.CD_SYSDEF      
LEFT OUTER JOIN DZSN_MA_CODEDTL MC5 ON P.CD_COMPANY = MC5.CD_COMPANY AND MC5.CD_FIELD = 'MA_B000011' AND P.TP_ITEM = MC5.CD_SYSDEF      
LEFT OUTER JOIN DZSN_MA_CODEDTL MC6 ON P.CD_COMPANY = MC6.CD_COMPANY AND MC6.CD_FIELD = 'MA_B000066' AND P.GRP_MFG = MC6.CD_SYSDEF      
LEFT OUTER JOIN DZSN_MA_CODEDTL MC7 ON P.CD_COMPANY = MC7.CD_COMPANY AND MC7.CD_FIELD = 'MA_B000015' AND P.FG_SERNO = MC7.CD_SYSDEF    
LEFT OUTER JOIN DZSN_MA_EMP E1 ON P.CD_COMPANY = E1.CD_COMPANY AND P.NO_MANAGER1 = E1.NO_EMP      
LEFT OUTER JOIN DZSN_MA_EMP E2 ON P.CD_COMPANY = E2.CD_COMPANY AND P.NO_MANAGER2 = E2.NO_EMP      
LEFT OUTER JOIN DZSN_MA_ITEMGRP MI ON P.GRP_ITEM = MI.CD_ITEMGRP AND P.CD_COMPANY = MI.CD_COMPANY      
LEFT OUTER JOIN DZSN_MA_PURGRP  MG ON P.CD_COMPANY = MG.CD_COMPANY AND P.CD_PURGRP = MG.CD_PURGRP    
LEFT OUTER JOIN DZSN_MA_PARTNER MP ON MP.CD_COMPANY = P.CD_COMPANY AND MP.CD_PARTNER = P.PARTNER  
WHERE  X.QT_INV <> 0                   
GROUP BY X.CD_ITEM, X.CD_SL
ORDER BY X.CD_ITEM, X.CD_SL      

OPTION(RECOMPILE)

END
GO


