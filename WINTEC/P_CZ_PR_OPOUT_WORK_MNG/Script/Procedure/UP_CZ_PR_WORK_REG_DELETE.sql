USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[UP_CZ_PR_WORK_REG_DELETE]    Script Date: 2022-08-25 오후 3:47:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[UP_CZ_PR_WORK_REG_DELETE] 
( 
	@P_CD_COMPANY		NVARCHAR(7), 
	@P_NO_WORK			NVARCHAR(20), 
	@P_NO_WO			NVARCHAR(20), 
	@P_CD_PLANT			NVARCHAR(7), 
	@P_CD_OP			NVARCHAR(4), 
	@P_QT_WORK			NUMERIC(17,4), 
	@P_QT_REJECT		NUMERIC(17,4), 
	@P_QT_MOVE			NUMERIC(17,4), 
	@P_CD_WC			NVARCHAR(7),
	@P_NO_WORK_TRACKING NVARCHAR(20) = ''
) 
AS 

DECLARE 
	@ERRMSG				NVARCHAR(255), 
	@V_SERVERKEY		NVARCHAR(50),
	@V_CNT				INT, 
	
	@V_YN_AUTORCV_REQ	NCHAR(1),			-- 생산품자동입고의뢰처리 
	@V_YN_AUTORCV		NCHAR(1),			-- 생산품자동입고처리 
	@V_YN_AUTOBAD_REQ	NCHAR(1),			-- 생산품불량자동입고의뢰 처리
	@V_YN_AUTOBAD_RCV	NCHAR(1),			-- 생산품불량자동입고 처리
	
	@V_NEXT_CD_OP		NVARCHAR(4), 
	@V_QT_REMAIN		NUMERIC(17, 4), 
	
	@A_NO_LINE_PR_WORKL	NUMERIC(5, 0), 
	
	@V_ROUT_REL_QT_REL	NUMERIC(17, 4),		-- 작업지시분할 수량
	@V_ROUT_REL_QT_MOVE NUMERIC(17, 4),		-- 작업지시분할 이동수량
	@V_ROUT_REL_QT_BAD	NUMERIC(17, 4),		-- 작업지시분할 불량수량
	@V_NO_REL			NVARCHAR(20),		-- 작업지시분할 번호
	
	@V_NO_REQ			NVARCHAR(20),		-- 생산입고의뢰번호 : 수불전 검사, 의뢰번호기준 일때에만 쓰임

	@V_EXC_MESPOP		NVARCHAR(3),		-- [물류/제조환경설정] MES_POP연동옵션
	@V_EXC_OPOUT		NVARCHAR(3),		-- [물류/제조환경설정] 공정외주발주등록-적용기준
	@V_EXC_QC			NVARCHAR(3),		-- [물류/제조환경설정] 생산입고등록_검사

	@V_BARCODE			NVARCHAR(200),		-- [삼륭물산 전용]
	@V_BARCODE_QTY		NUMERIC(17, 4),		-- [삼륭물산 전용]
	@A_NO_WORK_CUR		NVARCHAR(20),		-- [리캠 전용]
	@A_QT_WORK_CUR		NUMERIC(17, 4),		-- [리캠 전용]
	@V_Z_QT_SUM			NUMERIC(17, 4),		-- [리캠 전용] 실적수량SUM값, 투입수량SUM값
	@V_NO_LABEL			NVARCHAR(20)		-- [원봉 전용] MES번호
	
SELECT @V_SERVERKEY = MAX(SERVER_KEY) FROM CM_SERVER_CONFIG WHERE YN_UPGRADE = 'Y'

IF @V_SERVERKEY LIKE 'HANYANGW%'
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
END

SELECT	@V_YN_AUTORCV_REQ = ISNULL(YN_AUTORCV_REQ,'N'), -- 생산품자동입고의뢰처리 
		@V_YN_AUTORCV	  = ISNULL(YN_AUTORCV,'N')		-- 생산품자동입고처리 
FROM	PR_WO 
WHERE	CD_COMPANY	= @P_CD_COMPANY 
AND		CD_PLANT	= @P_CD_PLANT 
AND		NO_WO		= @P_NO_WO 

-- 아미코젠의 경우 삭제시는 작업지시가 아닌 공장환경설정의 옵션을 바라봄
-- 작업지시는 디폴트 N으로 들어가지만, 전용 실적메뉴에서 삭제시 입고의뢰, 입고 도 삭제되야 하기때문
IF @V_SERVERKEY LIKE 'AMICOGEN%'
BEGIN
	SELECT	@V_YN_AUTORCV_REQ = ISNULL(YN_AUTORCV_REQ,'N'), -- 생산품자동입고의뢰처리 
			@V_YN_AUTORCV	  = ISNULL(YN_AUTORCV,'N')		-- 생산품자동입고처리 
	FROM	PR_CFG_PLANT 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
END

SELECT	@V_YN_AUTOBAD_REQ = ISNULL(YN_AUTOBAD_REQ, 'N'),-- 생산품자동불량입고의뢰처리
		@V_YN_AUTOBAD_RCV = ISNULL(YN_AUTOBAD_RCV, 'N') -- 생산품자동부량처리
FROM	PR_CFG_PLANT 
WHERE	CD_COMPANY	= @P_CD_COMPANY 
AND		CD_PLANT	= @P_CD_PLANT 

SELECT	@V_NEXT_CD_OP = MIN(CD_OP) 
FROM	PR_WO_ROUT 
WHERE	CD_COMPANY	= @P_CD_COMPANY 
AND		CD_PLANT	= @P_CD_PLANT 
AND		NO_WO		= @P_NO_WO 
AND		CD_OP		> @P_CD_OP
	
SELECT	@V_EXC_MESPOP = CD_EXC 
FROM	MA_EXC  
WHERE	CD_COMPANY = @P_CD_COMPANY 
AND		EXC_TITLE  = 'MES_POP연동옵션' 

IF (@V_EXC_MESPOP = '' OR @V_EXC_MESPOP IS NULL) SET @V_EXC_MESPOP = '000'

-- 2014.05.09 정찬용, 김현수 D20140422011, D20140422013
-- 물류제조환경설정 -> 공정외주발주등록-적용기준 -> 100 : 작업실적적용 일 경우
-- PR_OPOUT_POL.NO_WORK에 이전공정의 실적번호를 물려주고 있으므로
-- PR_OPOUT_POL.NO_WORK에 없는 실적번호를 삭제하려고 할 경우
-- 아직 공정외주발주가 안 된 것으로 간주하여 삭제처리 할 수 있도록 분리함.
SELECT	@V_EXC_OPOUT = CD_EXC
FROM	MA_EXC
WHERE	CD_COMPANY = @P_CD_COMPANY
AND		EXC_TITLE  = '공정외주발주등록-적용기준'

IF (@V_EXC_OPOUT = '' OR @V_EXC_OPOUT IS NULL) SET @V_EXC_OPOUT = '000'

--'000', 'QU', '000 : 사용안함(기본), 100 : 수불전검사, 200 : 수불후검사'
SELECT	@V_EXC_QC = CD_EXC 
FROM	MA_EXC
WHERE	CD_COMPANY = @P_CD_COMPANY
AND		EXC_TITLE  = '생산입고등록_검사'

IF (@V_EXC_QC = '' OR @V_EXC_QC IS NULL) SET @V_EXC_QC = '000'

-- 유효성 체크
BEGIN 
	IF (@V_YN_AUTORCV_REQ = 'N') 
	BEGIN 
		SELECT	@V_CNT = SUM(ISNULL(QT_REQ, 0)) 
		FROM	PR_RCVL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_WO		= @P_NO_WO 

		IF(ISNULL(@V_CNT, 0) <> 0) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]생산 입고 의뢰가 있습니다. 입고 의뢰를 먼저 삭제 하세요.' 
			GOTO ERROR 
		END 
	END 

	IF (@V_YN_AUTORCV = 'N') 
	BEGIN 
		SELECT	@V_CNT = SUM(ISNULL(QT_RCV, 0)) 
		FROM	PR_RCVL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_WO		= @P_NO_WO 

		IF(ISNULL(@V_CNT, 0) <> 0) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]생산 입고가 있습니다. 입고를 먼저 삭제 하세요.' 
			GOTO ERROR 
		END 
	END 


	IF (@V_YN_AUTOBAD_REQ = 'N')
	BEGIN
		SELECT	@V_CNT = SUM(ISNULL(QT_REQ, 0)) 
		FROM	PR_RCVL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_WO		= @P_NO_WO
		AND		YN_BAD_PROC = 'Y' 

		IF(ISNULL(@V_CNT, 0) <> 0) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]생산 불량입고의뢰가 있습니다. 의뢰를 먼저 삭제 하세요.' 
			GOTO ERROR 
		END 
	END

	ELSE IF (@V_YN_AUTOBAD_RCV = 'N')
	BEGIN
		SELECT	@V_CNT = SUM(ISNULL(QT_RCV, 0)) 
		FROM	PR_RCVL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_WO		= @P_NO_WO
		AND		YN_BAD_PROC = 'Y' 

		IF(ISNULL(@V_CNT, 0) <> 0) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]생산 불량입고가 있습니다. 불량입고를 먼저 삭제 하세요.' 
			GOTO ERROR 
		END
	END

	--삭제 전 체크(해당실적의 불량실적이 있는 경우 해당 불량실적을 재작업, 불량, 불량처리가 있는 경우 삭제 불가 
	DECLARE CUR_PR_WORKL_DEL_CHECK CURSOR FOR 

		SELECT NO_LINE 
		  FROM PR_WORKL 
		 WHERE CD_COMPANY = @P_CD_COMPANY 
		   AND NO_WORK	  = @P_NO_WORK 
		   AND NO_WO	  = @P_NO_WO 
		   
	OPEN CUR_PR_WORKL_DEL_CHECK 
	FETCH NEXT FROM CUR_PR_WORKL_DEL_CHECK INTO @A_NO_LINE_PR_WORKL 
	WHILE(@@FETCH_STATUS = 0 ) 
	BEGIN 
		IF (EXISTS (SELECT 1 
					  FROM PR_WORKL 
					 WHERE CD_COMPANY  = @P_CD_COMPANY 
					   AND NO_WORK_SRC = @P_NO_WORK 
					   AND NO_LINE_SRC = @A_NO_LINE_PR_WORKL) ) 
		BEGIN 
			CLOSE CUR_PR_WORKL_DEL_CHECK 
			DEALLOCATE CUR_PR_WORKL_DEL_CHECK 
			
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]해당 작업실적(' + @P_NO_WORK + ')을 참조하고 있는 불량내역(PR_WORKL)이 있습니다. 삭제할 수 없습니다.' 
			GOTO ERROR 
		END 

		IF (EXISTS (SELECT 1 
					  FROM PR_WORKL_RE 
					 WHERE CD_COMPANY  = @P_CD_COMPANY 
					   AND NO_WORK_SRC = @P_NO_WORK 
					   AND NO_LINE_SRC = @A_NO_LINE_PR_WORKL) ) 
		BEGIN 
			CLOSE CUR_PR_WORKL_DEL_CHECK 
			DEALLOCATE CUR_PR_WORKL_DEL_CHECK 
			
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]해당 작업실적(' + @P_NO_WORK + ')을 참조하고 있는 재작업내역(PR_WORKL_RE)이 있습니다. 삭제할 수 없습니다.' 
			GOTO ERROR 
		END 

		IF (EXISTS (SELECT 1 
					  FROM PR_WORK_BAD 
					 WHERE CD_COMPANY  = @P_CD_COMPANY 
					   AND NO_WORK_SRC = @P_NO_WORK 
					   AND NO_LINE_SRC = @A_NO_LINE_PR_WORKL) ) 
		BEGIN 
			-----------------------------------------------------------------------
			--업체전용 로직 : 불량내역(PR_WORK_BAD)이 있을시 자동삭제
			-----------------------------------------------------------------------
			IF (@V_SERVERKEY = 'NEDEC' OR @V_SERVERKEY = 'EDIYA' OR @V_SERVERKEY LIKE 'WINPLUS%')
			BEGIN
				DELETE 
				FROM	PR_WORK_BAD 
				WHERE	CD_COMPANY  = @P_CD_COMPANY 
				AND		NO_WORK_SRC = @P_NO_WORK 
				AND		NO_LINE_SRC = @A_NO_LINE_PR_WORKL
			END
			ELSE
			BEGIN
				CLOSE CUR_PR_WORKL_DEL_CHECK 
				DEALLOCATE CUR_PR_WORKL_DEL_CHECK 
			
				SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]해당 작업실적(' + @P_NO_WORK + ')을 참조하고 있는 불량내역(PR_WORK_BAD)이 있습니다. 삭제할 수 없습니다.' 
				GOTO ERROR 
			END 
		END 

		FETCH NEXT FROM CUR_PR_WORKL_DEL_CHECK INTO @A_NO_LINE_PR_WORKL 
	END 
	CLOSE CUR_PR_WORKL_DEL_CHECK 
	DEALLOCATE CUR_PR_WORKL_DEL_CHECK 

	----------------------------------------------------------------------------------------- 
	--삭제 전 체크(외주발주 건이 있으면 삭제 방지) 
	----------------------------------------------------------------------------------------- 
	--의미가 없어서 주석처리(공정외주발주는 실적을 끌고가지 않고 공정의 수량을 이용해서 작업함. 
	--따라서 실적번호로 찾을 수 없음 
	----------------------------------------------------------------------------------------- 
	/*
	SELECT	@YN_SUBCON	= YN_SUBCON, 
			@NO_PO		= NO_OPOUT_PO, 
			@NO_POLINE	= NO_OPOUT_PO_LINE 
	FROM	PR_WORK 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WO		= @P_NO_WO 
	AND		NO_WORK		= @P_NO_WORK 

	SET @YN_SUBCON	= ISNULL(@YN_SUBCON, 'N')
	SET @NO_PO		= ISNULL(@NO_PO, '')
	SET @NO_POLINE	= ISNULL(@NO_POLINE, 0) 

	IF (@YN_SUBCON = 'Y' AND @NO_PO <> '') 
	BEGIN 
		SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]해당 작업실적(' + @P_NO_WORK + ')을 참조하고 있는 공정외주발주(발주번호 : (' + @NO_PO + '), 발주항번 : (' + LTRIM(STR(@NO_POLINE)) + '))가 있습니다. 삭제할 수 없습니다.' 
		GOTO ERROR 
	END 
	*/
	----------------------------------------------------------------------------------------- 

	--마지막 공정이 아니면 
	IF (EXISTS(SELECT 1 
				 FROM PR_WO_ROUT 
				WHERE CD_COMPANY = @P_CD_COMPANY 
				  AND CD_PLANT	 = @P_CD_PLANT 
				  AND NO_WO		 = @P_NO_WO 
				  AND YN_FINAL	 = 'Y') ) 
	BEGIN 
		SELECT	@V_QT_REMAIN = QT_START - QT_WORK 
		FROM	PR_WO_ROUT 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
		AND		CD_OP		= @V_NEXT_CD_OP

		IF (@V_QT_REMAIN < @P_QT_MOVE) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]다음 공정(' + @V_NEXT_CD_OP + ')에 입고수량(PR_WORK.QT_START) - 실적수량(PR_WORK.QT_WORK)이 현재공정(' + @P_CD_OP + ')의 이동수량(PR_WORK.QT_MOVE)보다 적을 수 없습니다. 다음 공정을 먼저 삭제해야합니다.' 
			GOTO ERROR 
		END 
	END 

	IF (@V_EXC_OPOUT = '000')
	BEGIN
		--> 로직체크를 다시해야함. 아~~~~ 이상타~~~ 
		IF (EXISTS(SELECT 1 
					 FROM PR_WO_ROUT A 
			   INNER JOIN PR_OPOUT_POL B ON B.CD_COMPANY = @P_CD_COMPANY 
										AND B.CD_PLANT	 = @P_CD_PLANT 
										AND B.NO_WO		 = @P_NO_WO 
										AND B.CD_OP		 = A.CD_OP 
					WHERE A.CD_COMPANY	= @P_CD_COMPANY 
					  AND A.CD_PLANT	= @P_CD_PLANT 
					  AND A.NO_WO		= @P_NO_WO 
					  --AND A.YN_SUBCON	= 'Y'
					  AND A.CD_OP		= @V_NEXT_CD_OP)) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]다음공정에 등록된 공정외주발주가 있습니다. 삭제할 수 없습니다.' 
			GOTO ERROR 
		END
	END
	ELSE IF (@V_EXC_OPOUT = '100')
	BEGIN
		IF (EXISTS (SELECT 1
					  FROM PR_OPOUT_POL
					 WHERE CD_COMPANY = @P_CD_COMPANY
					   AND CD_PLANT	  = @P_CD_PLANT
					   AND NO_WO	  = @P_NO_WO
					   AND NO_WORK	  = @P_NO_WORK))
		BEGIN
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]다음공정에 등록된 공정외주발주가 있습니다. 삭제할 수 없습니다.1' 
			GOTO ERROR
		END
	END

	-- 검사확정된 공정검사의뢰가 존재한지 체크
	IF (EXISTS (SELECT 1 
				  FROM MM_QCL
				 WHERE CD_COMPANY = @P_CD_COMPANY 
				   AND NO_REQ	  = @P_NO_WORK 
				   AND YN_QC_FIX  = 'Y') ) 
	BEGIN 
		SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]검사확정된 검사의뢰가 있습니다. 삭제할 수 없습니다.' 
		GOTO ERROR 
	END 
END


-->> 생산입고검사사용 품목인경우 검사데이터 삭제 : 확정 안된 건에 대해, MM_QC, MM_QCL_SPEC, MM_QCL 을 삭제한다.[생산입고검사]
IF @V_EXC_QC = '100' 
BEGIN
	-- 의뢰데이터가 여러건인지 체크
	SELECT	@V_CNT = COUNT(1)
	FROM	PR_RCVL
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		CD_PLANT	= @P_CD_PLANT
	AND		NO_WORK		= @P_NO_WORK

	IF ISNULL(@V_CNT, 0) > 1
	BEGIN
		SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]입고의뢰데이터가 한건이 아닙니다. 삭제할 수 없습니다.' 
		GOTO ERROR 
	END

	SELECT	@V_NO_REQ = MAX(NO_REQ)
	FROM	PR_RCVL
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		CD_PLANT	= @P_CD_PLANT
	AND		NO_WORK		= @P_NO_WORK

	-- 검사확정된 공정검사의뢰가 존재한지 체크[생산입고검사]
	IF (EXISTS (SELECT 1 
				  FROM MM_QCL
				 WHERE CD_COMPANY = @P_CD_COMPANY 
				   AND NO_REQ	  = @V_NO_REQ 
				   AND YN_QC_FIX  = 'Y') ) 
	BEGIN 
		SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]검사확정된 검사의뢰가 있습니다. 삭제할 수 없습니다.2' 
		GOTO ERROR 
	END 

	DELETE	MM_QCL_SPEC
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		NO_REQ		= @V_NO_REQ
	
	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QCL_SPEC TABLE DELETE ERROR.' GOTO ERROR END 

	DELETE	MM_QCL
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		NO_REQ		= @V_NO_REQ
	
	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QCL TABLE DELETE ERROR.' GOTO ERROR END 

	DELETE	MM_QC
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		NO_REQ		= @V_NO_REQ
	
	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QC TABLE DELETE ERROR.' GOTO ERROR END 
END 
--<< 검사의뢰 데이타삭제


--1. 입고의뢰 삭제 
BEGIN
	DELETE	A 
	FROM	PR_RCVH A 
	INNER JOIN PR_RCVL B ON A.CD_COMPANY = B.CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.NO_REQ = B.NO_REQ 
	WHERE	B.CD_COMPANY = @P_CD_COMPANY 
	AND		B.CD_PLANT	 = @P_CD_PLANT 
	AND		B.NO_WORK	 = @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_RCVH TABLE DELETE ERROR.' GOTO ERROR END 

	DELETE	PR_RCVL 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WORK		= @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_RCVL TABLE DELETE ERROR.' GOTO ERROR END 
END


--2. 수불 삭제 [B/F 일경우]
BEGIN
	DECLARE		
		@V_NO_IO			NVARCHAR(20),		-- [B/F 출고 삭제 커서 변수] 수불번호 
		@V_NO_IOLINE		NUMERIC(5),			-- [B/F 출고 삭제 커서 변수] 수불항번 
		@V_QTIO_LOOP_CNT1	INT

	DECLARE @MM_QTIO_TEMP TABLE 
	( 
		SEQ_IDEN		INT IDENTITY(1, 1),
		NO_IO			NVARCHAR(20),
		NO_IOLINE		NUMERIC(5, 0)
	) 

	INSERT INTO @MM_QTIO_TEMP (NO_IO, NO_IOLINE)
	SELECT	NO_IO, NO_IOLINE
	FROM	MM_QTIO 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_PSO_MGMT = @P_NO_WO 
	AND		FG_IO		= '011' 
	AND		FG_PS		= '2' 
	AND		NO_WORK		= @P_NO_WORK 
	AND		NO_WORK		IS NOT NULL 
	GROUP BY NO_IO, NO_IOLINE, NO_ISURCV, NO_ISURCVLINE, NO_PSO_MGMT, NO_PSOLINE_MGMT, QT_IO 

	SELECT @V_QTIO_LOOP_CNT1 = 1
	
	WHILE (@V_QTIO_LOOP_CNT1 > 0) 
	BEGIN 
		SELECT	@V_NO_IO	 = NO_IO, 
				@V_NO_IOLINE = NO_IOLINE
		FROM	@MM_QTIO_TEMP
		WHERE	SEQ_IDEN = @V_QTIO_LOOP_CNT1

		IF (@@ROWCOUNT = 0)
		BEGIN
			SELECT @V_QTIO_LOOP_CNT1 = -1
			CONTINUE
		END

		--삼륭물산 전용으로 삭제시 바코드 Data Update 
		--MM_QTIO LOT 삭제 전에 바코드값을 알아내여 Update 할거임
		IF (@V_SERVERKEY LIKE 'SRPACK%')
		BEGIN 
			SELECT	@V_BARCODE		= BARCODE, 
					@V_BARCODE_QTY	= QT_IO
			FROM	MM_QTIOLOT
			WHERE	CD_COMPANY	= @P_CD_COMPANY
			AND		NO_IO		= @V_NO_IO
			AND		NO_IOLINE	= @V_NO_IOLINE

			UPDATE	MM_QTIO_VIEW 
			SET		QT_BL	  = QT_BL - @V_BARCODE_QTY,
					YN_INSERT = CASE WHEN (QT_BL - @V_BARCODE_QTY) = 0 THEN 'Y' ELSE 'N' END -- 잔량이 있는 경우 'Y' 
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		NO_IO		= @P_NO_WO 
			AND		CD_PLANT	= @P_CD_PLANT 
			AND		BARCODE		= @V_BARCODE 
		END 

		--수불의 헤더는 수불라인의 데이타가 다 지워지면 수불트리거에서 자동으로 체크해서 지워준다. 
		--따라서 따로 MM_QTIOH DELETE구문을 넣지 않아도 된다. 
		EXEC UP_PU_MM_QTIO_LINE_DELETE @P_NO_IO = @V_NO_IO, @P_NO_IOLINE = @V_NO_IOLINE, @P_CD_COMPANY = @P_CD_COMPANY 
		--EXEC UP_PU_WGI_MNG_DELETE @CD_COMPANY = @P_CD_COMPANY, @NO_IO = @V_NO_IO, @NO_IOLINE = @V_NO_IOLINE

		--수불 트리거에서 UPDATE를 해줌 
		/*
		UPDATE PR_REQL 
		SET	QT_ISU		= QT_ISU - @A_QT_IO 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND	NO_REQ		= @A_NO_ISURCV 
		AND	NO_LINE		= @A_NO_ISURCV_LINE 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_MM_QTIO 
			DEALLOCATE CUR_MM_QTIO 
			
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_REQL TABLE UPDATE ERROR.' 
			GOTO ERROR 
		END 
		*/
		
		IF(@@ERROR <> 0) 
		BEGIN 
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]UP_PU_MM_QTIO_LINE_DELETE CALL ERROR.' 
			GOTO ERROR 
		END 

		SELECT @V_QTIO_LOOP_CNT1 = @V_QTIO_LOOP_CNT1 + 1 
	END 

	DELETE @MM_QTIO_TEMP
END


-- 작업지시 공정 UPDATE
BEGIN
	UPDATE	PR_WO_ROUT 
	SET		QT_WORK		= ISNULL(A.QT_WORK,0) - ISNULL(@P_QT_WORK, 0), 
			QT_REJECT	= ISNULL(A.QT_REJECT,0) - ISNULL(@P_QT_REJECT, 0), 
			QT_WIP		= ISNULL(A.QT_WIP, 0) + ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) + ISNULL(B.QT_REWORK, 0) + ISNULL(B.QT_BAD, 0), 
			QT_MOVE		= ISNULL(A.QT_MOVE, 0) - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0), 
			--QT_REWORK	= ISNULL(A.QT_REWORK, 0) - CASE WHEN YN_REWORK = 'N' THEN ISNULL(B.QT_REWORK, 0) ELSE 0 END, 
			QT_REWORK	= ISNULL(A.QT_REWORK, 0) - ISNULL(B.QT_REWORK, 0), 
			QT_BAD		= ISNULL(A.QT_BAD, 0) - ISNULL(B.QT_BAD, 0), 
			ST_OP		= CASE WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) >= ISNULL(A.QT_START, 0) AND A.ST_OP = 'C' THEN 'C'
							   WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) > 0 THEN 'S' ELSE 'R' END, 
			DT_CLOSE	= CASE WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) >= ISNULL(A.QT_START, 0) AND A.ST_OP = 'C' THEN A.DT_CLOSE ELSE '00000000' END, 
			QT_RCV		= A.QT_RCV - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0) 
	FROM	PR_WO_ROUT A 
	INNER JOIN PR_WORK B ON A.CD_COMPANY = B.CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.NO_WO = B.NO_WO AND B.NO_WORK = @P_NO_WORK 
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.NO_WO		 = @P_NO_WO 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		A.CD_OP		 = @P_CD_OP 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT TABLE UPDATE ERROR.' GOTO ERROR END 

	--작업지시 릴리즈 분할
	UPDATE	PR_WO_ROUT_REL 
	SET		QT_WORK		= ISNULL(A.QT_WORK,0) - ISNULL(@P_QT_WORK, 0), 
			QT_REJECT	= ISNULL(A.QT_REJECT,0) - ISNULL(@P_QT_REJECT, 0), 
			QT_WIP		= ISNULL(A.QT_WIP, 0) + ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) + ISNULL(B.QT_REWORK, 0) + ISNULL(B.QT_BAD, 0), 
			QT_MOVE		= ISNULL(A.QT_MOVE, 0) - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0), 
			--QT_REWORK	= ISNULL(A.QT_REWORK, 0) - CASE WHEN YN_REWORK = 'N' THEN ISNULL(B.QT_REWORK, 0) ELSE 0 END, 
			QT_REWORK	= ISNULL(A.QT_REWORK, 0) - ISNULL(B.QT_REWORK, 0), 
			QT_BAD		= ISNULL(A.QT_BAD, 0) - ISNULL(B.QT_BAD, 0), 
			ST_OP		= CASE WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) >= ISNULL(A.QT_START, 0) AND A.ST_OP = 'C' THEN 'C'
							   WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) > 0 THEN 'S' ELSE 'R' END, 
			DT_CLOSE	= CASE WHEN ( ISNULL(A.QT_WORK, 0) - ISNULL(@P_QT_WORK, 0) ) >= ISNULL(A.QT_START, 0) AND A.ST_OP = 'C' THEN A.DT_CLOSE ELSE '00000000' END, 
			QT_RCV		= A.QT_RCV - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0) 
	FROM	PR_WO_ROUT_REL A 
	INNER JOIN PR_WORK B ON A.CD_COMPANY = B.CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.NO_WO = B.NO_WO AND B.NO_WORK = @P_NO_WORK AND A.NO_REL = B.NO_REL 
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.NO_WO		 = @P_NO_WO 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		A.CD_OP		 = @P_CD_OP 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT_REL TABLE UPDATE ERROR.' GOTO ERROR END 


	SELECT	@V_ROUT_REL_QT_REL  = ISNULL(A.QT_REL, 0),
			@V_ROUT_REL_QT_MOVE = ISNULL(A.QT_MOVE, 0),
			@V_ROUT_REL_QT_BAD  = ISNULL(A.QT_BAD, 0),
			@V_NO_REL			= A.NO_REL
	FROM	PR_WO_ROUT_REL A 
	INNER JOIN PR_WORK B ON A.CD_COMPANY = B.CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.NO_WO = B.NO_WO AND B.NO_WORK = @P_NO_WORK AND A.NO_REL = B.NO_REL 
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.NO_WO		 = @P_NO_WO 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		A.CD_OP		 = @P_CD_OP 

	--작업지시 릴리즈 분할
	IF( @V_ROUT_REL_QT_REL = (@V_ROUT_REL_QT_MOVE + @V_ROUT_REL_QT_BAD))
	BEGIN
		UPDATE	PR_WO_ROUT_REL
		SET		YN_CLOSE	= 'Y'
		WHERE	CD_COMPANY	= @P_CD_COMPANY
		AND		CD_PLANT	= @P_CD_PLANT
		AND		NO_WO		= @P_NO_WO
		AND		CD_OP		= @P_CD_OP
		AND		NO_REL		= @V_NO_REL
		
		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT_REL TABLE UPDATE ERROR.2' GOTO ERROR END 
	END
	ELSE
	BEGIN
		UPDATE	PR_WO_ROUT_REL
		SET		YN_CLOSE = 'N'
		WHERE	CD_COMPANY	= @P_CD_COMPANY
		AND		CD_PLANT	= @P_CD_PLANT
		AND		NO_WO		= @P_NO_WO
		AND		CD_OP		= @P_CD_OP
		AND		NO_REL		= @V_NO_REL
		
		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT_REL TABLE UPDATE ERROR.3' GOTO ERROR END 
	END

	UPDATE	PR_WO_ROUT 
	SET		QT_START = ISNULL(A.QT_START, 0) - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0), 
			QT_WIP   = ISNULL(A.QT_WIP, 0)   - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0) 
	FROM	PR_WO_ROUT A 
	INNER JOIN PR_WORK B ON B.CD_COMPANY = @P_CD_COMPANY AND B.NO_WORK = @P_NO_WORK 
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		A.NO_WO		 = @P_NO_WO 
	AND		A.CD_OP		 = @V_NEXT_CD_OP

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT TABLE UPDATE ERROR.2' GOTO ERROR END 


	--작업지시 릴리즈 분할
	UPDATE	PR_WO_ROUT_REL 
	SET		QT_START = ISNULL(A.QT_REL, 0) - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0), 
			QT_WIP   = ISNULL(A.QT_WIP, 0) - ( ISNULL(@P_QT_WORK, 0) - ISNULL(@P_QT_REJECT, 0) ) - ISNULL(B.QT_REWORK, 0) 
	FROM PR_WO_ROUT_REL A 
	INNER JOIN PR_WORK B ON B.CD_COMPANY = @P_CD_COMPANY AND B.NO_WORK = @P_NO_WORK AND A.NO_REL = B.NO_REL
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		A.NO_WO		 = @P_NO_WO 
	AND		A.CD_OP		 = @V_NEXT_CD_OP

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_ROUT_REL TABLE UPDATE ERROR.4' GOTO ERROR END 
END


-- 작업지시, 작업지시 공정 UPDATE
BEGIN
	DECLARE @V_SUMOF_QT_WORK	NUMERIC(17, 4) 
	DECLARE @V_SUMOF_QT_REJECT	NUMERIC(17, 4) 
	DECLARE @V_SUMOF_QT_REWORK	NUMERIC(17, 4) 
	DECLARE @V_SUMOF_QT_BAD		NUMERIC(17, 4) 
	DECLARE @V_SUMOF_QT_WO		NUMERIC(17, 4) 

	SELECT	@V_SUMOF_QT_WORK	= SUM(ISNULL(QT_WORK, 0)), 
			@V_SUMOF_QT_REJECT	= SUM(ISNULL(QT_REJECT, 0)), 
			@V_SUMOF_QT_REWORK	= SUM(ISNULL(QT_REWORK, 0)), 
			@V_SUMOF_QT_WO		= SUM(ISNULL(QT_WO, 0)), 
			@V_SUMOF_QT_BAD		= SUM(ISNULL(QT_BAD, 0)) 
	FROM	PR_WO_ROUT 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WO		= @P_NO_WO 
	
	IF NOT EXISTS (
		SELECT 1 FROM PR_WO_ROUT
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
		AND		ST_OP		<> 'C'
	) 
	BEGIN 
		UPDATE	PR_WO 
		SET		ST_WO		= 'C'
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
	END 
	ELSE IF (@V_SUMOF_QT_WORK = 0 AND @V_SUMOF_QT_REJECT = 0 AND @V_SUMOF_QT_REWORK = 0 AND @V_SUMOF_QT_BAD = 0) 
	BEGIN 
		UPDATE	PR_WO 
		SET		ST_WO		= 'R', 
				DT_CLOSE	= '' 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO TABLE UPDATE ERROR.' GOTO ERROR END 
	END 
	ELSE --IF (@V_SUMOF_QT_WORK <> @V_SUMOF_QT_WO AND @V_SUMOF_QT_REJECT = @V_SUMOF_QT_REWORK) 
	BEGIN 
		UPDATE	PR_WO 
		SET		ST_WO		= 'S', 
				DT_CLOSE	= '' 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO TABLE UPDATE ERROR.2' GOTO ERROR END 
	END 
	

	--PR_WO_ROUT.YN_FINAL = 'Y' 일 경우 PR_WO의 QT_WORK UPDATE 
	IF (EXISTS (SELECT 1 FROM PR_WO_ROUT 
				 WHERE CD_COMPANY = @P_CD_COMPANY 
				   AND CD_PLANT	  = @P_CD_PLANT 
				   AND NO_WO	  = @P_NO_WO 
				   AND CD_OP	  = @P_CD_OP 
				   AND YN_FINAL   = 'Y') ) 
	BEGIN 
		UPDATE	PR_WO 
		SET		QT_WORK		= QT_WORK - @P_QT_MOVE 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO TABLE UPDATE ERROR.3' GOTO ERROR END 
	END 
END


--자재 투입 삭제
BEGIN 
	DELETE	PR_II 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WO		= @P_NO_WO 
	AND		NO_WORK		= @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_II TABLE DELETE ERROR.' GOTO ERROR END 
END


--5. 불량, 재작업, 불량처리 UPDATE, DELETE
BEGIN
	DECLARE @A_NO_WORK_SRC		NVARCHAR(20), 
			@A_NO_LINE_SRC		NUMERIC(5, 0), 
			@A_NO_LINE_WORKL_RE	NUMERIC(5, 0), 
			@A_QT_REJECT_BAD_WORKL NUMERIC(17, 4), 
			@A_QT_REWORK_WORKL_RE NUMERIC(17, 4), 
			@A_QT_BAD_WORK_BAD	NUMERIC(17, 4)

	--> 불량만 있는 경우 때문에 재작업불량수량만 UPDATE 한다. 
	DECLARE CUR_PR_WORKL_DEL_UPDATE_QT CURSOR FOR 

		SELECT	NO_WORK_SRC, NO_LINE_SRC, NO_LINE, QT_REJECT 
		FROM	PR_WORKL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 

	OPEN CUR_PR_WORKL_DEL_UPDATE_QT 
	FETCH NEXT FROM CUR_PR_WORKL_DEL_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_REJECT_BAD_WORKL 
	WHILE(@@FETCH_STATUS = 0 ) 
	BEGIN 
		UPDATE	PR_WORKL 
		SET		QT_REWORK_BAD = QT_REWORK_BAD - @A_QT_REJECT_BAD_WORKL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @A_NO_WORK_SRC 
		AND		NO_LINE		= @A_NO_LINE_SRC 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORKL_DEL_UPDATE_QT 
			DEALLOCATE CUR_PR_WORKL_DEL_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL TABLE UPDATE ERROR.' 
			GOTO ERROR 
		END 

		DELETE	PR_WORKL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_LINE		= @A_NO_LINE_WORKL_RE 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORKL_DEL_UPDATE_QT 
			DEALLOCATE CUR_PR_WORKL_DEL_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL TABLE DELETE ERROR.' 
			GOTO ERROR 
		END 
		
		FETCH NEXT FROM CUR_PR_WORKL_DEL_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_REJECT_BAD_WORKL 
	END 
	CLOSE CUR_PR_WORKL_DEL_UPDATE_QT 
	DEALLOCATE CUR_PR_WORKL_DEL_UPDATE_QT 

	--> 재작업만 있는 경우 때문에 재작업수량 UPDATE 하고 불량재작업내역을 지운다. 
	DECLARE CUR_PR_WORKL_RE_DEL_UPDATE_QT CURSOR FOR 

		SELECT	NO_WORK_SRC, NO_LINE_SRC, NO_LINE, QT_REWORK 
		FROM	PR_WORKL_RE 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 

	OPEN CUR_PR_WORKL_RE_DEL_UPDATE_QT 
	FETCH NEXT FROM CUR_PR_WORKL_RE_DEL_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_REWORK_WORKL_RE 
	WHILE(@@FETCH_STATUS = 0 ) 
	BEGIN 
		UPDATE	PR_WORKL 
		SET		QT_REWORK = QT_REWORK - @A_QT_REWORK_WORKL_RE 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @A_NO_WORK_SRC 
		AND		NO_LINE		= @A_NO_LINE_SRC 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORKL_RE_DEL_UPDATE_QT 
			DEALLOCATE CUR_PR_WORKL_RE_DEL_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL TABLE UPDATE ERROR.2' 
			GOTO ERROR 
		END 
		
		DELETE	PR_WORKL_RE 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_LINE		= @A_NO_LINE_WORKL_RE 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORKL_RE_DEL_UPDATE_QT 
			DEALLOCATE CUR_PR_WORKL_RE_DEL_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL_RE TABLE DELETE ERROR.' 
			GOTO ERROR 
		END 
		
		FETCH NEXT FROM CUR_PR_WORKL_RE_DEL_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_REWORK_WORKL_RE 
	END 
	CLOSE CUR_PR_WORKL_RE_DEL_UPDATE_QT 
	DEALLOCATE CUR_PR_WORKL_RE_DEL_UPDATE_QT 

	--> 불량처리내역(PR_WORKL)의 불량처리수량(QT_BAD)을 가감한다. 
	DECLARE CUR_PR_WORK_BAD_UPDATE_QT CURSOR FOR 

		SELECT	NO_WORK_SRC, NO_LINE_SRC, NO_LINE, QT_BAD 
		FROM	PR_WORK_BAD 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 
		
	OPEN CUR_PR_WORK_BAD_UPDATE_QT 
	FETCH NEXT FROM CUR_PR_WORK_BAD_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_BAD_WORK_BAD 
	WHILE(@@FETCH_STATUS = 0 ) 
	BEGIN 
		UPDATE	PR_WORKL 
		SET		QT_BAD = QT_BAD - @A_QT_BAD_WORK_BAD 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @A_NO_WORK_SRC 
		AND		NO_LINE		= @A_NO_LINE_SRC 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORK_BAD_UPDATE_QT 
			DEALLOCATE CUR_PR_WORK_BAD_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL TABLE UPDATE ERROR.3' 
			GOTO ERROR 
		END 
		
		DELETE	PR_WORK_BAD 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK		= @P_NO_WORK 
		AND		NO_LINE		= @A_NO_LINE_WORKL_RE 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_PR_WORK_BAD_UPDATE_QT 
			DEALLOCATE CUR_PR_WORK_BAD_UPDATE_QT 

			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK_BAD TABLE DELETE ERROR.' 
			GOTO ERROR 
		END 
		
		FETCH NEXT FROM CUR_PR_WORK_BAD_UPDATE_QT INTO @A_NO_WORK_SRC, @A_NO_LINE_SRC, @A_NO_LINE_WORKL_RE, @A_QT_BAD_WORK_BAD 
	END 
	CLOSE CUR_PR_WORK_BAD_UPDATE_QT 
	DEALLOCATE CUR_PR_WORK_BAD_UPDATE_QT 
	

	DELETE	PR_WORKL 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		NO_WO		= @P_NO_WO 
	AND		NO_WORK		= @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORKL TABLE DELETE ERROR.2' GOTO ERROR END 
END


--업체전용[리캠]
IF(@V_SERVERKEY = 'RECAM') 
BEGIN
	--리켐 실적삭제 시 생산실적수율을 다시 구해줘야함---
	SELECT	@V_Z_QT_SUM = SUM(QT_WORK)
	FROM	PR_WORK
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WORK	   <> @P_NO_WORK 
	AND		NO_WO		= @P_NO_WO 
	AND		NO_WORK_TRACKING = @P_NO_WORK_TRACKING
	
	IF (@V_Z_QT_SUM = 0 OR @V_Z_QT_SUM IS NULL) SET @V_Z_QT_SUM = 1
	
	DECLARE CUR_Z_RECAM1 CURSOR FOR 
	
		SELECT	NO_WORK, QT_WORK
		FROM	PR_WORK
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WORK	   <> @P_NO_WORK 
		AND		NO_WO		= @P_NO_WO 
		AND		NO_WORK_TRACKING = @P_NO_WORK_TRACKING 

	OPEN CUR_Z_RECAM1 
	FETCH NEXT FROM CUR_Z_RECAM1 INTO @A_NO_WORK_CUR, @A_QT_WORK_CUR
	WHILE(@@FETCH_STATUS = 0 ) 
	BEGIN 
		UPDATE	PR_WORK
		SET		DC_RMK2 = CONVERT(NVARCHAR(100), ROUND((QT_WORK / ISNULL(@V_Z_QT_SUM, 0)) * 100, 2))
		WHERE	CD_COMPANY	= @P_CD_COMPANY
		AND		NO_WO		= @P_NO_WO
		AND		NO_WORK		= @A_NO_WORK_CUR
		AND		NO_WORK_TRACKING = @P_NO_WORK_TRACKING 

		IF(@@ERROR <> 0) 
		BEGIN 
			CLOSE CUR_Z_RECAM1 
			DEALLOCATE CUR_Z_RECAM1 
	
			SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK TABLE UPDATE ERROR.[RECAM]' 
			GOTO ERROR 
		END 
	
		FETCH NEXT FROM CUR_Z_RECAM1 INTO @A_NO_WORK_CUR, @A_QT_WORK_CUR
	END
	CLOSE CUR_Z_RECAM1 
	DEALLOCATE CUR_Z_RECAM1 
END


--6. 실적 삭제
BEGIN
	DELETE	PR_WORK 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WORK		= @P_NO_WORK 
	AND		(NO_WO		= @P_NO_WO OR @P_NO_WO = '' OR @P_NO_WO IS NULL) 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK TABLE DELETE ERROR.' GOTO ERROR END 
END

--소요자재 투입수량(PR_WO_BILL.QT_USE) UPDATE 
BEGIN
	DECLARE @CD_MATL		NVARCHAR(20),
			@QT_IO			NUMERIC(17, 4),
			@CD_OP			NVARCHAR(4),
			@NO_WO_LINE		NUMERIC(5,0), 
			@NO_LINE_BILL	NUMERIC(17, 4),
			@NO_REQ			NVARCHAR(20),
			@NO_LINE_REQ	NUMERIC(6),
			@QT_REQ			NUMERIC(17, 4),
			@V_LOOP_CNT1	INT,
			@V_LOOP_CNT2	INT

	DECLARE @PR_QTIO_TEMP TABLE 
	( 
		SEQ_IDEN	INT IDENTITY(1, 1),
		CD_MATL		NVARCHAR(50),
		QT_IO		NUMERIC(17, 4),
		CD_OP		NVARCHAR(4),
		NO_WO_LINE	NUMERIC(5,0)
	) 

	DECLARE @PR_REQL_TEMP TABLE 
	( 
		SEQ_IDEN	INT,
		NO_REQ		NVARCHAR(20),
		NO_LINE_REQ NUMERIC(6),
		QT_REQ		NUMERIC(17, 4)
	) 

	INSERT	@PR_QTIO_TEMP ( CD_MATL, QT_IO, CD_OP, NO_WO_LINE )
	SELECT	CD_ITEM, QT_IO, CD_OP, NO_WO_LINE 
	FROM	PR_QTIO 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WO		= @P_NO_WO 
	AND		CD_OP		= @P_CD_OP 
	AND		NO_SRC		= @P_NO_WORK 
	AND		FG_SLIP		= '201' --자재투입 

	SELECT @V_LOOP_CNT1 = 1

	WHILE (@V_LOOP_CNT1 > 0) 
	BEGIN 
		SELECT	@CD_MATL	= CD_MATL, 
				@QT_IO		= QT_IO, 
				@CD_OP		= CD_OP, 
				@NO_WO_LINE = NO_WO_LINE
		FROM	@PR_QTIO_TEMP
		WHERE	SEQ_IDEN = @V_LOOP_CNT1

		IF (@@ROWCOUNT = 0)
		BEGIN
			SELECT @V_LOOP_CNT1 = -1
			CONTINUE
		END

		IF @NO_WO_LINE = 0 OR @NO_WO_LINE IS NULL 
		BEGIN 
			SELECT	@NO_LINE_BILL = MIN(NO_LINE) 
			FROM	PR_WO_BILL 
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		CD_PLANT	= @P_CD_PLANT 
			AND		NO_WO		= @P_NO_WO 
			AND		CD_OP		= @P_CD_OP 
			AND		CD_MATL		= @CD_MATL
			
			IF (@NO_LINE_BILL = 0 OR @NO_LINE_BILL IS NULL) SET @NO_LINE_BILL = 99999
		END 
		ELSE 
		BEGIN 
			SELECT @NO_LINE_BILL = @NO_WO_LINE 
		END 

		UPDATE	PR_WO_BILL 
		SET		QT_USE = ISNULL(QT_USE,0) - @QT_IO 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
		AND		CD_OP		= @P_CD_OP 
		AND		CD_MATL		= @CD_MATL 
		AND		NO_LINE		= @NO_LINE_BILL 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_BILL TABLE UPDATE ERROR.' GOTO ERROR END 

		INSERT	@PR_REQL_TEMP ( SEQ_IDEN, NO_REQ, NO_LINE_REQ, QT_REQ ) 
		SELECT	ROW_NUMBER() OVER (ORDER BY CD_COMPANY),
				NO_REQ, NO_LINE, QT_REQ 
		FROM	PR_REQL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WO		= @P_NO_WO 
		AND		NO_LINE_WO	= @NO_LINE_BILL 
		AND		CD_OP		= @P_CD_OP 
		AND		CD_WC		= @P_CD_WC 
		AND		CD_MATL		= @CD_MATL 
		AND		YN_BF		= 'Y' 
		AND		NO_WORK		= @P_NO_WORK 

		SELECT @V_LOOP_CNT2 = 1

		WHILE (@V_LOOP_CNT2 > 0) 
		BEGIN 
			SELECT	@NO_REQ		 = NO_REQ, 
					@NO_LINE_REQ = NO_LINE_REQ, 
					@QT_REQ		 = QT_REQ
			FROM	@PR_REQL_TEMP
			WHERE	SEQ_IDEN = @V_LOOP_CNT2

			IF (@@ROWCOUNT = 0)
			BEGIN
				SELECT @V_LOOP_CNT2 = -1
				CONTINUE
			END

			DELETE	PR_REQL 
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		NO_REQ		= @NO_REQ 
			AND		NO_LINE		= @NO_LINE_REQ 

			IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_REQL TABLE DELETE ERROR.' GOTO ERROR END 

			IF ( NOT EXISTS(SELECT 1 
							  FROM PR_REQL 
							 WHERE CD_COMPANY = @P_CD_COMPANY 
							   AND NO_REQ	  = @NO_REQ 
							   AND NO_LINE	  = @NO_LINE_REQ) ) 
			BEGIN 
				DELETE	PR_REQH 
				WHERE	CD_COMPANY	= @P_CD_COMPANY 
				AND		NO_REQ		= @NO_REQ 

				IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_REQH TABLE DELETE ERROR.' GOTO ERROR END 
			END 

			UPDATE	PR_WO_BILL 
			SET		QT_REQ = QT_REQ - @QT_REQ 
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		NO_WO		= @P_NO_WO 
			AND		NO_LINE		= @NO_LINE_BILL 

			IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_BILL TABLE UPDATE ERROR.2' GOTO ERROR END 

			SELECT @V_LOOP_CNT2 = @V_LOOP_CNT2 + 1 
		END 

		DELETE @PR_REQL_TEMP 

		--B/F = 'Y'인 건은 삭제 
		DELETE	PR_REQL 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_WO		= @P_NO_WO 
		AND		NO_LINE_WO	= @NO_LINE_BILL 
		AND		CD_OP		= @P_CD_OP 
		AND		CD_WC		= @P_CD_WC 
		AND		CD_MATL		= @CD_MATL 
		AND		NO_WORK		= @P_NO_WORK 
		AND		YN_BF		= 'Y' 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_REQL TABLE DELETE ERROR.2' GOTO ERROR END 
				
		IF (@@ROWCOUNT = 0) 
		BEGIN 
			UPDATE	PR_REQL 
			SET		QT_USE = ISNULL(QT_USE, 0) - @QT_IO 
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		NO_WO		= @P_NO_WO 
			AND		NO_LINE_WO	= @NO_LINE_BILL 
			AND		CD_OP		= @P_CD_OP 
			AND		CD_WC		= @P_CD_WC 
			AND		CD_MATL		= @CD_MATL 
			AND		NO_WORK		= @P_NO_WORK 

			IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_REQL TABLE UPDATE ERROR.2' GOTO ERROR END 
		END

		SELECT @V_LOOP_CNT1 = @V_LOOP_CNT1 + 1 
	END 

	DELETE @PR_QTIO_TEMP
END


--7 공정 수불 삭제 
BEGIN
	DELETE	PR_QTIOLOT 
	FROM	PR_QTIOLOT A 
	INNER JOIN PR_QTIO B ON B.CD_COMPANY = @P_CD_COMPANY 
						AND B.CD_PLANT	 = @P_CD_PLANT 
						AND B.NO_IO		 = A.NO_IO 
						AND B.NO_LINE_IO = A.NO_LINE_IO 
						AND B.FG_SLIP	 = A.FG_SLIP 
	WHERE	A.CD_COMPANY = @P_CD_COMPANY 
	AND		A.CD_PLANT	 = @P_CD_PLANT 
	AND		B.NO_WO		 = @P_NO_WO 
	AND		B.NO_SRC	 = @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_QTIOLOT TABLE DELETE ERROR.' GOTO ERROR END 

	DELETE	H 
	FROM	PR_QTIOH H 
	WHERE	H.CD_COMPANY = @P_CD_COMPANY 
	AND		H.CD_PLANT = @P_CD_PLANT 
	AND		EXISTS (SELECT 1 
					  FROM PR_QTIO L 
					 WHERE L.CD_COMPANY = H.CD_COMPANY 
					   AND L.CD_PLANT	= H.CD_PLANT 
					   AND L.NO_IO		= H.NO_IO 
					   AND L.CD_COMPANY = @P_CD_COMPANY 
					   AND L.CD_PLANT	= @P_CD_PLANT 
					   AND L.NO_WO		= @P_NO_WO 
					   AND L.NO_SRC		= @P_NO_WORK) 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_QTIOH TABLE DELETE ERROR.' GOTO ERROR END 

	DELETE	PR_QTIO 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WO		= @P_NO_WO 
	AND		NO_SRC		= @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_QTIO TABLE DELETE ERROR.' GOTO ERROR END 
END


-->> 8. 검사의뢰 데이타삭제 : 확정 안된 건에 대해, MM_QC, MM_QCL_SPEC, MM_QCL 을 삭제한다.[공정검사]
BEGIN
	DELETE	MM_QCL_SPEC
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		NO_REQ		= @P_NO_WORK

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QCL_SPEC TABLE DELETE ERROR.2' GOTO ERROR END 

	DELETE	MM_QCL
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		NO_REQ		= @P_NO_WORK

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QCL TABLE DELETE ERROR.2' GOTO ERROR END 

	DELETE	MM_QC
	WHERE	CD_COMPANY	= @P_CD_COMPANY
	AND		NO_REQ		= @P_NO_WORK

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QC TABLE DELETE ERROR.2' GOTO ERROR END 
END

-- MES연동 UPDATE
IF @V_EXC_MESPOP <> '000' 
BEGIN 
	UPDATE	PR_WORK_MES 
	SET		NO_WORK		= NULL, 
			FG_CHK		= '0', 
			YN_ERR		= 'N', 
			ATTRIBUTE1	= 'D' 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WORK		= @P_NO_WORK 
	AND		NO_WO		= @P_NO_WO 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK_MES TABLE UPDATE ERROR.' GOTO ERROR END 
END 

--9 작업공수 삭제 
BEGIN
	DELETE	PR_WORK_MANDAY 
	WHERE	CD_COMPANY	= @P_CD_COMPANY 
	AND		CD_PLANT	= @P_CD_PLANT 
	AND		NO_WORK		= @P_NO_WORK 
	
	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK_MANDAY TABLE DELETE ERROR.' GOTO ERROR END 
END 

--10 측정치 삭제
BEGIN
	UPDATE	CZ_PR_WO_INSP
	SET		NO_INSP = '994',
			NO_OPOUT_WORK = NULL
	WHERE	CD_COMPANY		= @P_CD_COMPANY 
	AND		NO_OPOUT_WORK	= @P_NO_WORK 

	IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK_MANDAY TABLE DELETE ERROR.' GOTO ERROR END 
END 

--업체전용
BEGIN
	IF(@V_SERVERKEY = 'RECAM') 
	BEGIN
		--리켐 실적삭제 시 수율을 다시 구해줘야함---
		SELECT	@V_Z_QT_SUM = SUM(I.QT_II)
		FROM	PR_II I
		JOIN PR_WORK W ON I.CD_COMPANY = W.CD_COMPANY AND I.NO_WO = W.NO_WO AND I.NO_WORK = W.NO_WORK
		WHERE	I.CD_COMPANY = @P_CD_COMPANY 
		AND		I.CD_PLANT = @P_CD_PLANT 
		AND		I.NO_WO = @P_NO_WO 
		AND		W.NO_WORK_TRACKING = @P_NO_WORK_TRACKING

		IF (@V_Z_QT_SUM = 0 OR @V_Z_QT_SUM IS NULL) SET @V_Z_QT_SUM = 1

		DECLARE CUR_Z_RECAM2 CURSOR FOR 
		
			SELECT	NO_WORK, QT_WORK
			FROM	PR_WORK
			WHERE	CD_COMPANY	= @P_CD_COMPANY 
			AND		NO_WORK	   <> @P_NO_WORK 
			AND		NO_WO		= @P_NO_WO 
			AND		NO_WORK_TRACKING = @P_NO_WORK_TRACKING 

		OPEN CUR_Z_RECAM2 
		FETCH NEXT FROM CUR_Z_RECAM2 INTO @A_NO_WORK_CUR, @A_QT_WORK_CUR
		WHILE(@@FETCH_STATUS = 0 ) 
		BEGIN 
			UPDATE	PR_WORK
			SET		DC_RMK3 = CONVERT(NVARCHAR(100), ROUND(((QT_WORK * 100) / ISNULL(@V_Z_QT_SUM, 0)), 2))
			WHERE	CD_COMPANY	= @P_CD_COMPANY
			AND		NO_WO		= @P_NO_WO
			AND		NO_WORK		= @A_NO_WORK_CUR
			AND		NO_WORK_TRACKING = @P_NO_WORK_TRACKING 

			IF(@@ERROR <> 0) 
			BEGIN 
				CLOSE CUR_Z_RECAM2 
				DEALLOCATE CUR_Z_RECAM2 
		
				SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK TABLE UPDATE ERROR.[RECAM]2' 
				GOTO ERROR 
			END 
			
			FETCH NEXT FROM CUR_Z_RECAM2 INTO @A_NO_WORK_CUR, @A_QT_WORK_CUR
		END
		CLOSE CUR_Z_RECAM2 
		DEALLOCATE CUR_Z_RECAM2 
	END

	ELSE IF( @V_SERVERKEY = 'WONBONG')
	BEGIN
		--원봉전용 PDA 연동
		SELECT	@V_NO_LABEL = DC_RMK3 
		FROM	PR_WORK
		WHERE	CD_COMPANY	= @P_CD_COMPANY
		AND		CD_PLANT	= @P_CD_PLANT
		AND		NO_WO		= @P_NO_WO
		AND		NO_WORK		= @P_NO_WORK
		
		UPDATE	PR_WORK_MES 
		SET		FG_CHK		= CASE WHEN ISNULL(QT_REQS, 0) - @P_QT_WORK = 0 THEN 0 ELSE 1 END,
				QT_REQS		= ISNULL(QT_REQS, 0) - @P_QT_WORK, 
				YN_ERR		= 'N', 
				FG_STAUS	= 'T' 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
		AND		NO_LABEL	= @V_NO_LABEL

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WORK_MES TABLE UPDATE ERROR.[WONBONG]' GOTO ERROR END 
	END

	ELSE IF (@V_SERVERKEY LIKE 'SRPACK%')
	BEGIN 
		--삼륭물산 전용으로 삭제시 바코드 Data Update 
		--MM_QTIO LOT 삭제 전에 바코드값을 알아내여 Update 할거임
		SELECT	@V_CNT = COUNT(*)
		FROM	PR_WORK
		WHERE	CD_COMPANY	= @P_CD_COMPANY
		AND		NO_WO		= @P_NO_WO
		AND		NO_WORK		= @P_NO_WORK

		UPDATE	PR_WO_MES 
		SET		NO_IO		= CASE WHEN ISNULL(@V_CNT, 0) > 0 THEN NO_IO ELSE '' END, 
				NO_IO_LINE	= NULL, 
				YN_INSERT	= CASE WHEN ISNULL(@V_CNT, 0) > 0 THEN 'Y' ELSE 'N' END,
				YN_WORK		= CASE WHEN ISNULL(@V_CNT, 0) > 0 THEN 'Y' ELSE 'N' END
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_IO		= @P_NO_WO 
		AND		CD_PLANT	= @P_CD_PLANT 

		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]PR_WO_MES TABLE UPDATE ERROR.[SRPACK]' GOTO ERROR END 
		
		UPDATE	MM_QTIO_VIEW 
		SET		QT_BL		= CASE WHEN ISNULL(@V_CNT, 0) > 0 THEN QT_BL ELSE 0 END, 
				YN_INSERT	= CASE WHEN ISNULL(@V_CNT, 0) > 0 THEN 'Y' ELSE 'N' END 
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		NO_IO		= @P_NO_WO 
		AND		CD_PLANT	= @P_CD_PLANT
		
		IF(@@ERROR <> 0) BEGIN SELECT @ERRMSG = '[UP_CZ_PR_WORK_REG_DELETE]MM_QTIO_VIEW TABLE UPDATE ERROR.[SRPACK]' GOTO ERROR END 
	END 

	ELSE IF (@V_SERVERKEY LIKE 'SEEGENE')
	BEGIN 	
		--씨젠에서는 전용으로 트리거[TU_Z_SEEGENE_PR_WO]에서 
		--PR_WO의 QT_WORK를 PR_WORK 테이블 기준으로 자동 보정을 해주기때문에
		--PR_WORK 삭제후 다시 UPDATE를 해주어야됨
		UPDATE	PR_WO 
		SET		QT_WORK		= 0
		WHERE	CD_COMPANY	= @P_CD_COMPANY 
		AND		CD_PLANT	= @P_CD_PLANT 
		AND		NO_WO		= @P_NO_WO 
	END 
END

RETURN 
ERROR: RAISERROR (@ERRMSG, 18, 1)

GO


