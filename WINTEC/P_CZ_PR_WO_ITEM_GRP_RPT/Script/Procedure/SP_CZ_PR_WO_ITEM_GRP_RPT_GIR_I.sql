USE [NEOE]
GO
/****** Object:  StoredProcedure [NEOE].[SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I]    Script Date: 2021-02-18 오후 1:19:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I]
(  
    @P_CD_COMPANY   NVARCHAR(7),
	@P_NO_SO		NVARCHAR(20),
	@P_SEQ_SO		NUMERIC(5, 0),
	@P_QT_GIR		NUMERIC(17, 4),
	@P_ID_USER		NVARCHAR(10) 
)  
AS

BEGIN TRAN SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I
BEGIN TRY

DECLARE @V_ERRMSG   VARCHAR(255),   -- ERROR 메시지
		@V_NO_GIR	NVARCHAR(20),
		@V_YM		NVARCHAR(6),
		@V_STA_SO	NVARCHAR(1)

IF EXISTS (SELECT 1 
		   FROM SA_SOL SL
		   WHERE SL.CD_COMPANY = @P_CD_COMPANY
		   AND SL.NO_SO = @P_NO_SO
		   AND SL.SEQ_SO = @P_SEQ_SO
		   AND SL.QT_SO = SL.QT_GIR)
BEGIN
	SELECT @V_ERRMSG = '이미 납품 의뢰 완료된 수주 품목 입니다.'
	GOTO ERROR
END

IF EXISTS (SELECT 1 
		   FROM SA_SOL SL
		   WHERE SL.CD_COMPANY = @P_CD_COMPANY
		   AND SL.NO_SO = @P_NO_SO
		   AND SL.SEQ_SO = @P_SEQ_SO
		   AND (SL.QT_SO - SL.QT_GIR) < @P_QT_GIR)
BEGIN
	SELECT @V_ERRMSG = '의뢰잔량 보다 요청수량이 많습니다.'
	GOTO ERROR
END

SELECT @V_STA_SO = ISNULL(STA_SO, 'O')
FROM SA_SOL
WHERE CD_COMPANY = @P_CD_COMPANY
AND NO_SO = @P_NO_SO
AND SEQ_SO = @P_SEQ_SO 

IF @V_STA_SO = 'O'
BEGIN
	SELECT @V_ERRMSG = '수주상태가 미정이므로 의뢰하실 수 없습니다.'
	GOTO ERROR
END

IF @V_STA_SO = 'C'
BEGIN
	SELECT @V_ERRMSG = '수주상태가 종결이므로 의뢰하실 수 없습니다.'
	GOTO ERROR  
END

SET @V_YM = CONVERT(CHAR(6), GETDATE(), 112)

EXEC CP_GETNO @P_CD_COMPANY, 'SA', '03', @V_YM, @V_NO_GIR OUTPUT

INSERT INTO SA_GIRH
(
	CD_COMPANY,
	NO_GIR,
	DT_GIR,
	CD_PARTNER,
	CD_PLANT,
	NO_EMP, 
	TP_BUSI,
	YN_RETURN,
	DC_RMK,
	DC_RMK1,
	DC_RMK2,
	ID_INSERT,
	DTS_INSERT
)
SELECT SH.CD_COMPANY,
	   @V_NO_GIR,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_GIR,
	   SH.CD_PARTNER,
	   SL.CD_PLANT,
	   @P_ID_USER AS NO_EMP,
	   TP.TP_BUSI,
	   TP.RET,
	   SH.DC_RMK,
	   SH.DC_RMK1,
	   NULL,
	   @P_ID_USER,
	   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
FROM SA_SOH SH
JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
			 MAX(SL.CD_PLANT) AS CD_PLANT
	  FROM SA_SOL SL
	  GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
JOIN SA_TPSO TP ON TP.CD_COMPANY = SH.CD_COMPANY AND TP.TP_SO = SH.TP_SO
WHERE SH.CD_COMPANY = @P_CD_COMPANY
AND SH.NO_SO = @P_NO_SO

INSERT INTO SA_GIRL
(
    CD_COMPANY,
	NO_GIR,
	SEQ_GIR,
	CD_ITEM,
	TP_ITEM,
    DT_DUEDATE,
	DT_REQGI,
	YN_INSPECT,
	CD_SL,
	TP_GI,
    QT_GIR,
	CD_EXCH,
	UM,
	AM_GIR,
	AM_GIRAMT,
    AM_VAT,
	UNIT,
	QT_GIR_IM,
	GI_PARTNER,
	NO_PROJECT,
    RT_EXCH,
	RT_VAT,
	NO_SO,
	SEQ_SO,
	CD_SALEGRP,
    TP_VAT,
	NO_EMP,
	TP_IV,
	FG_TAXP,
	TP_BUSI,
    GIR,
	IV,
	RET,
	SUBCONT,
	NO_LC,
    SEQ_LC,
	FG_LC_OPEN,
	DC_RMK,
	CD_WH,
	ID_INSERT,
    DTS_INSERT,
	SEQ_PROJECT
)
SELECT SH.CD_COMPANY,
	   @V_NO_GIR,
	   SL.SEQ_SO,
	   SL.CD_ITEM,
	   SL.TP_ITEM,
	   SL.DT_DUEDATE,
	   SL.DT_REQGI,
	   'N' AS YN_INSPECT,
	   SL.CD_SL,
	   SL.TP_GI,
	   @P_QT_GIR,
	   SH.CD_EXCH,
	   SL.UM_SO,
	   ROUND(@P_QT_GIR * SL.UM_SO, 2) AS AM_SO,
	   ROUND((@P_QT_GIR * SL.UM_SO) * SH.RT_EXCH, 0) AS AM_WONAMT,
	   (ROUND((@P_QT_GIR * SL.UM_SO) * SH.RT_EXCH, 0) * ROUND(CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(MC.CD_FLAG1, '') = '' THEN '0' ELSE MC.CD_FLAG1 END) / 100, 2)) AS AM_VAT,
	   SL.UNIT_IM,
	   @P_QT_GIR,
	   SL.GI_PARTNER,
	   SL.NO_PROJECT,
	   SH.RT_EXCH,
	   SL.RT_VAT,
	   SL.NO_SO,
	   SL.SEQ_SO,
	   SH.CD_SALEGRP,
	   SL.TP_VAT,
	   SH.NO_EMP,
	   SL.TP_IV,
	   SH.FG_TAXP,
	   SL.TP_BUSI,
	   SL.GIR,
	   SL.IV,
	   TP.RET,
	   'N' AS SUBCONT,
	   NULL AS NO_LC, 
	   0 AS SEQ_LC,
	   NULL AS FG_LC_OPEN,
	   SL.DC1 AS DC_RMK,
	   SL.CD_WH,
	   @P_ID_USER,
	   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT,
	   SL.SEQ_PROJECT
FROM SA_SOH SH
JOIN SA_TPSO TP ON TP.CD_COMPANY = SH.CD_COMPANY AND TP.TP_SO = SH.TP_SO
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = SH.CD_COMPANY AND MC.CD_FIELD = 'MA_B000040' AND MC.CD_SYSDEF = SH.TP_VAT
JOIN SA_SOL SL ON SH.CD_COMPANY = SL.CD_COMPANY AND SH.NO_SO = SL.NO_SO
WHERE SH.CD_COMPANY = @P_CD_COMPANY
AND SH.NO_SO = @P_NO_SO
AND SL.SEQ_SO = @P_SEQ_SO

COMMIT TRAN SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PR_WO_ITEM_GRP_RPT_GIR_I

GO