USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[UP_SA_SO_MODIFY]    Script Date: 2019-11-04 오전 10:38:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER  PROC [NEOE].[UP_SA_SO_MODIFY]  
(  
    @P_NO_SO        NVARCHAR(20),  -- 수주번호  
    @P_CD_COMPANY   NVARCHAR(7)    -- 회사  
)
AS  
DECLARE @V_H_VAT    NUMERIC(17,4),
        @V_L_VAT    NUMERIC(17,4),
        @V_H_AM_CLS NUMERIC(17,4),
        @V_L_AM_CLS NUMERIC(17,4),
        @V_MAX_LINE NUMERIC(17,4)

SELECT @V_H_VAT = VAT_TAX,
	   @V_H_AM_CLS = AM_K
FROM   SA_IVH H
       INNER JOIN SA_IVL L ON H.CD_COMPANY = L.CD_COMPANY AND H.NO_IV = L.NO_IV 
WHERE  L.NO_SO      = @P_NO_SO 
AND    H.CD_COMPANY = @P_CD_COMPANY

/*출고금액이 전부0일경우 조치 20090601*/
IF EXISTS ( SELECT 1 FROM   SA_IVL WHERE  NO_SO = @P_NO_SO AND CD_COMPANY = @P_CD_COMPANY AND AM_CLS <> 0 )
BEGIN

	SELECT      @V_L_VAT    = SUM(CASE YN_RETURN WHEN 'Y' THEN 0- VAT ELSE VAT END ),
				@V_L_AM_CLS = SUM(CASE YN_RETURN WHEN 'Y' THEN 0- AM_CLS ELSE AM_CLS END ),
				
				@V_MAX_LINE = MAX(NO_LINE)
	FROM        SA_IVL 
	WHERE       NO_SO = @P_NO_SO AND CD_COMPANY = @P_CD_COMPANY
	  AND       AM_CLS <> 0 
END
ELSE
BEGIN
	SELECT      @V_L_VAT    = SUM(CASE YN_RETURN WHEN 'Y' THEN 0- VAT ELSE VAT END ),
				@V_L_AM_CLS = SUM(CASE YN_RETURN WHEN 'Y' THEN 0- AM_CLS ELSE AM_CLS END ),
				@V_MAX_LINE = MAX(NO_LINE)
	FROM        SA_IVL 
	WHERE       NO_SO = @P_NO_SO AND CD_COMPANY = @P_CD_COMPANY
END  

  
IF (@V_H_VAT <> @V_L_VAT OR @V_H_AM_CLS <> @V_L_AM_CLS )
BEGIN
    UPDATE SA_IVL
    SET 
	    VAT    =    VAT + CASE YN_RETURN WHEN 'Y' THEN 0 - ( @V_H_VAT - @V_L_VAT ) ELSE ( @V_H_VAT - @V_L_VAT ) END ,
        AM_CLS = AM_CLS + CASE YN_RETURN WHEN 'Y' THEN 0 - ( @V_H_AM_CLS - @V_L_AM_CLS ) ELSE ( @V_H_AM_CLS - @V_L_AM_CLS ) END
    WHERE 
	    NO_SO = @P_NO_SO AND  CD_COMPANY  = @P_CD_COMPANY  AND  NO_LINE =  @V_MAX_LINE
END
GO

