USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[UP_MM_QTIOLOT_INSERT]    Script Date: 2019-11-04 오전 10:37:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[UP_MM_QTIOLOT_INSERT]   
(      
 @P_CD_COMPANY   NVARCHAR(7),      
 @P_NO_IO    NVARCHAR(20),      
 @P_NO_IOLINE   NUMERIC(5),      
 @P_NO_LOT    NVARCHAR(100),      
 @P_CD_ITEM    NVARCHAR(50),      
 @P_DT_IO    NVARCHAR(8),      
 @P_FG_PS    NCHAR(1),      
 @P_FG_IO    NVARCHAR(3),      
 @P_CD_QTIOTP   NVARCHAR(7),      
 @P_CD_SL    NVARCHAR(7),      
 @P_QT_IO    NUMERIC(17,4),      
 @P_NO_IO_MGMT   NVARCHAR(20),      
 @P_NO_IOLINE_MGMT  NUMERIC(5),      
 @P_NO_IOLINE_MGMT2  NUMERIC(5),      
 @P_YN_RETURN   NCHAR(1) = 'N',          
 --생산입고등록(생산쪽에서생산완료된생산품을창고에입고시킬때      
 --생산수불LOT의정보를자재수불LOT에넣어서잔량관리를하기위한목적으로      
 --아래의6개컬럼추가      
 @CD_PLANT_PR   NVARCHAR(7)  = NULL,       
 @NO_IO_PR    NVARCHAR(20) = NULL,       
 @NO_LINE_IO_PR   NUMERIC(5)  = 0,      
 @NO_LINE_IO2_PR   NUMERIC(5)  = 0,      
 @FG_SLIP_PR    NVARCHAR(3)  = NULL,       
 @NO_LOT_PR    NVARCHAR(100) = NULL,      
 @P_NO_SO    NVARCHAR(20) = NULL, --2010.01.11 SJH      
 @P_DT_LIMIT    NVARCHAR(10) = NULL, --유효일자       
 @P_DC_LOTRMK   NVARCHAR(100) = NULL ,  --LOT비고 2011.01.26 김병연      
 @P_CD_PLANT    NVARCHAR(7) = NULL,  -- 기초재고등록- LOT입력시     
 @P_ROOT_NO_LOT  NVARCHAR(100) = NULL, --LOT재고변경등록 (최초)    
 @P_ID_INSERT    NVARCHAR(14) = NULL,      
 @P_BEF_NO_LOT   NVARCHAR(100) = NULL,   --LOT재고변경등록(상위)      
 @P_FG_LOT_ADD  NVARCHAR(3) = 'N', --LOT재고변경등록 여부    
 @P_BARCODE     NVARCHAR(200) = NULL, -- 삼륭물산 전용
 @P_CD_MNG1  NVARCHAR(200) = NULL,  
 @P_CD_MNG2  NVARCHAR(200) = NULL,  
 @P_CD_MNG3  NVARCHAR(200) = NULL,  
 @P_CD_MNG4  NVARCHAR(200) = NULL,  
 @P_CD_MNG5  NVARCHAR(200) = NULL,  
 @P_CD_MNG6  NVARCHAR(200) = NULL,  
 @P_CD_MNG7  NVARCHAR(200) = NULL,  
 @P_CD_MNG8  NVARCHAR(200) = NULL,  
 @P_CD_MNG9  NVARCHAR(200) = NULL,  
 @P_CD_MNG10  NVARCHAR(200) = NULL,  
 @P_CD_MNG11  NVARCHAR(200) = NULL,  
 @P_CD_MNG12  NVARCHAR(200) = NULL,  
 @P_CD_MNG13  NVARCHAR(200) = NULL,  
 @P_CD_MNG14  NVARCHAR(200) = NULL,  
 @P_CD_MNG15  NVARCHAR(200) = NULL,  
 @P_CD_MNG16  NVARCHAR(200) = NULL,  
 @P_CD_MNG17  NVARCHAR(200) = NULL,  
 @P_CD_MNG18  NVARCHAR(200) = NULL,  
 @P_CD_MNG19  NVARCHAR(200) = NULL,  
 @P_CD_MNG20  NVARCHAR(200) = NULL ,
 @P_NO_POP       NVARCHAR(30)= NULL ,
 @P_NO_POP_LINE  NUMERIC(5,0) = 0 ,
 @P_NO_POP_LINE2 NUMERIC(5,0) = 0 ,
 @P_NUM_USERDEF1	NUMERIC(19,6) = NULL,
 @P_NUM_USERDEF2	NUMERIC(19,6) = NULL,
 @P_NUM_USERDEF3	NUMERIC(19,6) = NULL,
 @P_NUM_USERDEF4	NUMERIC(19,6) = NULL,
 @P_NUM_USERDEF5	NUMERIC(19,6) = NULL
)      
AS

DECLARE @ERRNO    INT,      
  @ERRMSG    NVARCHAR(255),      
  @P_NO_IO_SC   NVARCHAR(20),      
  @P_NO_IOLINE_SC  NUMERIC(5, 0),       
  @P_NO_IOLINE2  NUMERIC(5),      
  @P_NO_IOLINE_SC2 NUMERIC(5),      
  @V_NO_IO   NVARCHAR(20)  ,    
  @V_NO_IO_MGMT   NVARCHAR(20) ,      
  @V_DTS_INSERT  NVARCHAR(14),  -- 등록일      
  @V_QT_IO   NUMERIC(17,4),      
  @V_QT_IO_LOT   NUMERIC(17,4),
  @V_SERVERKEY   NVARCHAR(25),
  @V_CD_PLANT_REF	NVARCHAR(7)           
       
SET  @V_NO_IO = @P_NO_IO      
SET @V_NO_IO_MGMT = @P_NO_IO_MGMT    
SET @V_DTS_INSERT = REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(20), GETDATE(), 120), '-',''), ' ', ''),':','')        
SET @P_NO_IOLINE2  = 0 
SELECT  @V_SERVERKEY = MAX(SERVER_KEY) FROM CM_SERVER_CONFIG WHERE YN_UPGRADE = 'Y'

    
--이부분은 수주등록에서 자동프로세스(출하)일때 LOT를 저장하기 위한 로직임      
IF((@P_NO_IO IS NULL OR @P_NO_IO = '') AND @P_NO_SO IS NOT NULL)      
BEGIN      
	SELECT TOP 1 @V_NO_IO = NO_IO      
	FROM MM_QTIO      
	WHERE CD_COMPANY = @P_CD_COMPANY      
	AND  NO_PSO_MGMT = @P_NO_SO      

	IF (@P_FG_PS = '1')    
	SET @V_NO_IO_MGMT = @V_NO_IO    
END      
      
SELECT @P_NO_IO_SC = LOT.NO_IO_SC, @P_NO_IOLINE_SC = LOT.NO_IOLINE_SC, @P_NO_IOLINE_SC2 = LOT.NO_IOLINE_SC2, @V_CD_PLANT_REF = L.CD_PLANT
FROM  MM_QTIOLOT LOT INNER JOIN MM_QTIO L     
ON	  LOT.NO_IO = L.NO_IO AND LOT.NO_IOLINE = L.NO_IOLINE AND LOT.CD_COMPANY = L.CD_COMPANY
WHERE LOT.CD_COMPANY = @P_CD_COMPANY      
AND   LOT.NO_IO  = @P_NO_IO_MGMT      
AND   LOT.NO_IOLINE = @P_NO_IOLINE_MGMT      
AND   LOT.NO_IOLINE2 = @P_NO_IOLINE_MGMT2      
AND   LOT.NO_LOT  = @P_NO_LOT   
      
IF (ISNULL(@P_CD_PLANT,'') = '' ) 
BEGIN  
	SELECT @P_CD_PLANT = CD_PLANT
	  FROM MM_QTIO
	 WHERE CD_COMPANY = @P_CD_COMPANY
	   AND NO_IO = @P_NO_IO
	   AND NO_IOLINE = @P_NO_IOLINE
END

IF (ISNULL(@V_CD_PLANT_REF,'') <> '' AND (ISNULL(@V_CD_PLANT_REF,'') <> @P_CD_PLANT) AND  @P_FG_PS = '2') 
BEGIN 
	SELECT @ERRNO = 100000,      
	@ERRMSG =  'LOT원인전표의 공장코드가 일치하지 않습니다.[UP_MM_QTIOLOT_INSERT]'      
	GOTO ERROR   
END           

IF (@P_FG_PS = '1')      
BEGIN      
	--재고LOT변경등록에서 INSERT----------------    
	IF ( @P_FG_LOT_ADD = 'Y')     
	BEGIN      
		SELECT @V_QT_IO = SUM(QT_IO)      
		FROM   MM_QTIO    
		WHERE  NO_IO      = @V_NO_IO     
		AND    CD_COMPANY = @P_CD_COMPANY     
		AND    NO_IOLINE  = @P_NO_IOLINE    
	    
		SELECT @V_QT_IO_LOT = SUM(A.QT_IO)     
		FROM     
		( --- LOT수량 - LOT 변경되면서 빠진수량 + LOT출고수량    
			SELECT     
			SUM(QT_IO) - SUM(ISNULL(QT_MGMT,0)) AS QT_IO     
			FROM   MM_QTIOLOT    
			WHERE  NO_IO      = @V_NO_IO     
			AND    CD_COMPANY = @P_CD_COMPANY     
			AND    NO_IOLINE  = @P_NO_IOLINE    
			--AND    ISNULL(FG_LOT_ADD,'Y') <> 'Y'   -- LOT재고변경등록 여부    
			  
			UNION ALL    
			  
			SELECT     
			SUM(QT_IO) AS QT_IO     
			FROM   MM_QTIOLOT    
			WHERE  NO_IO_MGMT      = @V_NO_IO     
			AND    FG_PS = '2'    
			AND    CD_COMPANY = @P_CD_COMPANY     
			AND    NO_IOLINE_MGMT  = @P_NO_IOLINE    
		)A     
     
		IF ( @V_QT_IO < @V_QT_IO_LOT )    
		BEGIN    
			SELECT @ERRNO = 100000,      
			 @ERRMSG =  'LOT변경등록된 총수량과 원인전표의 입고수량과 맞지않습니다![UP_MM_QTIOLOT_INSERT]'      
			GOTO ERROR      
		END     
 
  
		INSERT MM_QTIOLOT_R_HST       
		(      
			CD_COMPANY,  NO_IO,   NO_IOLINE,  NO_IOLINE2,   NO_LOT,      
			CD_ITEM,  DT_IO,   FG_PS,   FG_IO,    CD_QTIOTP,      
			CD_SL,   QT_IO,   NO_IO_SC,  NO_IOLINE_SC,  NO_IOLINE_SC2,      
			YN_RETURN,  CD_PLANT_PR, NO_IO_PR,  NO_LINE_IO_PR,  NO_LINE_IO2_PR,      
			FG_SLIP_PR,  NO_LOT_PR,  DT_LIMIT,  DC_RMK , CD_PLANT ,     
			ROOT_NO_LOT, ID_INSERT, BEF_NO_LOT, DTS_INSERT,  FG_LOT_ADD,
			CD_MNG1, CD_MNG2, CD_MNG3, CD_MNG4, CD_MNG5,  
			CD_MNG6, CD_MNG7, CD_MNG8, CD_MNG9, CD_MNG10,  
			CD_MNG11, CD_MNG12, CD_MNG13, CD_MNG14, CD_MNG15,  
			CD_MNG16, CD_MNG17, CD_MNG18, CD_MNG19, CD_MNG20 
		)       
		VALUES      
		(      
			@P_CD_COMPANY, @V_NO_IO,  @P_NO_IOLINE, ISNULL(@P_NO_IOLINE2,0),  @P_NO_LOT,      
			@P_CD_ITEM,  @P_DT_IO,  @P_FG_PS,  @P_FG_IO,   @P_CD_QTIOTP,      
			@P_CD_SL,  @P_QT_IO,  @V_NO_IO_MGMT, @P_NO_IOLINE_MGMT, @P_NO_IOLINE_MGMT2,      
			@P_YN_RETURN, @CD_PLANT_PR, @NO_IO_PR,  @NO_LINE_IO_PR,  @NO_LINE_IO2_PR,      
			@FG_SLIP_PR, @NO_LOT_PR,  @P_DT_LIMIT, @P_DC_LOTRMK  ,@P_CD_PLANT ,    
			@P_ROOT_NO_LOT , @P_ID_INSERT , @P_BEF_NO_LOT , @V_DTS_INSERT , @P_FG_LOT_ADD,
			@P_CD_MNG1, @P_CD_MNG2, @P_CD_MNG3, @P_CD_MNG4, @P_CD_MNG5,  
			@P_CD_MNG6, @P_CD_MNG7, @P_CD_MNG8, @P_CD_MNG9, @P_CD_MNG10,  
			@P_CD_MNG11, @P_CD_MNG12, @P_CD_MNG13, @P_CD_MNG14, @P_CD_MNG15,  
			@P_CD_MNG16, @P_CD_MNG17, @P_CD_MNG18, @P_CD_MNG19, @P_CD_MNG20
		)       
	END           
 ------------------------------------------  
    
	--입고일경우는무조건0을넣어준다.      
	SELECT @P_NO_IOLINE2 = 0      
	
	IF @V_SERVERKEY LIKE 'DAEKHON%' AND @P_FG_IO IN ('001','030')
	BEGIN 
		SELECT	@P_CD_MNG7 = CD_PARTNER,
				@P_CD_MNG8 = (SELECT TOP 1 LN_PARTNER FROM MA_PARTNER WHERE CD_COMPANY = MM_QTIO.CD_COMPANY AND CD_PARTNER = MM_QTIO.CD_PARTNER)
		FROM	MM_QTIO WHERE NO_IO = @P_NO_IO AND NO_IOLINE = @P_NO_IOLINE AND CD_COMPANY = @P_CD_COMPANY
	END
	
	IF (@V_SERVERKEY LIKE 'SANSUNG%')
	BEGIN 
		
		DECLARE @V_CD_USERDEF1  NVARCHAR(4),
				@V_NUM_USERDEF1 NUMERIC(17,4)
				
		SELECT	@V_CD_USERDEF1	= CD_USERDEF1,
				@V_NUM_USERDEF1 = NUM_USERDEF1
		FROM	MA_PITEM WHERE CD_COMPANY = @P_CD_COMPANY AND CD_PLANT = @P_CD_PLANT AND CD_ITEM = @P_CD_ITEM						
				
		IF(ISNULL(@P_DT_LIMIT, '') = '')
		BEGIN
			IF(ISNULL(@V_CD_USERDEF1, '') = '001')
			BEGIN
				SELECT @P_DT_LIMIT = CONVERT(NVARCHAR(8),DATEADD(DD, -1, DATEADD(MM, ISNULL(@V_NUM_USERDEF1,0), @P_DT_IO)),112)
			END	
			ELSE IF(ISNULL(@V_CD_USERDEF1, '') = '002')
			BEGIN
				SELECT @P_DT_LIMIT = CONVERT(NVARCHAR(8),DATEADD(DD, -1, DATEADD(DD, ISNULL(@V_NUM_USERDEF1,0), @P_DT_IO)),112)
			END
		END	
	END
	
    
	INSERT MM_QTIOLOT       
	(      
		CD_COMPANY,  NO_IO,   NO_IOLINE,  NO_IOLINE2,   NO_LOT,      
		CD_ITEM,  DT_IO,   FG_PS,   FG_IO,    CD_QTIOTP,      
		CD_SL,   QT_IO,   NO_IO_SC,  NO_IOLINE_SC,  NO_IOLINE_SC2,      
		YN_RETURN,  CD_PLANT_PR, NO_IO_PR,  NO_LINE_IO_PR,  NO_LINE_IO2_PR,      
		FG_SLIP_PR,  NO_LOT_PR,  DT_LIMIT,  DC_RMK , CD_PLANT ,     
		ROOT_NO_LOT, ID_INSERT, BEF_NO_LOT, DTS_INSERT,  FG_LOT_ADD ,
		BARCODE,
		CD_MNG1, CD_MNG2, CD_MNG3, CD_MNG4, CD_MNG5,  
		CD_MNG6, CD_MNG7, CD_MNG8, CD_MNG9, CD_MNG10,  
		CD_MNG11, CD_MNG12, CD_MNG13, CD_MNG14, CD_MNG15,  
		CD_MNG16, CD_MNG17, CD_MNG18, CD_MNG19, CD_MNG20 ,
		NO_POP, NO_POP_LINE, NO_POP_LINE2, 
		NUM_USERDEF1, NUM_USERDEF2,NUM_USERDEF3, NUM_USERDEF4, NUM_USERDEF5  
	)       
	VALUES      
	(      
		@P_CD_COMPANY, @V_NO_IO,  @P_NO_IOLINE, @P_NO_IOLINE2,  @P_NO_LOT,      
		@P_CD_ITEM,  @P_DT_IO,  @P_FG_PS,  @P_FG_IO,   @P_CD_QTIOTP,      
		@P_CD_SL,  @P_QT_IO,  @V_NO_IO_MGMT, @P_NO_IOLINE_MGMT, @P_NO_IOLINE_MGMT2,      
		@P_YN_RETURN, @CD_PLANT_PR, @NO_IO_PR,  @NO_LINE_IO_PR,  @NO_LINE_IO2_PR,      
		@FG_SLIP_PR, @NO_LOT_PR,  @P_DT_LIMIT, @P_DC_LOTRMK  ,@P_CD_PLANT ,    
		@P_ROOT_NO_LOT , @P_ID_INSERT , @P_BEF_NO_LOT , @V_DTS_INSERT , @P_FG_LOT_ADD,
		@P_BARCODE,
		@P_CD_MNG1, @P_CD_MNG2, @P_CD_MNG3, @P_CD_MNG4, @P_CD_MNG5,  
		@P_CD_MNG6, @P_CD_MNG7, @P_CD_MNG8, @P_CD_MNG9, @P_CD_MNG10,  
		@P_CD_MNG11, @P_CD_MNG12, @P_CD_MNG13, @P_CD_MNG14, @P_CD_MNG15,  
		@P_CD_MNG16, @P_CD_MNG17, @P_CD_MNG18, @P_CD_MNG19, @P_CD_MNG20 ,
		@P_NO_POP, @P_NO_POP_LINE, @P_NO_POP_LINE2,
		@P_NUM_USERDEF1, @P_NUM_USERDEF2, @P_NUM_USERDEF3, @P_NUM_USERDEF4, @P_NUM_USERDEF5           
	)      
        
     
	IF (@@ERROR <> 0)      
	BEGIN      
		SELECT @ERRNO = 100000,      
		@ERRMSG = '[UP_MM_QTIOLOT_INSERT]작업을정상적으로처리하지못했습니다.'      
		GOTO ERROR      
	END      
END      
      
ELSE IF(@P_FG_PS = '2')      
BEGIN      
	--DUP 에러방지하기위하항번에MAX값+ 1을넣어줌      
	SELECT @P_NO_IOLINE2 = ( SELECT MAX(NO_IOLINE2) + 1      
	FROM MM_QTIOLOT      
	WHERE CD_COMPANY = @P_CD_COMPANY      
	AND  NO_IO  = @V_NO_IO      
	AND  NO_IOLINE = @P_NO_IOLINE      
	AND  NO_LOT  = @P_NO_LOT )      
	  
	--NULL일경우는초기값이0을넣어줌. 그렇지않으면원래구한값을넣어줌.      
	--SELECT @P_NO_IOLINE2 = CASE WHEN @P_NO_IOLINE2 IS NULL THEN 0 ELSE @P_NO_IOLINE2 END      
	SET @P_NO_IOLINE2 = ISNULL( @P_NO_IOLINE2,0)  
	  
	INSERT MM_QTIOLOT      
	(      
		CD_COMPANY,  NO_IO,   NO_IOLINE,   NO_IOLINE2,   NO_LOT,      
		CD_ITEM,  DT_IO,   FG_PS,    FG_IO,    CD_QTIOTP,      
		CD_SL,   QT_IO,   NO_IO_MGMT,   NO_IOLINE_MGMT,  NO_IOLINE_MGMT2,      
		NO_IO_SC,  NO_IOLINE_SC, NO_IOLINE_SC2,  YN_RETURN,   DT_LIMIT,      
		DC_RMK  , CD_PLANT, FG_LOT_ADD, BARCODE,
		CD_MNG1, CD_MNG2, CD_MNG3, CD_MNG4, CD_MNG5,  
		CD_MNG6, CD_MNG7, CD_MNG8, CD_MNG9, CD_MNG10,  
		CD_MNG11, CD_MNG12, CD_MNG13, CD_MNG14, CD_MNG15,  
		CD_MNG16, CD_MNG17, CD_MNG18, CD_MNG19, CD_MNG20,
		NO_POP, NO_POP_LINE, NO_POP_LINE2,
		NUM_USERDEF1, NUM_USERDEF2,NUM_USERDEF3, NUM_USERDEF4, NUM_USERDEF5,
		DTS_INSERT     
	)      
	VALUES      
	(      
		@P_CD_COMPANY, @V_NO_IO,  @P_NO_IOLINE,  @P_NO_IOLINE2,  @P_NO_LOT,      
		@P_CD_ITEM,  @P_DT_IO,  @P_FG_PS,   @P_FG_IO,   @P_CD_QTIOTP,      
		@P_CD_SL,  @P_QT_IO,  @P_NO_IO_MGMT,  @P_NO_IOLINE_MGMT, @P_NO_IOLINE_MGMT2,      
		@P_NO_IO_SC, @P_NO_IOLINE_SC,ISNULL(@P_NO_IOLINE_SC2, 0), @P_YN_RETURN,  @P_DT_LIMIT,      
		@P_DC_LOTRMK, @P_CD_PLANT, ISNULL(@P_FG_LOT_ADD,'N'), @P_BARCODE,
		@P_CD_MNG1, @P_CD_MNG2, @P_CD_MNG3, @P_CD_MNG4, @P_CD_MNG5,  
		@P_CD_MNG6, @P_CD_MNG7, @P_CD_MNG8, @P_CD_MNG9, @P_CD_MNG10,  
		@P_CD_MNG11, @P_CD_MNG12, @P_CD_MNG13, @P_CD_MNG14, @P_CD_MNG15,  
		@P_CD_MNG16, @P_CD_MNG17, @P_CD_MNG18, @P_CD_MNG19, @P_CD_MNG20 ,
		@P_NO_POP, @P_NO_POP_LINE, @P_NO_POP_LINE2,
		@P_NUM_USERDEF1, @P_NUM_USERDEF2, @P_NUM_USERDEF3, @P_NUM_USERDEF4, @P_NUM_USERDEF5,
		@V_DTS_INSERT                
	)      
      
	IF (@@ERROR <> 0)      
	BEGIN       
		SELECT @ERRNO = 100000,      
		@ERRMSG = '[UP_MM_QTIOLOT_INSERT]작업을정상적으로처리하지못했습니다.'      
		GOTO ERROR       
	END      
END      
      
RETURN      
ERROR: RAISERROR ( @ERRMSG,16,1  )
GO

