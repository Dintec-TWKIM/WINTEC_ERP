USE [NEOE]
GO
/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_GIR_LOG]    Script Date: 2017-01-11 오후 5:25:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_SA_GIR_LOG]  
(  
    @P_CD_COMPANY   NVARCHAR(7),
	@P_TP_GIR		NVARCHAR(4),
    @P_NO_GIR       NVARCHAR(20),
	@P_ID_DELETE	NVARCHAR(15)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_ERRMSG   VARCHAR(255),   -- ERROR 메시지
		@V_NO_KEY	NVARCHAR(20),   
		@V_NO_HST	NUMERIC(5, 0)

BEGIN TRAN SP_CZ_SA_GIR_LOG
BEGIN TRY

SELECT @V_NO_HST = (ISNULL(MAX(NO_HST), 0) + 1)
FROM CZ_SA_GIRH_LOG
WHERE CD_COMPANY = @P_CD_COMPANY
AND TP_GIR = @P_TP_GIR
AND NO_GIR = @P_NO_GIR

IF @P_TP_GIR = '001'
BEGIN
	INSERT INTO CZ_SA_GIRH_LOG
	(
		CD_COMPANY,
		NO_GIR,
		TP_GIR,
		NO_HST,
		DT_GIR,
		NO_EMP,
		TP_BUSI,
		CD_PLANT,
		CD_PARTNER,
		GI_PARTNER,
		STA_GIR,
		YN_RETURN,
		DC_RMK,
		TP_GI,
		FG_UM,
		DC_RMK1, 
        DC_RMK2,
		DTS_INSERT,
		ID_INSERT,
		DTS_UPDATE,
		ID_UPDATE,
		DTS_DELETE,
		ID_DELETE
	)
	SELECT CD_COMPANY,
		   NO_GIR,
		   @P_TP_GIR,
		   @V_NO_HST,
		   DT_GIR,
		   NO_EMP,
		   TP_BUSI,
		   CD_PLANT,
		   CD_PARTNER,
		   GI_PARTNER,
		   STA_GIR,
		   YN_RETURN,
		   DC_RMK,
		   TP_GI,
		   FG_UM,
		   DC_RMK1, 
           DC_RMK2,
		   DTS_INSERT,
		   ID_INSERT,
		   DTS_UPDATE,
		   ID_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM SA_GIRH
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	INSERT INTO CZ_SA_GIRH_DETAIL_LOG
	(
		CD_COMPANY,
		TP_GIR,
		NO_GIR,
		NO_HST,
		NO_GIREQ,
		NO_IMO,
		NO_IMO_BILL,
		CD_MAIN_CATEGORY,
		CD_SUB_CATEGORY,
		YN_PACKING,
		YN_TAX_RETURN,
		CD_DELIVERY_TO,
		SEQ_DELIVERY_PIC,
		CD_FREIGHT,
		CD_FORWARDER, 
        WEIGHT,
		DT_START,
		DT_COMPLETE,
		DTS_SUBMIT,
		DTS_CONFIRM,
		FG_REASON,
		DT_WORKING,
		DT_PACKING,
		DT_LOADING,
		YN_AUTO_SUBMIT,
		DT_AUTO_COMPLETE,
		DT_BILL, 
        NO_WORK_EMP,
		NO_PACK_EMP,
		CD_RMK,
		TP_CHARGE,
		DC_RMK,
		DC_RMK1,
		DC_RMK2,
		DC_RMK3,
		DC_RMK4,
		DC_RMK5,
		DC_RESULT,
		ID_INSERT,
		DTS_INSERT,
		ID_UPDATE,
		DTS_UPDATE,
		ID_DELETE,
		DTS_DELETE
	)
	SELECT CD_COMPANY,
		   @P_TP_GIR,
		   NO_GIR,
		   @V_NO_HST,
		   NO_GIREQ,
		   NO_IMO,
		   NO_IMO_BILL,
		   CD_MAIN_CATEGORY,
		   CD_SUB_CATEGORY,
		   YN_PACKING,
		   YN_TAX_RETURN,
		   CD_DELIVERY_TO,
		   SEQ_DELIVERY_PIC,
		   CD_FREIGHT,
		   CD_FORWARDER, 
		   WEIGHT,
		   DT_START,
		   DT_COMPLETE,
		   DTS_SUBMIT,
		   DTS_CONFIRM,
		   FG_REASON,
		   DT_WORKING,
		   DT_PACKING,
		   DT_LOADING,
		   YN_AUTO_SUBMIT,
		   DT_AUTO_COMPLETE,
		   DT_BILL, 
		   NO_WORK_EMP,
		   NO_PACK_EMP,
		   CD_RMK,
		   TP_CHARGE,
		   DC_RMK,
		   DC_RMK1,
		   DC_RMK2,
		   DC_RMK3,
		   DC_RMK4,
		   DC_RMK5,
		   DC_RESULT,
		   ID_INSERT,
		   DTS_INSERT,
		   ID_UPDATE,
		   DTS_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM CZ_SA_GIRH_WORK_DETAIL
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	INSERT INTO CZ_SA_GIRL_LOG
	(
		CD_COMPANY,
		TP_GIR,
		NO_GIR,
		NO_HST,
		SEQ_GIR,
		GI_PARTNER,
		CD_ITEM,
		TP_ITEM,
		UNIT,
		DT_DUEDATE,
		DT_REQGI,
		YN_INSPECT,
		QT_GIR,
		UM,
		AM_GIR,
		CD_EXCH,
		RT_EXCH, 
        AM_GIRAMT,
		NO_PROJECT,
		CD_SALEGRP,
		NO_EMP,
		NO_SO,
		SEQ_SO,
		QT_GI,
		TP_GI,
		TP_IV,
		TP_BUSI,
		GIR,
		IV,
		RET,
		TP_VAT,
		RT_VAT,
		QT_GIR_IM,
		QT_GI_IM,
		FG_TAXP,
		AM_VAT,
		CD_SL, 
        NO_IO_MGMT,
		NO_IOLINE_MGMT,
		NO_SO_MGMT,
		NO_SOLINE_MGMT,
		AM_EXGI,
		AM_GI,
		FG_LC_OPEN,
		DC_RMK,
		NO_INV,
		TP_UM_TAX,
		UMVAT_GIR,
		ID_MEMO,
		QT_GIR_STOCK,
        YN_GI_STOCK,
		YN_ADD_STOCK,
		ID_GI_STOCK,
		DTS_GI_STOCK,
		DTS_INSERT,
		ID_INSERT,
		DTS_UPDATE,
		ID_UPDATE,
		DTS_DELETE,
		ID_DELETE
	)
	SELECT CD_COMPANY,
		   @P_TP_GIR,
		   NO_GIR,
		   @V_NO_HST,
		   SEQ_GIR,
		   GI_PARTNER,
		   CD_ITEM,
		   TP_ITEM,
		   UNIT,
		   DT_DUEDATE,
		   DT_REQGI,
		   YN_INSPECT,
		   QT_GIR,
		   UM,
		   AM_GIR,
		   CD_EXCH,
		   RT_EXCH, 
		   AM_GIRAMT,
		   NO_PROJECT,
		   CD_SALEGRP,
		   NO_EMP,
		   NO_SO,
		   SEQ_SO,
		   QT_GI,
		   TP_GI,
		   TP_IV,
		   TP_BUSI,
		   GIR,
		   IV,
		   RET,
		   TP_VAT,
		   RT_VAT,
		   QT_GIR_IM,
		   QT_GI_IM,
		   FG_TAXP,
		   AM_VAT,
		   CD_SL, 
		   NO_IO_MGMT,
		   NO_IOLINE_MGMT,
		   NO_SO_MGMT,
		   NO_SOLINE_MGMT,
		   AM_EXGI,
		   AM_GI,
		   FG_LC_OPEN,
		   DC_RMK,
		   NO_INV,
		   TP_UM_TAX,
		   UMVAT_GIR,
		   ID_MEMO,
		   QT_GIR_STOCK, 
		   YN_GI_STOCK,
		   YN_ADD_STOCK,
		   ID_GI_STOCK,
		   DTS_GI_STOCK,
		   DTS_INSERT,
		   ID_INSERT,
		   DTS_UPDATE,
		   ID_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM SA_GIRL
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	IF EXISTS (SELECT 1 
			   FROM SA_GIRL 
			   WHERE CD_COMPANY = @P_CD_COMPANY 
			   AND NO_GIR = @P_NO_GIR
			   AND ISNULL(NO_INV, '') <> '')
	BEGIN
		INSERT INTO CZ_TR_INVH_LOG
		(
			CD_COMPANY,
			NO_INV,
			NO_HST,
			DT_BALLOT,
			CD_BIZAREA,
			CD_SALEGRP,
			NO_EMP,
			FG_LC,
			CD_PARTNER,
			CD_EXCH,
			AM_EX,
			DT_LOADING,
			CD_ORIGIN,
			CD_EXPORT, 
		    CD_PRODUCT,
			TP_TRANSPORT,
			TP_TRANS,
			PORT_LOADING,
			PORT_ARRIVER,
			CD_NOTIFY,
			DT_TO,
			REMARK1,
			REMARK2,
			REMARK3,
			REMARK4,
			REMARK5,
			DTS_INSERT,
			ID_INSERT,
			DTS_UPDATE,
			ID_UPDATE, 
		    NO_TO,
			NO_BL,
			NM_NOTIFY,
			ADDR1_NOTIFY,
			ADDR2_NOTIFY,
			CD_CONSIGNEE,
			NM_CONSIGNEE,
			ADDR1_CONSIGNEE,
			ADDR2_CONSIGNEE,
			REMARK,
			NM_PARTNER,
			ADDR1_PARTNER, 
		    ADDR2_PARTNER,
			NM_EXPORT,
			ADDR1_EXPORT,
			ADDR2_EXPORT,
			COND_PRICE,
			DESCRIPTION,
			YN_RETURN,
			DT_SAILING_ON,
			COND_PAY,
			ARRIVER_COUNTRY,
			YN_INSURANCE,
			DTS_DELETE,
			ID_DELETE
		)
		SELECT IH.CD_COMPANY,
			   IH.NO_INV,
			   @V_NO_HST,
			   DT_BALLOT,
			   CD_BIZAREA,
			   CD_SALEGRP,
			   NO_EMP,
			   FG_LC,
			   CD_PARTNER,
			   CD_EXCH,
			   AM_EX,
			   DT_LOADING,
			   CD_ORIGIN,
			   CD_EXPORT, 
			   CD_PRODUCT,
			   TP_TRANSPORT,
			   TP_TRANS,
			   PORT_LOADING,
			   PORT_ARRIVER,
			   CD_NOTIFY,
			   DT_TO,
			   REMARK1,
			   REMARK2,
			   REMARK3,
			   REMARK4,
			   REMARK5,
			   DTS_INSERT,
			   ID_INSERT,
			   DTS_UPDATE,
			   ID_UPDATE, 
			   NO_TO,
			   NO_BL,
			   NM_NOTIFY,
			   ADDR1_NOTIFY,
			   ADDR2_NOTIFY,
			   CD_CONSIGNEE,
			   NM_CONSIGNEE,
			   ADDR1_CONSIGNEE,
			   ADDR2_CONSIGNEE,
			   REMARK,
			   NM_PARTNER,
			   ADDR1_PARTNER, 
			   ADDR2_PARTNER,
			   NM_EXPORT,
			   ADDR1_EXPORT,
			   ADDR2_EXPORT,
			   COND_PRICE,
			   DESCRIPTION,
			   YN_RETURN,
			   DT_SAILING_ON,
			   COND_PAY,
			   ARRIVER_COUNTRY,
			   YN_INSURANCE,
			   NEOE.SF_SYSDATE(GETDATE()),
			   @P_ID_DELETE
		FROM (SELECT GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV 
			  FROM SA_GIRL GL
			  WHERE CD_COMPANY = @P_CD_COMPANY
			  AND NO_GIR = @P_NO_GIR
			  GROUP BY GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV) GL
		LEFT JOIN CZ_TR_INVH IH ON IH.CD_COMPANY = GL.CD_COMPANY AND IH.NO_INV = GL.NO_INV

		INSERT INTO CZ_TR_INVL_LOG
		(
			CD_COMPANY,
			NO_INV,
			NO_HST,
			NO_LINE,
			CD_PLANT,
			CD_ITEM,
			DT_DELIVERY,
			QT_INVENT,
			UM_INVENT,
			AM_INVENT,
			QT_SO,
			UM_SO,
			AM_EXSO,
			NO_PO, 
		    NO_LINE_PO,
			YN_PRINT,
			DTS_INSERT,
			ID_INSERT,
			DTS_UPDATE,
			ID_UPDATE,
			DTS_DELETE,
			ID_DELETE
		)
		SELECT IL.CD_COMPANY,
			   IL.NO_INV,
			   @V_NO_HST,
			   NO_LINE,
			   CD_PLANT,
			   CD_ITEM,
			   DT_DELIVERY,
			   QT_INVENT,
			   UM_INVENT,
			   AM_INVENT,
			   QT_SO,
			   UM_SO,
			   AM_EXSO,
			   NO_PO, 
			   NO_LINE_PO,
			   YN_PRINT,
			   DTS_INSERT,
			   ID_INSERT,
			   DTS_UPDATE,
			   ID_UPDATE,
			   NEOE.SF_SYSDATE(GETDATE()),
			   @P_ID_DELETE
		FROM (SELECT GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV 
			  FROM SA_GIRL GL
			  WHERE CD_COMPANY = @P_CD_COMPANY
			  AND NO_GIR = @P_NO_GIR
			  GROUP BY GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV) GL
		LEFT JOIN CZ_TR_INVL IL ON IL.CD_COMPANY = GL.CD_COMPANY AND IL.NO_INV = GL.NO_INV
	END
END
ELSE
BEGIN
	INSERT INTO CZ_SA_GIRH_LOG
	(
		CD_COMPANY,
		TP_GIR,
		NO_GIR,
		NO_HST,
		DT_GIR,
		NO_EMP,
		TP_BUSI,
		CD_PLANT,
		CD_PARTNER,
		GI_PARTNER,
		STA_GIR,
		YN_RETURN,
		DC_RMK,
		TP_GI,
		FG_UM,
		DC_RMK1, 
        DC_RMK2,
		DTS_INSERT,
		ID_INSERT,
		DTS_UPDATE,
		ID_UPDATE,
		DTS_DELETE,
		ID_DELETE
	)
	SELECT CD_COMPANY,
		   @P_TP_GIR,
		   NO_GIR,
		   @V_NO_HST,
		   DT_GIR,
		   NO_EMP,
		   TP_BUSI,
		   CD_PLANT,
		   CD_PARTNER,
		   GI_PARTNER,
		   STA_GIR,
		   YN_RETURN,
		   DC_RMK,
		   TP_GI,
		   FG_UM,
		   DC_RMK1, 
           DC_RMK2,
		   DTS_INSERT,
		   ID_INSERT,
		   DTS_UPDATE,
		   ID_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM CZ_SA_GIRH_PACK
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	INSERT INTO CZ_SA_GIRH_DETAIL_LOG
	(
		CD_COMPANY,
		TP_GIR,
		NO_GIR,
		NO_HST,
		NO_GIREQ,
		NO_IMO,
		CD_MAIN_CATEGORY,
		CD_SUB_CATEGORY,
		YN_PACKING,
		CD_DELIVERY_TO,
		SEQ_DELIVERY_PIC,
		DT_START,
		DT_COMPLETE,
		DTS_SUBMIT,
		DTS_CONFIRM,
		DT_PACKING,
		NO_PACK_EMP,
		CD_RMK,
		TP_CHARGE,
		DC_RMK,
		DC_RMK1,
		DC_RMK2,
		DC_RMK3,
		DC_RMK4,
		DC_RESULT,
		ID_INSERT,
		DTS_INSERT,
		ID_UPDATE,
		DTS_UPDATE,
		ID_DELETE,
		DTS_DELETE
	)
	SELECT CD_COMPANY,
		   @P_TP_GIR,
		   NO_GIR,
		   @V_NO_HST,
		   NO_GIREQ,
		   NO_IMO,
		   CD_PACK_CATEGORY,
		   CD_SUB_CATEGORY,
		   YN_PACKING,
		   CD_COLLECT_FROM,
		   SEQ_COLLECT_PIC,
		   DT_START,
		   DT_COMPLETE,
		   DTS_SUBMIT,
		   DTS_CONFIRM,
		   DT_PACKING,
		   NO_PACK_EMP,
		   CD_RMK,
		   NULL AS TP_CHARGE,
		   DC_RMK,
		   DC_RMK1,
		   DC_RMK2,
		   DC_RMK3,
		   DC_RMK4,
		   DC_RESULT,
		   ID_INSERT,
		   DTS_INSERT,
		   ID_UPDATE,
		   DTS_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM CZ_SA_GIRH_PACK_DETAIL
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	INSERT INTO CZ_SA_GIRL_LOG
	(
		CD_COMPANY,
		TP_GIR,
		NO_GIR,
		NO_HST,
		SEQ_GIR,
		GI_PARTNER,
		CD_ITEM,
		TP_ITEM,
		UNIT,
		DT_DUEDATE,
		DT_REQGI,
		YN_INSPECT,
		QT_GIR,
		UM,
		AM_GIR,
		CD_EXCH,
		RT_EXCH, 
        AM_GIRAMT,
		NO_PROJECT,
		CD_SALEGRP,
		NO_EMP,
		NO_SO,
		SEQ_SO,
		QT_GI,
		TP_GI,
		TP_IV,
		TP_BUSI,
		GIR,
		IV,
		RET,
		TP_VAT,
		RT_VAT,
		QT_GIR_IM,
		QT_GI_IM,
		FG_TAXP,
		AM_VAT,
		CD_SL, 
        NO_IO_MGMT,
		NO_IOLINE_MGMT,
		NO_SO_MGMT,
		NO_SOLINE_MGMT,
		AM_EXGI,
		AM_GI,
		FG_LC_OPEN,
		DC_RMK,
		NO_INV,
		TP_UM_TAX,
		UMVAT_GIR,
		ID_MEMO,
		QT_GIR_STOCK,
        YN_GI_STOCK,
		YN_ADD_STOCK,
		ID_GI_STOCK,
		DTS_GI_STOCK,
		DTS_INSERT,
		ID_INSERT,
		DTS_UPDATE,
		ID_UPDATE,
		DTS_DELETE,
		ID_DELETE
	)
	SELECT CD_COMPANY,
		   @P_TP_GIR,
		   NO_GIR,
		   @V_NO_HST,
		   SEQ_GIR,
		   GI_PARTNER,
		   CD_ITEM,
		   TP_ITEM,
		   UNIT,
		   DT_DUEDATE,
		   DT_REQGI,
		   YN_INSPECT,
		   QT_GIR,
		   UM,
		   AM_GIR,
		   CD_EXCH,
		   RT_EXCH, 
		   AM_GIRAMT,
		   NO_PROJECT,
		   CD_SALEGRP,
		   NO_EMP,
		   NO_SO,
		   SEQ_SO,
		   QT_GI,
		   TP_GI,
		   TP_IV,
		   TP_BUSI,
		   GIR,
		   IV,
		   RET,
		   TP_VAT,
		   RT_VAT,
		   QT_GIR_IM,
		   QT_GI_IM,
		   FG_TAXP,
		   AM_VAT,
		   CD_SL, 
		   NO_IO_MGMT,
		   NO_IOLINE_MGMT,
		   NO_SO_MGMT,
		   NO_SOLINE_MGMT,
		   AM_EXGI,
		   AM_GI,
		   FG_LC_OPEN,
		   DC_RMK,
		   NO_INV,
		   TP_UM_TAX,
		   UMVAT_GIR,
		   ID_MEMO,
		   QT_GIR_STOCK, 
		   YN_GI_STOCK,
		   YN_ADD_STOCK,
		   ID_GI_STOCK,
		   DTS_GI_STOCK,
		   DTS_INSERT,
		   ID_INSERT,
		   DTS_UPDATE,
		   ID_UPDATE,
		   NEOE.SF_SYSDATE(GETDATE()),
		   @P_ID_DELETE
	FROM CZ_SA_GIRL_PACK
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR

	IF EXISTS (SELECT 1 
			   FROM CZ_SA_GIRL_PACK 
			   WHERE CD_COMPANY = @P_CD_COMPANY 
			   AND NO_GIR = @P_NO_GIR
			   AND ISNULL(NO_INV, '') <> '')
	BEGIN
		INSERT INTO CZ_TR_INVH_LOG
		(
			CD_COMPANY,
			NO_INV,
			NO_HST,
			DT_BALLOT,
			CD_BIZAREA,
			CD_SALEGRP,
			NO_EMP,
			FG_LC,
			CD_PARTNER,
			CD_EXCH,
			AM_EX,
			DT_LOADING,
			CD_ORIGIN,
			CD_EXPORT, 
		    CD_PRODUCT,
			TP_TRANSPORT,
			TP_TRANS,
			PORT_LOADING,
			PORT_ARRIVER,
			CD_NOTIFY,
			DT_TO,
			REMARK1,
			REMARK2,
			REMARK3,
			REMARK4,
			REMARK5,
			DTS_INSERT,
			ID_INSERT,
			DTS_UPDATE,
			ID_UPDATE, 
		    NO_TO,
			NO_BL,
			NM_NOTIFY,
			ADDR1_NOTIFY,
			ADDR2_NOTIFY,
			CD_CONSIGNEE,
			NM_CONSIGNEE,
			ADDR1_CONSIGNEE,
			ADDR2_CONSIGNEE,
			REMARK,
			NM_PARTNER,
			ADDR1_PARTNER, 
		    ADDR2_PARTNER,
			NM_EXPORT,
			ADDR1_EXPORT,
			ADDR2_EXPORT,
			COND_PRICE,
			DESCRIPTION,
			YN_RETURN,
			DT_SAILING_ON,
			COND_PAY,
			ARRIVER_COUNTRY,
			YN_INSURANCE,
			DTS_DELETE,
			ID_DELETE
		)
		SELECT IH.CD_COMPANY,
			   IH.NO_INV,
			   @V_NO_HST,
			   DT_BALLOT,
			   CD_BIZAREA,
			   CD_SALEGRP,
			   NO_EMP,
			   FG_LC,
			   CD_PARTNER,
			   CD_EXCH,
			   AM_EX,
			   DT_LOADING,
			   CD_ORIGIN,
			   CD_EXPORT, 
			   CD_PRODUCT,
			   TP_TRANSPORT,
			   TP_TRANS,
			   PORT_LOADING,
			   PORT_ARRIVER,
			   CD_NOTIFY,
			   DT_TO,
			   REMARK1,
			   REMARK2,
			   REMARK3,
			   REMARK4,
			   REMARK5,
			   DTS_INSERT,
			   ID_INSERT,
			   DTS_UPDATE,
			   ID_UPDATE, 
			   NO_TO,
			   NO_BL,
			   NM_NOTIFY,
			   ADDR1_NOTIFY,
			   ADDR2_NOTIFY,
			   CD_CONSIGNEE,
			   NM_CONSIGNEE,
			   ADDR1_CONSIGNEE,
			   ADDR2_CONSIGNEE,
			   REMARK,
			   NM_PARTNER,
			   ADDR1_PARTNER, 
			   ADDR2_PARTNER,
			   NM_EXPORT,
			   ADDR1_EXPORT,
			   ADDR2_EXPORT,
			   COND_PRICE,
			   DESCRIPTION,
			   YN_RETURN,
			   DT_SAILING_ON,
			   COND_PAY,
			   ARRIVER_COUNTRY,
			   YN_INSURANCE,
			   NEOE.SF_SYSDATE(GETDATE()),
			   @P_ID_DELETE
		FROM (SELECT GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV 
			  FROM CZ_SA_GIRL_PACK GL
			  WHERE CD_COMPANY = @P_CD_COMPANY
			  AND NO_GIR = @P_NO_GIR
			  GROUP BY GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV) GL
		LEFT JOIN CZ_TR_INVH IH ON IH.CD_COMPANY = GL.CD_COMPANY AND IH.NO_INV = GL.NO_INV

		INSERT INTO CZ_TR_INVL_LOG
		(
			CD_COMPANY,
			NO_INV,
			NO_HST,
			NO_LINE,
			CD_PLANT,
			CD_ITEM,
			DT_DELIVERY,
			QT_INVENT,
			UM_INVENT,
			AM_INVENT,
			QT_SO,
			UM_SO,
			AM_EXSO,
			NO_PO, 
		    NO_LINE_PO,
			YN_PRINT,
			DTS_INSERT,
			ID_INSERT,
			DTS_UPDATE,
			ID_UPDATE,
			DTS_DELETE,
			ID_DELETE
		)
		SELECT IL.CD_COMPANY,
			   IL.NO_INV,
			   @V_NO_HST,
			   NO_LINE,
			   CD_PLANT,
			   CD_ITEM,
			   DT_DELIVERY,
			   QT_INVENT,
			   UM_INVENT,
			   AM_INVENT,
			   QT_SO,
			   UM_SO,
			   AM_EXSO,
			   NO_PO, 
			   NO_LINE_PO,
			   YN_PRINT,
			   DTS_INSERT,
			   ID_INSERT,
			   DTS_UPDATE,
			   ID_UPDATE,
			   NEOE.SF_SYSDATE(GETDATE()),
			   @P_ID_DELETE
		FROM (SELECT GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV 
			  FROM CZ_SA_GIRL_PACK GL
			  WHERE CD_COMPANY = @P_CD_COMPANY
			  AND NO_GIR = @P_NO_GIR
			  GROUP BY GL.CD_COMPANY, GL.NO_GIR, GL.NO_INV) GL
		LEFT JOIN CZ_TR_INVL IL ON IL.CD_COMPANY = GL.CD_COMPANY AND IL.NO_INV = GL.NO_INV
	END
END

COMMIT TRAN SP_CZ_SA_GIR_LOG

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_SA_GIR_LOG
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_SA_GIR_LOG

GO