USE [NEOE]
GO
/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_IV_AUTO]    Script Date: 2016-04-12 오전 11:07:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_SA_IV_AUTO]    
(    
    @P_CD_COMPANY       NVARCHAR(7),
    @P_NO_IO            NVARCHAR(20),
	@P_DT_IO			NVARCHAR(8),
    @P_ID_USER		    NVARCHAR(14)
)    
AS

DECLARE @V_NO_IV     NVARCHAR(20)
DECLARE @V_ERRMSG	 VARCHAR(255) -- ERROR 메시지

DECLARE @SA_IVL TABLE
(
	NO_IV			NVARCHAR(20),        
    NO_LINE			NUMERIC(5, 0),      
    CD_COMPANY		NVARCHAR(7), 
    CD_PLANT		NVARCHAR(7),     
    NO_IO			NVARCHAR(20),          
    NO_IOLINE		NUMERIC(5, 0),  
    CD_ITEM			NVARCHAR(20),      
    CD_SALEGRP		NVARCHAR(7),   
    CD_CC			NVARCHAR(12),      
    DT_TAX			NCHAR(8),       
    QT_GI_CLS		NUMERIC(17, 4),      
    QT_CLS			NUMERIC(17, 4),  
    UM_ITEM_CLS		NUMERIC(15, 4),  
    AM_CLS			NUMERIC(17, 4),      
    VAT				NUMERIC(17, 4),        
    NO_EMP			NVARCHAR(10),       
    CD_PJT			NVARCHAR(20),         
    TP_IV			NCHAR(3),  
    NO_SO			NVARCHAR(20),        
    NO_SOLINE		NUMERIC(5, 0),    
    CD_EXCH			NVARCHAR(3),    
    RT_EXCH			NUMERIC(11, 4),      
    YN_RETURN		NCHAR(1),  
    UM_EX_CLS		NUMERIC(15, 4),    
    AM_EX_CLS		NUMERIC(17, 4),    
    FG_TRANS		NCHAR(3),
    DT_BL			NVARCHAR(8),
    TP_UM_TAX		NVARCHAR(3),
	YN_AUTO_CHARGE  NVARCHAR(1),
    ID_INSERT		NVARCHAR(15),    
    DTS_INSERT		NVARCHAR(14)
)

BEGIN TRAN SP_CZ_SA_IV_AUTO
BEGIN TRY

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

EXEC NEOE.CP_GETNO @P_CD_COMPANY,'SA', '05', @P_DT_IO,  @V_NO_IV OUTPUT

SET @V_NO_IV = SUBSTRING(@V_NO_IV, 1, 2) + SUBSTRING(@P_NO_IO, 3, LEN(@P_NO_IO) - 2)

;WITH A AS
(
	SELECT OL.CD_COMPANY, 
	       OL.CD_PLANT, 
	       OL.NO_IO, 
	       OL.NO_IOLINE,  
	       OL.CD_ITEM, 
	       OL.CD_GROUP AS CD_SALEGRP, 
	       SG.CD_CC CD_CC, 
	       OL.DT_IO AS DT_TAX,  
	       (ISNULL(OL.QT_UNIT_MM, 0) - ISNULL(OL.QT_CLS_MM, 0)) AS QT_GI_CLS,
	       (ISNULL(OL.QT_IO, 0) - ISNULL(OL.QT_CLS, 0)) AS QT_CLS,
	       OL.NO_EMP, 
	       OL.CD_PJT, 
	       ISNULL(TP.TP_IV, OL.FG_TPIO) AS TP_IV,  
	       OL.NO_PSO_MGMT AS NO_SO, 
	       OL.NO_PSOLINE_MGMT AS NO_SOLINE, 
	       OL.CD_EXCH, 
	       (CASE WHEN OL.CD_EXCH = '000' THEN 1 ELSE EX.RT_EXCH END) AS RT_EXCH,
	       OH.YN_RETURN,
	       OL.UM_EX AS UM_EX_CLS,
	       OL.FG_TRANS,
		   WD.DT_LOADING AS DT_BL,
		   OL.TP_UM_TAX,
		   (CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(CD.CD_FLAG1,'') = '' THEN '0' ELSE CD.CD_FLAG1 END) / 100) AS RT_VAT,
		   (CASE WHEN OL.CD_COMPANY = 'S100' THEN 2 ELSE 0 END) AS AM_FSIZE,
		   OL.NO_ISURCV,
		   WD.TP_CHARGE,
		   ROUND(ISNULL(OL1.AM_EX, 0) * ISNULL(EX.RT_EXCH, 1), 0) AS AM_SO
	FROM MM_QTIO OL
	LEFT JOIN MM_QTIOH OH ON OH.CD_COMPANY = OL.CD_COMPANY AND OH.NO_IO = OL.NO_IO
	LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = OL.CD_COMPANY AND SG.CD_SALEGRP = OL.CD_GROUP
	LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = OL.CD_COMPANY AND SH.NO_SO = OL.NO_PSO_MGMT
	LEFT JOIN SA_TPSO TP ON TP.CD_COMPANY = SH.CD_COMPANY AND TP.TP_SO = SH.TP_SO
	LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = OL.CD_COMPANY AND WD.NO_GIR = OL.NO_ISURCV
	LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = OL.CD_COMPANY AND CD.CD_FIELD = 'MA_B000040' AND CD.CD_SYSDEF = OL.FG_TAX
	LEFT JOIN (SELECT EX.CD_COMPANY, EX.YYMMDD, EX.CURR_SOUR,
		   		   	  (CASE WHEN CURR_SOUR = '002' THEN RATE_BASE ELSE ROUND(RATE_BASE, 2) END) AS RT_EXCH
		   	   FROM MA_EXCHANGE EX
		   	   WHERE EX.NO_SEQ = '1'
		   	   AND EX.CURR_DEST = '000') EX
	ON EX.CD_COMPANY = WD.CD_COMPANY AND EX.YYMMDD = WD.DT_LOADING AND EX.CURR_SOUR = OL.CD_EXCH
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_IO, OL.NO_PSO_MGMT,
					  (CASE WHEN OH.YN_RETURN = 'Y' THEN -OL.AM_EX ELSE OL.AM_EX END) AS AM_EX
			   FROM MM_QTIOH OH
			   JOIN (SELECT OL.CD_COMPANY, OL.NO_IO, OL.NO_PSO_MGMT,
					        SUM(ROUND(ISNULL(OL.UM_EX, 0) * (ISNULL(OL.QT_IO, 0) - ISNULL(OL.QT_CLS, 0)), 2)) AS AM_EX 
					 FROM MM_QTIO OL
					 GROUP BY OL.CD_COMPANY, OL.NO_IO, OL.NO_PSO_MGMT) OL 
			   ON OL.CD_COMPANY = OH.CD_COMPANY AND OL.NO_IO = OH.NO_IO) OL1
	ON OL1.CD_COMPANY = OL.CD_COMPANY AND OL1.NO_IO = OL.NO_IO AND OL1.NO_PSO_MGMT = OL.NO_PSO_MGMT
	WHERE OL.CD_COMPANY = @P_CD_COMPANY
	AND OL.NO_IO = @P_NO_IO
	AND OL.FG_PS = '2'
	AND OL.FG_IO IN ('010', '041')
	AND OL.YN_PURSALE = 'Y'
	AND (ISNULL(OL.QT_UNIT_MM, 0) - ISNULL(OL.QT_CLS_MM, 0)) > 0
	AND OL.YN_AM = 'Y'
	AND ISNULL(WD.DT_LOADING, '') <> ''
	AND (OL.CD_EXCH = '000' OR ISNULL(EX.RT_EXCH, 0) > 0)
),
B AS
(	SELECT *
	FROM (SELECT *,
		         ROW_NUMBER() OVER (PARTITION BY OL.CD_COMPANY, OL.NO_IO ORDER BY OL.AM_SO DESC, OL.NO_IOLINE DESC) AS IDX
		  FROM A OL) OL
	WHERE OL.IDX = 1
),
C AS
(
	SELECT A.CD_COMPANY, 
	       A.CD_PLANT, 
	       A.NO_IO, 
	       A.NO_IOLINE,  
	       A.CD_ITEM, 
	       A.CD_SALEGRP, 
	       A.CD_CC CD_CC, 
	       A.DT_TAX,  
	       A.QT_GI_CLS,
	       A.QT_CLS,
	       A.NO_EMP, 
	       A.CD_PJT, 
	       A.TP_IV,  
	       A.NO_SO, 
	       A.NO_SOLINE, 
	       A.CD_EXCH, 
	       A.RT_EXCH, 
	       A.YN_RETURN,
	       A.UM_EX_CLS,
	       A.FG_TRANS,
		   A.DT_BL,
		   A.TP_UM_TAX,
		   A.RT_VAT,
		   A.AM_FSIZE,
		   'N' AS YN_AUTO_CHARGE
	FROM A
	WHERE A.CD_ITEM NOT LIKE 'SD%'
	UNION ALL
	SELECT A.CD_COMPANY, 
	       A.CD_PLANT, 
	       A.NO_IO, 
	       A.NO_IOLINE,  
	       A.CD_ITEM, 
	       A.CD_SALEGRP, 
	       A.CD_CC CD_CC, 
	       A.DT_TAX,  
	       A.QT_GI_CLS,
	       A.QT_CLS,
	       A.NO_EMP, 
	       A.CD_PJT, 
	       A.TP_IV,  
	       A.NO_SO, 
	       A.NO_SOLINE, 
	       A.CD_EXCH, 
	       A.RT_EXCH, 
	       A.YN_RETURN,
	       A.UM_EX_CLS,
	       A.FG_TRANS,
		   A.DT_BL,
		   A.TP_UM_TAX,
		   A.RT_VAT,
		   A.AM_FSIZE,
		   'N' AS YN_AUTO_CHARGE
	FROM A
	WHERE A.CD_ITEM LIKE 'SD%'
	AND (ISNULL(A.TP_CHARGE, '001') = '001' OR NOT EXISTS (SELECT 1 
														   FROM CZ_SA_GIRH_CHARGE GC
														   WHERE GC.CD_COMPANY = A.CD_COMPANY
														   AND GC.NO_GIR = A.NO_ISURCV
														   AND GC.CD_ITEM = A.CD_ITEM))
	UNION ALL
	SELECT B.CD_COMPANY, 
	       B.CD_PLANT, 
	       B.NO_IO, 
	       B.NO_IOLINE,  
	       'SD0003' AS CD_ITEM, -- PACKING CHARGE
	       B.CD_SALEGRP, 
	       B.CD_CC CD_CC, 
	       B.DT_TAX,  
	       0 AS QT_GI_CLS,
	       0 AS QT_CLS,
	       B.NO_EMP, 
	       B.CD_PJT, 
	       B.TP_IV,  
	       B.NO_SO, 
	       B.NO_SOLINE, 
	       B.CD_EXCH, 
	       B.RT_EXCH, 
	       B.YN_RETURN,
	       ROUND((PH.AM_CBM / ISNULL(B.RT_EXCH, 1)), 2) AS UM_EX_CLS,
	       B.FG_TRANS,
		   B.DT_BL,
		   B.TP_UM_TAX,
		   B.RT_VAT,
		   B.AM_FSIZE,
		   'Y' AS YN_AUTO_CHARGE 
	FROM B
	JOIN (SELECT PH.CD_COMPANY,
		  	     PH.NO_GIR,
		  	     SUM(CASE WHEN PH.QT_CBM >= 1 THEN PH.QT_CBM * TC.UM ELSE TC.UM END) AS AM_CBM
		  FROM (SELECT PH.CD_COMPANY,
		  		       PH.NO_GIR,
		  		       CONVERT(NUMERIC(17, 2), ((PH1.QT_WIDTH * 0.001) * (PH1.QT_HEIGHT * 0.001) * (PH1.QT_LENGTH * 0.001))) AS QT_CBM
		  	    FROM CZ_SA_PACKH PH
		  	    JOIN CZ_SA_PACKH PH1 ON PH1.CD_COMPANY = PH.CD_COMPANY AND PH1.NO_GIR = PH.NO_GIR_ORG AND PH1.NO_PACK = PH.NO_PACK_ORG
		  	    WHERE PH.CD_COMPANY = @P_CD_COMPANY 
				AND PH1.CD_TYPE = '003'
		  	    AND PH1.YN_OUTSOURCING = 'Y'
		  	    AND EXISTS (SELECT 1 
		  	  			    FROM SA_GIRH GH
		  	  			    WHERE GH.CD_COMPANY = PH.CD_COMPANY
		  	  			    AND GH.NO_GIR = PH.NO_GIR)) PH
		  LEFT JOIN (SELECT TH.CD_COMPANY,
					 	    TL.SIZE,
					 	    TL.UM 
					 FROM CZ_MA_TARIFF_CBM_H TH
					 JOIN CZ_MA_TARIFF_CBM_L TL ON TL.CD_COMPANY = TH.CD_COMPANY AND TL.CD_PARTNER = TH.CD_PARTNER
					 WHERE ISNULL(TH.YN_USE, 'N') = 'Y'
					 AND CONVERT(NVARCHAR(8), GETDATE(), 112) BETWEEN TL.DT_START AND TL.DT_END) TC
	      ON TC.CD_COMPANY = PH.CD_COMPANY AND TC.SIZE = (CASE WHEN PH.QT_CBM >= 1 THEN 1 ELSE PH.QT_CBM END)
	      GROUP BY PH.CD_COMPANY, PH.NO_GIR) PH 
    ON PH.CD_COMPANY = B.CD_COMPANY AND PH.NO_GIR = B.NO_ISURCV
	WHERE (ISNULL(B.TP_CHARGE, '001') = '001' OR NOT EXISTS (SELECT 1 
															 FROM CZ_SA_GIRH_CHARGE GC
															 WHERE GC.CD_COMPANY = B.CD_COMPANY
															 AND GC.NO_GIR = B.NO_ISURCV
															 AND GC.CD_ITEM = 'SD0003'))
    AND NOT EXISTS (SELECT 1 
					FROM SA_IVL IL
					WHERE IL.CD_COMPANY = B.CD_COMPANY
					AND IL.NO_IO = B.NO_IO
					AND IL.CD_ITEM = 'SD0003')
	AND NOT EXISTS (SELECT 1 
					FROM MM_QTIO OL
					WHERE OL.CD_COMPANY = B.CD_COMPANY
					AND OL.NO_IO = B.NO_IO
					AND OL.CD_ITEM = 'SD0003')
    AND NOT EXISTS (SELECT 1 
				    FROM MM_QTIO OL
				    JOIN SA_SOH SH ON SH.CD_COMPANY = OL.CD_COMPANY AND SH.NO_SO = OL.NO_PSO_MGMT
				    JOIN MA_CODEDTL MC ON MC.CD_COMPANY = SH.CD_COMPANY AND MC.CD_FIELD = 'TR_IM00011' AND MC.CD_SYSDEF = SH.TP_PACKING
				    WHERE OL.CD_COMPANY = B.CD_COMPANY
				    AND OL.NO_IO = B.NO_IO
				    AND MC.CD_FLAG1 = 'N')
	UNION ALL
	SELECT B.CD_COMPANY, 
	       B.CD_PLANT, 
	       B.NO_IO, 
	       B.NO_IOLINE,  
	       'SD0001' AS CD_ITEM, -- FREIGHT CHARGE
	       B.CD_SALEGRP, 
	       B.CD_CC CD_CC, 
	       B.DT_TAX,  
	       0 AS QT_GI_CLS,
	       0 AS QT_CLS,
	       B.NO_EMP, 
	       B.CD_PJT, 
	       B.TP_IV,  
	       B.NO_SO, 
	       B.NO_SOLINE, 
	       B.CD_EXCH, 
	       B.RT_EXCH, 
	       B.YN_RETURN,
	       ROUND((FC.AM_IV / ISNULL(B.RT_EXCH, 1)), 2) AS UM_EX_CLS,
	       B.FG_TRANS,
		   B.DT_BL,
		   B.TP_UM_TAX,
		   B.RT_VAT,
		   B.AM_FSIZE,
		   'Y' AS YN_AUTO_CHARGE 
	FROM B
	JOIN (SELECT CD_COMPANY, 
			     NO_IO,
			     SUM(ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) AS AM_IV
		  FROM CZ_SA_FORWARD_CHARGE_L
		  WHERE (ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) > 0
		  GROUP BY CD_COMPANY, NO_IO) FC
	ON FC.CD_COMPANY = B.CD_COMPANY AND FC.NO_IO = B.NO_IO
	WHERE (ISNULL(B.TP_CHARGE, '001') = '001' OR NOT EXISTS (SELECT 1 
															 FROM CZ_SA_GIRH_CHARGE GC
															 WHERE GC.CD_COMPANY = B.CD_COMPANY
															 AND GC.NO_GIR = B.NO_ISURCV
															 AND GC.CD_ITEM = 'SD0001'))
	AND NOT EXISTS (SELECT 1 
					FROM SA_IVL IL
					WHERE IL.CD_COMPANY = B.CD_COMPANY
					AND IL.NO_IO = B.NO_IO
					AND IL.CD_ITEM = 'SD0001')
	AND NOT EXISTS (SELECT 1 
					FROM MM_QTIO OL
					WHERE OL.CD_COMPANY = B.CD_COMPANY
					AND OL.NO_IO = B.NO_IO
					AND OL.CD_ITEM = 'SD0001')
	UNION ALL
	SELECT B.CD_COMPANY, 
	       B.CD_PLANT, 
	       B.NO_IO, 
	       B.NO_IOLINE,  
	       GC.CD_ITEM AS CD_ITEM,
	       B.CD_SALEGRP, 
	       B.CD_CC CD_CC, 
	       B.DT_TAX,  
	       0 AS QT_GI_CLS,
	       0 AS QT_CLS,
	       B.NO_EMP, 
	       B.CD_PJT, 
	       B.TP_IV,  
	       B.NO_SO, 
	       B.NO_SOLINE, 
	       B.CD_EXCH, 
	       B.RT_EXCH, 
	       B.YN_RETURN,
	       ROUND(GC.AM_EX_CHARGE, 2) AS UM_EX_CLS,
	       B.FG_TRANS,
		   B.DT_BL,
		   B.TP_UM_TAX,
		   B.RT_VAT,
		   B.AM_FSIZE,
		   'Y' AS YN_AUTO_CHARGE 
	FROM B
	JOIN CZ_SA_GIRH_CHARGE GC ON GC.CD_COMPANY = B.CD_COMPANY AND GC.NO_GIR = B.NO_ISURCV
	WHERE ISNULL(B.TP_CHARGE, '001') = '002'
	AND GC.AM_EX_CHARGE > 0
	AND NOT EXISTS (SELECT 1 
					FROM SA_IVL IL
					WHERE IL.CD_COMPANY = B.CD_COMPANY
					AND IL.NO_IO = B.NO_IO
					AND IL.CD_ITEM = GC.CD_ITEM)
),
D AS
(
	SELECT *,
		   ROUND(ISNULL(C.UM_EX_CLS, 0) * C.RT_EXCH, C.AM_FSIZE) AS UM_ITEM_CLS,
		   ROUND(ISNULL(C.UM_EX_CLS, 0) * (CASE WHEN ISNULL(C.QT_CLS, 0) = 0 THEN 1 ELSE ISNULL(C.QT_CLS, 0) END), 2) AS AM_EX_CLS,
		   ROUND(ROUND(ISNULL(C.UM_EX_CLS, 0) * (CASE WHEN ISNULL(C.QT_CLS, 0) = 0 THEN 1 ELSE ISNULL(C.QT_CLS, 0) END), 2) * C.RT_EXCH, C.AM_FSIZE) AS AM_CLS
	FROM C	
),
E AS
(
	SELECT *,
		   (CASE WHEN D.CD_COMPANY = 'S100' THEN ROUND(D.AM_CLS * D.RT_VAT, D.AM_FSIZE) 
											ELSE CONVERT(NUMERIC, FLOOR(D.AM_CLS * D.RT_VAT)) END) AS VAT 
	FROM D	
)
INSERT INTO @SA_IVL  
(  
    NO_IV,        
    NO_LINE,      
    CD_COMPANY, 
    CD_PLANT,     
    NO_IO,          
    NO_IOLINE,  
    CD_ITEM,      
    CD_SALEGRP,   
    CD_CC,      
    DT_TAX,       
    QT_GI_CLS,      
    QT_CLS,  
    UM_ITEM_CLS,  
    AM_CLS,      
    VAT,        
    NO_EMP,       
    CD_PJT,         
    TP_IV,  
    NO_SO,        
    NO_SOLINE,    
    CD_EXCH,    
    RT_EXCH,      
    YN_RETURN,  
    UM_EX_CLS,    
    AM_EX_CLS,    
    FG_TRANS,
    DT_BL,
    TP_UM_TAX,
	YN_AUTO_CHARGE,
    ID_INSERT,    
    DTS_INSERT
)
SELECT @V_NO_IV AS NO_IV,        
       ROW_NUMBER() OVER(ORDER BY NO_IO, NO_IOLINE ASC) AS NO_LINE,      
       E.CD_COMPANY, 
       E.CD_PLANT,     
       E.NO_IO,          
       E.NO_IOLINE,  
       E.CD_ITEM,      
       E.CD_SALEGRP,   
       E.CD_CC,      
       E.DT_TAX,       
       E.QT_GI_CLS,      
       E.QT_CLS,  
       E.UM_ITEM_CLS,  
       E.AM_CLS,      
       E.VAT,        
       E.NO_EMP,       
       E.CD_PJT,         
       E.TP_IV,  
       E.NO_SO,        
       E.NO_SOLINE,    
       E.CD_EXCH,    
       E.RT_EXCH,      
       E.YN_RETURN,  
       E.UM_EX_CLS,    
       E.AM_EX_CLS,    
       E.FG_TRANS,
       E.DT_BL,
       E.TP_UM_TAX,
	   E.YN_AUTO_CHARGE,
       @P_ID_USER AS ID_INSERT,    
       NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT 
FROM E

INSERT INTO SA_IVH   
(  
    NO_IV,        
    CD_COMPANY,      
    CD_BIZAREA,   
    NO_BIZAREA,  
    CD_PARTNER,   
    BILL_PARTNER,  
    FG_TRANS,  
    AM_K,         
    VAT_TAX,         
    DT_PROCESS,   
    FG_TAX,      
    TP_FD,        
    AM_BAN,        
    NO_BAN,  
    TP_RECEIPT,   
    TP_SUMTAX,       
    FG_TAXP,      
    TP_AIS,      
    CD_DEPT,      
    NO_EMP,        
    YN_EXPIV, 
    NO_LC,        
    DT_RCP_RSV,      
    ETAX_SYS,     
    CD_EXCH,     
    RT_EXCH,      
    AM_EX,         
    FG_MAP, 
    AM_BAN_EX,    
    CD_BIZAREA_TAX,  
    CD_DOCU,      
    FG_AR_EXC,
    FG_BILL,
    NM_PTR,
    EX_EMIL,
    EX_HP,
    DC_REMARK,
    ID_INSERT,   
    DTS_INSERT
)
SELECT @V_NO_IV, 
       OH.CD_COMPANY, 
       OL.CD_BIZAREA, 
       MP.NO_COMPANY AS NO_BIZAREA, 
       OH.CD_PARTNER, 
       OH.CD_PARTNER AS BILL_PARTNER, 
       OL.FG_TRANS,
       IL.AM_K,
       IL.VAT_TAX, 
       WD.DT_LOADING AS DT_PROCESS,
       OL.FG_TAX, 
       'D' TP_FD, 
       0 AM_BAN, 
       NULL NO_BAN,  
       '1' TP_RECEIPT, 
       ISNULL(MP.TP_TAX, '001') AS TP_SUMTAX, 
       '002' FG_TAXP, 
       'N' TP_AIS,   
       ME.CD_DEPT AS CD_DEPT, 
       @P_ID_USER AS NO_EMP, 
       'N' YN_EXPIV, 
       NULL NO_LC,  
       CONVERT(CHAR(8), DATEADD(DAY, MP.DT_RCP_PREARRANGED, WD.DT_LOADING), 112) AS DT_RCP_RSV, 
       '00' ETAX_SYS, 
       OL.CD_EXCH, 
       IL.RT_EXCH, 
       IL.AM_EX,    
       '1' FG_MAP, 
       0 AM_BAN_EX, 
       BA.VAT_BIZAREA AS CD_BIZAREA_TAX,  
       ISNULL(AH.CD_DOCU,'23') CD_DOCU, 
       NULL AS FG_AR_EXC,
       MP.FG_BILL,
       NULL AS NM_PTR,
	   NULL AS EX_EMIL,
	   NULL AS EX_HP,
	   '' AS DC_RMK,
       @P_ID_USER AS ID_INSERT, 
       NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
FROM MM_QTIOH OH
LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_IO,
				  MAX(OL.NO_ISURCV) AS NO_ISURCV,
				  MAX(OL.CD_BIZAREA) AS CD_BIZAREA,
				  MAX(OL.FG_TRANS) AS FG_TRANS,
				  MAX(OL.FG_TAX) AS FG_TAX,
				  MAX(OL.CD_EXCH) AS CD_EXCH,
				  MAX(OL.FG_TPIO) AS FG_TPIO
           FROM MM_QTIO OL
           GROUP BY OL.CD_COMPANY, OL.NO_IO) OL
ON OL.CD_COMPANY = OH.CD_COMPANY AND OL.NO_IO = OH.NO_IO
LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_IO,
				  MAX(IL.RT_EXCH) AS RT_EXCH,
				  SUM(IL.AM_CLS) AS AM_K,
				  SUM(IL.VAT) AS VAT_TAX,
				  SUM(IL.AM_EX_CLS) AS AM_EX 
		   FROM @SA_IVL IL
		   GROUP BY IL.CD_COMPANY, IL.NO_IO) IL
ON IL.CD_COMPANY = OH.CD_COMPANY AND IL.NO_IO = OH.NO_IO
LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = OL.CD_COMPANY AND WD.NO_GIR = OL.NO_ISURCV
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = OH.CD_COMPANY AND MP.CD_PARTNER = OH.CD_PARTNER
LEFT JOIN MA_AISPOSTH AH ON AH.CD_COMPANY = OL.CD_COMPANY AND AH.CD_TP = OL.FG_TPIO AND AH.FG_TP = '100'
LEFT JOIN MA_BIZAREA BA ON BA.CD_COMPANY = OL.CD_COMPANY AND BA.CD_BIZAREA = OL.CD_BIZAREA
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = OH.CD_COMPANY AND ME.NO_EMP = @P_ID_USER
WHERE OH.CD_COMPANY = @P_CD_COMPANY
AND OH.NO_IO = @P_NO_IO

INSERT INTO SA_IVL  
(  
    NO_IV,        
    NO_LINE,      
    CD_COMPANY, 
    CD_PLANT,     
    NO_IO,          
    NO_IOLINE,  
    CD_ITEM,      
    CD_SALEGRP,   
    CD_CC,      
    DT_TAX,       
    QT_GI_CLS,      
    QT_CLS,  
    UM_ITEM_CLS,  
    AM_CLS,      
    VAT,        
    NO_EMP,       
    CD_PJT,         
    TP_IV,  
    NO_SO,        
    NO_SOLINE,    
    CD_EXCH,    
    RT_EXCH,      
    YN_RETURN,  
    UM_EX_CLS,    
    AM_EX_CLS,    
    FG_TRANS,
    DT_BL,
    TP_UM_TAX,
	CD_USERDEF1,
	NO_IV_ORG,
    ID_INSERT,    
    DTS_INSERT
)
SELECT IL.NO_IV,        
	   IL.NO_LINE,      
	   IL.CD_COMPANY, 
	   IL.CD_PLANT,     
	   IL.NO_IO,          
	   IL.NO_IOLINE,  
	   IL.CD_ITEM,      
	   IL.CD_SALEGRP,   
	   IL.CD_CC,      
	   IL.DT_TAX,       
	   IL.QT_GI_CLS,      
	   IL.QT_CLS,  
	   IL.UM_ITEM_CLS,  
	   IL.AM_CLS,      
	   IL.VAT,        
	   IL.NO_EMP,       
	   IL.CD_PJT,         
	   IL.TP_IV,  
	   IL.NO_SO,        
	   IL.NO_SOLINE,    
	   IL.CD_EXCH,    
	   IL.RT_EXCH,      
	   IL.YN_RETURN,  
	   IL.UM_EX_CLS,    
	   IL.AM_EX_CLS,    
	   IL.FG_TRANS,
	   IL.DT_BL,
	   IL.TP_UM_TAX,
	   IL.YN_AUTO_CHARGE,
	   (CASE WHEN IL1.CNT_SO > 1 THEN IL.NO_IV + '-' + RIGHT('0' + CONVERT(NVARCHAR(3), DENSE_RANK() OVER (PARTITION BY IL.NO_IV ORDER BY IL.NO_SO)), 2)
								 ELSE IL.NO_IV END) AS NO_IV_ORG,
	   IL.ID_INSERT,    
	   IL.DTS_INSERT
FROM @SA_IVL IL
JOIN (SELECT NO_IV, 
			 COUNT(DISTINCT NO_SO) AS CNT_SO
	  FROM @SA_IVL 
	  GROUP BY NO_IV) IL1
ON IL1.NO_IV = IL.NO_IV

SELECT @V_NO_IV

COMMIT TRAN SP_CZ_SA_IV_AUTO

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_SA_IV_AUTO
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_SA_IV_AUTO

GO