USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_QTNSO_RPTL_S]    Script Date: 2015-07-24 오전 9:24:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--EXEC SP_CZ_SA_QTNSO_RPTL_S '000', 0, '1', '1', '1', '1', '1'
ALTER PROCEDURE [NEOE].[SP_CZ_SA_QTNSO_RPTL_S]
(
	@P_CD_COMPANY		NVARCHAR(3),
	@P_TYPE				INT,
	@P_FILE_NO			NVARCHAR(8),
	@P_SUPPLIER_CODE	NVARCHAR(5),
	@P_SUBJECT			NVARCHAR(MAX),
	@P_ITEM_CODE		NVARCHAR(MAX),
	@P_ITEM_NAME		NVARCHAR(MAX)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @QUERY NVARCHAR(MAX)
DECLARE @WHERE NVARCHAR(MAX)
DECLARE @TABLEPREFIX NVARCHAR(1)
DECLARE @RETURN_YN NVARCHAR(24)

IF @P_CD_COMPANY = '000'
BEGIN
	SET @TABLEPREFIX = 'T'
	SET @RETURN_YN = 'AND PH.RETURN_YN = ''N'''
END
ELSE IF @P_CD_COMPANY = '001'
BEGIN
	SET @TABLEPREFIX = 'T'
	SET @RETURN_YN = 'AND PH.RETURN_YN = ''N'''
END
ELSE
BEGIN
	SET @TABLEPREFIX = 'R'
	SET @RETURN_YN = ''
END

IF @P_TYPE = 0
BEGIN
SET @QUERY = 'SELECT QL.FILE_NO,
					 QL.SUBJECT_NAME,
					 QL.ITEM_CODE,
					 QL.DESCRIPTION,
					 QL.QTY,
					 QL.UNIT,
					 (CASE WHEN NVL(PL.DC_PRICE, 0) = 0 THEN QL.P_PRICE ELSE PL.DC_PRICE END) AS P_PRICE,
					 (CASE WHEN NVL(PL.DC_AMOUNT, 0) = 0 THEN QL.P_AMOUNT ELSE PL.DC_AMOUNT END) AS P_AMOUNT,
					 (CASE WHEN NVL((PL.DC_AMOUNT * PH.EX_RATE), 0) = 0 THEN QL.P_AMOUNT ELSE (PL.DC_AMOUNT * PH.EX_RATE) END) AS PW_AMOUNT,
					 QL.Q_PRICE,
					 QL.Q_AMOUNT,
					 NVL((QL.Q_AMOUNT * QH.EX_RATE), 0) AS QW_AMOUNT,
					 QL.LT,
					 NVL(PL.COMP_CODE, QL.STOCK_COMP) AS SUPPLIER_CODE,
					 CM.COMP_NAME AS SUPPLIER_NAME,
					 QL.S_CLASS,
					 QL.STOCK_CODE,
					 (SELECT MAX(INV_NO) AS INV_NO FROM ' + @TABLEPREFIX + '_CA002 WHERE INV_NO LIKE ''PS%'' AND ORD_NO = QL.FILE_NO AND SUBJECT_CODE = QL.SUBJECT_CODE AND ITEM_CODE = QL.ITEM_CODE) AS INV_NO
			  FROM ' + @TABLEPREFIX + '_PS004 QL
			  LEFT JOIN ' + @TABLEPREFIX + '_PS003 QH ON QH.FILE_NO = QL.FILE_NO
			  LEFT JOIN ' + @TABLEPREFIX + '_PS008 PL ON PL.FILE_NO = QL.FILE_NO AND PL.SUBJECT_CODE = QL.SUBJECT_CODE AND PL.ITEM_CODE = QL.ITEM_CODE AND (PL.CHOICE = ''Y'' OR PL.S_CLASS = ''Y'')
			  LEFT JOIN ' + @TABLEPREFIX + '_PS007 PH ON PH.FILE_NO = PL.FILE_NO AND PH.COMP_CODE = PL.COMP_CODE
			  LEFT JOIN ' + @TABLEPREFIX + '_BC002 CM ON CM.COMP_CODE = NVL(PL.COMP_CODE, QL.STOCK_COMP)
			  WHERE QL.FILE_NO = ''' + @P_FILE_NO + ''''
END
ELSE IF @P_TYPE = 2
BEGIN
SET @QUERY = 'SELECT SL.FILE_NO,
					 SL.SUBJECT_NAME,
					 SL.ITEM_CODE,
					 SL.DESCRIPTION,
					 NVL(PL.QTY, 0) AS QTY,
					 SL.UNIT,
					 NVL(PL.P_PRICE, 0) AS P_PRICE,
					 NVL(PL.P_AMOUNT, 0) AS P_AMOUNT,
					 NVL(PL.PW_AMOUNT, 0) AS PW_AMOUNT,
					 NVL((CASE WHEN SL.S_CLASS = ''Y'' THEN SL.S_PRICE ELSE SL.Q_PRICE END), 0) Q_PRICE,
					 NVL((CASE WHEN SL.S_CLASS = ''Y'' THEN SL.S_AMOUNT ELSE SL.Q_AMOUNT END), 0) Q_AMOUNT,
					 NVL((CASE WHEN SL.S_CLASS = ''Y'' THEN (SL.S_AMOUNT * SH.EX_RATE) ELSE SL.W_AMOUNT END), 0)  AS QW_AMOUNT,
					 SL.LT,
					 (CASE WHEN SL.S_CLASS = ''Y'' THEN SL.STOCK_COMP ELSE PL.COMP_CODE END) AS SUPPLIER_CODE,
					 CM.COMP_NAME AS SUPPLIER_NAME,
					 SL.S_CLASS,
					 SL.STOCK_CODE,
					 (SELECT MAX(INV_NO) AS INV_NO FROM ' + @TABLEPREFIX + '_CA002 WHERE INV_NO LIKE ''PS%'' AND ORD_NO = SL.FILE_NO AND SUBJECT_CODE = SL.SUBJECT_CODE AND ITEM_CODE = SL.ITEM_CODE) AS INV_NO
			  FROM ' + @TABLEPREFIX + '_PS012 SL
			  LEFT JOIN ' + @TABLEPREFIX + '_PS011 SH ON SH.FILE_NO = SL.FILE_NO
			  LEFT JOIN (SELECT FILE_NO, SUBJECT_CODE, ITEM_CODE, MAX(COMP_CODE) AS COMP_CODE, SUM(QTY) AS QTY, MAX(P_PRICE) AS P_PRICE, SUM(P_AMOUNT) AS P_AMOUNT, SUM(PW_AMOUNT) AS PW_AMOUNT 
						 FROM (SELECT ''STOCK'' AS TYPE, ST.FILE_NO, ST.SUBJECT_CODE, ST.ITEM_CODE, '''' AS COMP_CODE, ST.USED_QTY AS QTY, ST.PRICE AS P_PRICE, (ST.PRICE*ST.USED_QTY) AS P_AMOUNT, (ST.PRICE*ST.USED_QTY) AS PW_AMOUNT
						 FROM ' + @TABLEPREFIX + '_PL021_H ST
						 WHERE EXISTS (SELECT 1 FROM ' + @TABLEPREFIX + '_PS012 WHERE FILE_NO = ST.FILE_NO AND SUBJECT_CODE = ST.SUBJECT_CODE AND ITEM_CODE = ST.ITEM_CODE AND S_QTY > 0)
						 GROUP BY ST.FILE_NO, ST.SUBJECT_CODE, ST.ITEM_CODE, ST.USED_QTY, ST.PRICE
						 UNION ALL
						 SELECT ''PURCHASE'' AS TYPE, PL.FILE_NO, PL.SUBJECT_CODE, PL.ITEM_CODE, PH.COMP_CODE, PL.QTY, PL.DC_PRICE AS P_PRICE, PL.DC_AMOUNT AS P_AMOUNT, ROUND(PL.DC_AMOUNT*PH.EX_RATE) AS PW_AMOUNT
						 FROM ' + @TABLEPREFIX + '_PP003 PL
						 JOIN ' + @TABLEPREFIX + '_PP002 PH ON PH.POR_NO = PL.POR_NO ' + @RETURN_YN + '
						 GROUP BY PL.FILE_NO, PL.SUBJECT_CODE, PL.ITEM_CODE, PH.COMP_CODE, PL.QTY, PL.DC_PRICE, PL.DC_AMOUNT, PH.EX_RATE
						 UNION ALL
						 SELECT ''BOOKING'' AS TYPE, BK.FILE_NO, BK.SUBJECT_CODE, BK.ITEM_CODE, PH.COMP_CODE, BK.BOOKING_QTY AS QTY, PL.DC_PRICE AS P_PRICE, (PL.DC_PRICE*BK.BOOKING_QTY) AS P_AMOUNT, TRUNC(PL.DC_PRICE*BK.BOOKING_QTY*PH.EX_RATE) AS PW_AMOUNT
						 FROM ' + @TABLEPREFIX + '_PP007 BK
						 JOIN ' + @TABLEPREFIX + '_PP003 PL ON PL.FILE_NO = BK.ST_NO AND PL.STOCK_CODE = BK.STOCK_CODE
						 JOIN ' + @TABLEPREFIX + '_PP002 PH ON PH.POR_NO = PL.POR_NO
						 WHERE BK.BOOKING_QTY > 0
						 GROUP BY BK.FILE_NO, BK.SUBJECT_CODE, BK.ITEM_CODE, PH.COMP_CODE, PL.QTY, PL.DC_PRICE, BK.BOOKING_QTY, PH.EX_RATE)
						 GROUP BY FILE_NO, SUBJECT_CODE, ITEM_CODE) PL
			  ON PL.FILE_NO = SL.FILE_NO AND PL.SUBJECT_CODE = SL.SUBJECT_CODE AND PL.ITEM_CODE = SL.ITEM_CODE
			  LEFT JOIN ' + @TABLEPREFIX + '_BC002 CM ON CM.COMP_CODE = (CASE WHEN SL.S_CLASS = ''Y'' THEN SL.STOCK_COMP ELSE PL.COMP_CODE END)
			  WHERE SL.FILE_NO = ''' + @P_FILE_NO + ''''
END

SET @WHERE = ''

IF ISNULL(@P_SUPPLIER_CODE, '') <> ''
BEGIN
	SET @WHERE += CHAR(13) + 'AND CM.COMP_CODE = ''' + @P_SUPPLIER_CODE + ''''
END

IF ISNULL(@P_SUBJECT, '') <> ''
BEGIN
	IF @P_TYPE = 0
		SET @WHERE += CHAR(13) + 'AND QL.SUBJECT_NAME LIKE ''' + '%' + @P_SUBJECT + '%' + ''''
	ELSE IF @P_TYPE = 2
		SET @WHERE += CHAR(13) + 'AND SL.SUBJECT_NAME LIKE ''' + '%' + @P_SUBJECT + '%' + ''''
END

IF ISNULL(@P_ITEM_CODE, '') <> ''
BEGIN
	IF @P_TYPE = 0
		SET @WHERE += CHAR(13) + 'AND QL.ITEM_CODE LIKE ''' + '%' + @P_ITEM_CODE + '%' + ''''
	ELSE IF @P_TYPE = 2
		SET @WHERE += CHAR(13) + 'AND SL.ITEM_CODE LIKE ''' + '%' + @P_ITEM_CODE + '%' + ''''
END

IF ISNULL(@P_ITEM_NAME, '') <> ''
BEGIN
	IF @P_TYPE = 0
		SET @WHERE += CHAR(13) + 'AND QL.DESCRIPTION LIKE ''' + '%' + @P_ITEM_NAME + '%' + ''''
	ELSE IF @P_TYPE = 2
		SET @WHERE += CHAR(13) + 'AND SL.DESCRIPTION LIKE ''' + '%' + @P_ITEM_NAME + '%' + ''''
END

SET @QUERY = @QUERY + @WHERE
--SET @QUERY = REPLACE(@QUERY, '''', '''''')
--SET @QUERY = 'SELECT * FROM OPENQUERY(DINTEC, ''' +  @QUERY + ''')'

--EXEC SP_EXECUTESQL @QUERY
--PRINT @QUERY
SELECT @QUERY

GO