USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_HR_EMP_WORK_TIME_RPT_DAY_S]    Script Date: 2015-11-17 오전 10:07:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

  
ALTER PROCEDURE [NEOE].[SP_CZ_HR_EMP_WORK_TIME_RPT_DAY_S]  
(  
	@P_CD_COMPANY	NVARCHAR(7),
	@P_NO_EMP		NVARCHAR(10),
	@P_DATE			NVARCHAR(8),
	@P_QT_INTERVAL	INT
)  
AS  

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #로그
(
	DT_TIME   DATETIME,
	QT_MINUTE INT,
	YN_WORK	  CHAR(1)
)

INSERT INTO #로그
SELECT UL.DT_TIME,
	   DATEDIFF(MINUTE, LAG(UL.DT_TIME) OVER (PARTITION BY UL.CD_COMPANY, UL.DT_WORK, UL.ID_USER ORDER BY UL.DT_TIME), UL.DT_TIME) AS QT_MINUTE,
	   'N' AS YN_WORK
FROM CZ_MA_USER_LOG UL
WHERE UL.CD_COMPANY = @P_CD_COMPANY
AND UL.DT_WORK = @P_DATE
AND EXISTS (SELECT 1 
		    FROM MA_USER MU
			WHERE MU.CD_COMPANY = UL.CD_COMPANY
			AND MU.ID_USER = UL.ID_USER
			AND MU.NO_EMP = @P_NO_EMP)

UPDATE #로그
SET YN_WORK = (CASE WHEN QT_MINUTE <= @P_QT_INTERVAL THEN 'Y' ELSE 'N' END);

WITH A AS
(
	SELECT (SELECT MAX(B.DT_TIME) 
			FROM #로그 B
			WHERE B.YN_WORK = 'N'
			AND B.DT_TIME <= A.DT_TIME) AS DT_START,
		   A.DT_TIME,
		   A.QT_MINUTE,
		   A.YN_WORK 
	FROM #로그 A
),
B AS
(
	SELECT A.DT_START AS DT_START,
		   MAX(A.DT_TIME) AS DT_END,
		   SUM(CASE WHEN A.YN_WORK = 'Y' THEN QT_MINUTE ELSE 0 END) AS QT_WORK_MINUTE
	FROM A
	GROUP BY A.DT_START
)
SELECT B.DT_START,
	   B.DT_END,
	   B.QT_WORK_MINUTE,
	   RIGHT('00' + CONVERT(VARCHAR, (B.QT_WORK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (B.QT_WORK_MINUTE % 60)), 2) AS QT_WORK_HOUR
FROM B
WHERE B.QT_WORK_MINUTE > 0
ORDER BY B.DT_START ASC

DROP TABLE #로그

GO