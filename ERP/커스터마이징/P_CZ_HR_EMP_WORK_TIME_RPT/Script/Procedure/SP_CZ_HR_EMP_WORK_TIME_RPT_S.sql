USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_HR_EMP_WORK_TIME_RPT_S]    Script Date: 2015-11-17 오전 10:07:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

  
ALTER PROCEDURE [NEOE].[SP_CZ_HR_EMP_WORK_TIME_RPT_S]  
(  
	@P_CD_COMPANY	NVARCHAR(7),
	@P_CD_DEPT		NVARCHAR(12),
	@P_CD_CC		NVARCHAR(12),
	@P_NO_EMP		NVARCHAR(10),
	@P_YN_HOME		NVARCHAR(1),
	@P_DT_MONTH		NVARCHAR(6),
	@P_QT_INTERVAL	INT
)  
AS  

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

CREATE TABLE #로그
(
	CD_COMPANY NVARCHAR(7),
	NO_EMP	   NVARCHAR(10),
	NO_WEEK	   INT,
    QT_MINUTE  INT
)

INSERT INTO #로그
SELECT UL.CD_COMPANY,
       MU.NO_EMP,
	   ((DATEPART(DD, UL.DT_TIME) + (6 - DATEPART(DW, UL.DT_TIME))) / 7) + 1 AS NO_WEEK,
	   DATEDIFF(MINUTE, LAG(UL.DT_TIME) OVER (PARTITION BY UL.CD_COMPANY, UL.DT_WORK, UL.ID_USER ORDER BY UL.DT_TIME), UL.DT_TIME) AS QT_MINUTE
FROM CZ_MA_USER_LOG UL
JOIN MA_USER MU ON MU.CD_COMPANY = UL.CD_COMPANY AND MU.ID_USER = UL.ID_USER
WHERE UL.CD_COMPANY = @P_CD_COMPANY
AND UL.DT_WORK LIKE @P_DT_MONTH + '%';

WITH A AS
(
	SELECT CD_COMPANY,
		   NO_EMP,
		   SUM(QT_MINUTE) AS QT_MONTH_MINUTE,
		   SUM(CASE WHEN NO_WEEK = 1 THEN QT_MINUTE ELSE 0 END) AS QT_1WEEK_MINUTE,
		   SUM(CASE WHEN NO_WEEK = 2 THEN QT_MINUTE ELSE 0 END) AS QT_2WEEK_MINUTE,
		   SUM(CASE WHEN NO_WEEK = 3 THEN QT_MINUTE ELSE 0 END) AS QT_3WEEK_MINUTE,
		   SUM(CASE WHEN NO_WEEK = 4 THEN QT_MINUTE ELSE 0 END) AS QT_4WEEK_MINUTE,
		   SUM(CASE WHEN NO_WEEK = 5 THEN QT_MINUTE ELSE 0 END) AS QT_5WEEK_MINUTE
    FROM #로그
	WHERE QT_MINUTE <= 15
	GROUP BY CD_COMPANY, NO_EMP
)
SELECT ISNULL(CD.YN_USE, 'N') AS YN_HOME,
	   ME.NO_EMP,
	   ME.NM_KOR,
	   MD.NM_DEPT,
	   MC.NM_CC,
	   A.QT_MONTH_MINUTE,
	   A.QT_1WEEK_MINUTE,
	   A.QT_2WEEK_MINUTE,
	   A.QT_3WEEK_MINUTE,
	   A.QT_4WEEK_MINUTE,
	   A.QT_5WEEK_MINUTE,
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_MONTH_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_MONTH_MINUTE % 60)), 2) AS QT_MONTH_HOUR,
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_1WEEK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_1WEEK_MINUTE % 60)), 2) AS QT_1WEEK_HOUR, 
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_2WEEK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_2WEEK_MINUTE % 60)), 2) AS QT_2WEEK_HOUR, 
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_3WEEK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_3WEEK_MINUTE % 60)), 2) AS QT_3WEEK_HOUR, 
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_4WEEK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_4WEEK_MINUTE % 60)), 2) AS QT_4WEEK_HOUR,
	   RIGHT('00' + CONVERT(VARCHAR, (A.QT_5WEEK_MINUTE / 60)), 2) + ':' + RIGHT('00' + CONVERT(VARCHAR, (A.QT_5WEEK_MINUTE % 60)), 2) AS QT_5WEEK_HOUR 
FROM MA_EMP ME
JOIN A ON A.CD_COMPANY = ME.CD_COMPANY AND A.NO_EMP = ME.NO_EMP
LEFT JOIN CZ_MA_CODEDTL CD ON CD.CD_COMPANY = ME.CD_COMPANY AND CD.CD_FIELD = 'CZ_HR00008' AND CD.CD_SYSDEF = ME.NO_EMP
LEFT JOIN MA_DEPT MD ON MD.CD_COMPANY = ME.CD_COMPANY AND MD.CD_DEPT = ME.CD_DEPT
LEFT JOIN MA_CC MC ON MC.CD_COMPANY = ME.CD_COMPANY AND MC.CD_CC = ME.CD_CC
WHERE ME.CD_COMPANY = @P_CD_COMPANY
AND (ISNULL(@P_CD_DEPT, '') = '' OR MD.CD_DEPT = @P_CD_DEPT)
AND (ISNULL(@P_CD_CC, '') = '' OR MC.CD_CC = @P_CD_CC)
AND (ISNULL(@P_NO_EMP, '') = '' OR ME.NO_EMP = @P_NO_EMP)
AND (@P_YN_HOME = 'N' OR ISNULL(CD.YN_USE, 'N') = 'Y')
ORDER BY ME.NO_EMP ASC

DROP TABLE #로그

GO