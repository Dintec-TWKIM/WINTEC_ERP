USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_OPENQTL_XML]    Script Date: 2016-10-26 오후 2:41:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





ALTER PROCEDURE [NEOE].[SP_CZ_PU_OPENQT_XML] 
(
	@P_CD_COMPANY	NVARCHAR(7),
	@P_XML_H		XML, 
	@P_XML_L		XML, 
	@P_ID_USER		NVARCHAR(10)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_ERRMSG   VARCHAR(255),   -- ERROR 메시지
		@V_DOC_H INT,
		@V_DOC_L INT

EXEC SP_XML_PREPAREDOCUMENT @V_DOC_H OUTPUT, @P_XML_H 
EXEC SP_XML_PREPAREDOCUMENT @V_DOC_L OUTPUT, @P_XML_L

SELECT * INTO #XML_H
FROM OPENXML (@V_DOC_H, '/XML/ROW', 2) WITH 
(
    CD_PLANT		NVARCHAR(7),
    YM_STANDARD		NCHAR(6),
	CD_SL			NVARCHAR(7),
	YY_AIS			NCHAR(4),
	CD_DEPT			NVARCHAR(12),
	NO_EMP			NVARCHAR(10),
	DT_INPUT		NCHAR(8),
	DC50_PO			NVARCHAR(50),
	XML_FLAG		NVARCHAR(1)
)

SELECT * INTO #XML_L
FROM OPENXML (@V_DOC_L, '/XML/ROW', 2) WITH 
(
	CD_ITEM			NVARCHAR(20), 
	YM_STANDARD		NCHAR(6), 
	CD_SL			NVARCHAR(7),
	CD_PLANT		NVARCHAR(7),
	QT_GOOD_INV		NUMERIC(17, 4),
	QT_REJECT_INV	NUMERIC(17,4),
	QT_INSP_INV		NUMERIC(17,4),
	QT_TRANS_INV	NUMERIC(17,4),
	XML_FLAG		NVARCHAR(1)
)

EXEC SP_XML_REMOVEDOCUMENT @V_DOC_H
EXEC SP_XML_REMOVEDOCUMENT @V_DOC_L 

BEGIN TRAN SP_CZ_PU_OPENQT_XML
BEGIN TRY

-- ================================================== DELETE
DELETE A 
FROM MM_OPENQTL A 
JOIN #XML_L B ON B.XML_FLAG = 'D' AND A.CD_COMPANY = @P_CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.CD_SL = B.CD_SL AND A.YM_STANDARD = B.YM_STANDARD AND A.CD_ITEM = B.CD_ITEM

-- ================================================== INSERT
INSERT INTO MM_OPENQTH
(
	CD_PLANT, 
	YM_STANDARD, 
	CD_COMPANY, 
	CD_SL, 
	YY_AIS, 
	CD_DEPT, 
	NO_EMP, 
	DT_INPUT, 
	DC50_PO, 
	DTS_INSERT, 
	ID_INSERT
)
SELECT CD_PLANT,
	   YM_STANDARD,
	   @P_CD_COMPANY, 
	   CD_SL, 
	   YY_AIS, 
	   CD_DEPT, 
	   NO_EMP, 
	   DT_INPUT, 
	   DC50_PO, 
	   NEOE.SF_SYSDATE(GETDATE()),
	   @P_ID_USER
FROM #XML_H
WHERE XML_FLAG = 'I'

INSERT INTO MM_OPENQTL
(
	CD_ITEM, 
	YM_STANDARD, 
	CD_SL, 
	CD_PLANT, 
	CD_COMPANY, 
	QT_GOOD_INV, 
	QT_REJECT_INV, 
	QT_INSP_INV,
	QT_TRANS_INV
)  
SELECT CD_ITEM,
	   YM_STANDARD,
	   CD_SL,
	   CD_PLANT,
	   @P_CD_COMPANY,
	   QT_GOOD_INV,
	   QT_REJECT_INV,
	   QT_INSP_INV,
	   QT_TRANS_INV
FROM #XML_L
WHERE XML_FLAG = 'I'

-- ================================================== UPDATE
UPDATE A  
SET	A.CD_DEPT = B.CD_DEPT, 
    A.NO_EMP = B.NO_EMP,
    A.DT_INPUT = B.DT_INPUT, 
    A.DC50_PO = B.DC50_PO,
    A.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE()),
    A.ID_UPDATE = @P_ID_USER
FROM MM_OPENQTH A
JOIN #XML_H B ON B.XML_FLAG = 'U' AND A.CD_COMPANY = @P_CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.CD_SL = B.CD_SL AND A.YM_STANDARD = B.YM_STANDARD  
    
UPDATE A 
SET A.QT_GOOD_INV = B.QT_GOOD_INV,
    A.QT_REJECT_INV = B.QT_REJECT_INV,
    A.QT_INSP_INV = B.QT_INSP_INV,
    A.QT_TRANS_INV = B.QT_TRANS_INV  
FROM MM_OPENQTL A 
JOIN #XML_L B ON B.XML_FLAG = 'U' AND A.CD_COMPANY = @P_CD_COMPANY AND A.CD_PLANT = B.CD_PLANT AND A.CD_SL = B.CD_SL AND A.YM_STANDARD = B.YM_STANDARD AND A.CD_ITEM = B.CD_ITEM

DROP TABLE #XML_H
DROP TABLE #XML_L

COMMIT TRAN SP_CZ_PU_OPENQT_XML

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PU_OPENQT_XML
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PU_OPENQT_XML

GO