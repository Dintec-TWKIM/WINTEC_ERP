USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MM_MONTHLY_STOCK_RPT_PIVOT_S]    Script Date: 2017-01-05 오후 5:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_MM_MONTHLY_STOCK_PIVOT_S]          
(  
	@P_CD_COMPANY		NVARCHAR(7),
	@P_DT_YYYYMM		NVARCHAR(6),
	@P_CLS_ITEM			NVARCHAR(3),
	@P_TP_CLS_L			NVARCHAR(4),
	@P_TP_CLS_M			NVARCHAR(4),
	@P_TP_CLS_S			NVARCHAR(4),
	@P_CD_ITEM			NVARCHAR(20),
	@P_YN_EXCLUDE		NVARCHAR(1)
)  
AS
   
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT * INTO #SORT 
FROM 
(VALUES
('ME', '1'),
('AE', '2'),
('HE', '3'),
('EQ', '4'),
('TC', '5'),
('PP', '6'),
('EM', '7'),
('GS', '8')) AS A (CD_SYSDEF, SORT)

SELECT MI.CD_ITEM,
	   ST.SORT,
	   ISNULL(MC.NM_SYSDEF, '') AS NM_CLS_L,
	   ISNULL(MC1.NM_SYSDEF, '') AS NM_CLS_M,
	   ISNULL(MC2.NM_SYSDEF, '') AS NM_CLS_S,

	   ISNULL(MS.QT_INV, 0) AS QT_INV,
	   ISNULL(MS.AM_INV, 0) AS AM_INV,
	   ISNULL(MS.QT_AVL, 0) AS QT_AVL,
	   ISNULL(MS.AM_AVL, 0) AS AM_AVL,
	   ISNULL(MS.QT_SO, 0) AS QT_SO,
	   ISNULL(MS.AM_SO, 0) AS AM_SO,
	   ISNULL(MS.QT_HOLD, 0) AS QT_HOLD,
	   ISNULL(MS.AM_HOLD, 0) AS AM_HOLD,
	   ISNULL(MS.QT_STOCK_MONTH, 0) AS QT_STOCK_MONTH,
	   ISNULL(MS.AM_STOCK_MONTH, 0) AS AM_STOCK_MONTH,
	   ISNULL(MS.QT_BOOK_MONTH, 0) AS QT_BOOK_MONTH,
	   ISNULL(MS.AM_BOOK_MONTH, 0) AS AM_BOOK_MONTH,
	   ISNULL(MS.QT_PO, 0) AS QT_PO,
	   ISNULL(MS.AM_PO, 0) AS AM_PO,
	   ISNULL(MS.QT_PO_MONTH, 0) AS QT_PO_MONTH,
	   ISNULL(MS.AM_PO_MONTH, 0) AS AM_PO_MONTH,
	   ISNULL(MS.QT_GR, 0) AS QT_GR,
	   ISNULL(MS.AM_GR, 0) AS AM_GR,
	   ISNULL(MS.QT_GI, 0) AS QT_GI,
	   ISNULL(MS.AM_GI, 0) AS AM_GI,
	   (CASE WHEN DATEDIFF(DAY, LEFT(MI.DTS_INSERT, 8), GETDATE()) > 365 AND ISNULL(MS.QT_BOOK_12MONTH, 0) <= 0 THEN ISNULL(MS.QT_INV, 0) ELSE 0 END) AS QT_BAD,
	   (CASE WHEN DATEDIFF(DAY, LEFT(MI.DTS_INSERT, 8), GETDATE()) > 365 AND ISNULL(MS.QT_BOOK_12MONTH, 0) <= 0 THEN ISNULL(MS.AM_INV, 0) ELSE 0 END) AS AM_BAD,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -3, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_3MONTH, 0) <= 0 THEN ISNULL(MS.QT_AVL, 0) ELSE 0 END) AS QT_BAD_3MONTH,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -3, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_3MONTH, 0) <= 0 THEN ISNULL(MS.AM_AVL, 0) ELSE 0 END) AS AM_BAD_3MONTH,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -6, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_6MONTH, 0) <= 0 THEN ISNULL(MS.QT_AVL, 0) ELSE 0 END) AS QT_BAD_6MONTH,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -6, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_6MONTH, 0) <= 0 THEN ISNULL(MS.AM_AVL, 0) ELSE 0 END) AS AM_BAD_6MONTH,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -12, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_12MONTH, 0) <= 0 THEN ISNULL(MS.QT_AVL, 0) ELSE 0 END) AS QT_BAD_12MONTH,
	   (CASE WHEN MS.DT_IO < CONVERT(NVARCHAR(8), DATEADD(MM, -12, GETDATE()), 112) AND ISNULL(MS.QT_BOOK_12MONTH, 0) <= 0 THEN ISNULL(MS.AM_AVL, 0) ELSE 0 END) AS AM_BAD_12MONTH

	   --ISNULL(MS1.QT_INV, 0) AS QT_INV_BEFORE,
	   --ISNULL(MS1.AM_INV, 0) AS AM_INV_BEFORE,
	   --ISNULL(MS1.QT_AVL, 0) AS QT_AVL_BEFORE,
	   --ISNULL(MS1.AM_AVL, 0) AS AM_AVL_BEFORE,
	   --ISNULL(MS1.QT_SO, 0) AS QT_SO_BEFORE,
	   --ISNULL(MS1.AM_SO, 0) AS AM_SO_BEFORE,
	   --ISNULL(MS1.QT_PO, 0) AS QT_PO_BEFORE,
	   --ISNULL(MS1.AM_PO, 0) AS AM_PO_BEFORE,
	   --ISNULL(MS1.QT_GR, 0) AS QT_GR_BEFORE,
	   --ISNULL(MS1.AM_GR, 0) AS AM_GR_BEFORE,
	   --ISNULL(MS1.QT_GI, 0) AS QT_GI_BEFORE,
	   --ISNULL(MS1.AM_GI, 0) AS AM_GI_BEFORE,
	   --(CASE WHEN ISNULL(MS1.YN_BAD, 'N') = 'Y' THEN ISNULL(MS1.QT_INV, 0) ELSE 0 END) AS QT_BAD_BEFORE,
	   --(CASE WHEN ISNULL(MS1.YN_BAD, 'N') = 'Y' THEN ISNULL(MS1.AM_INV, 0) ELSE 0 END) AS AM_BAD_BEFORE,

	   --(ISNULL(MS.QT_INV, 0) - ISNULL(MS1.QT_INV, 0)) AS QT_INV_DIFF,
	   --(ISNULL(MS.AM_INV, 0) - ISNULL(MS1.AM_INV, 0)) AS AM_INV_DIFF,
	   --(ISNULL(MS.QT_AVL, 0) - ISNULL(MS1.QT_AVL, 0)) AS QT_AVL_DIFF,
	   --(ISNULL(MS.AM_AVL, 0) - ISNULL(MS1.AM_AVL, 0)) AS AM_AVL_DIFF,
	   --(ISNULL(MS.QT_SO, 0) - ISNULL(MS1.QT_SO, 0)) AS QT_SO_DIFF,
	   --(ISNULL(MS.AM_SO, 0) - ISNULL(MS1.AM_SO, 0)) AS AM_SO_DIFF,
	   --(ISNULL(MS.QT_PO, 0) - ISNULL(MS1.QT_PO, 0)) AS QT_PO_DIFF,
	   --(ISNULL(MS.AM_PO, 0) - ISNULL(MS1.AM_PO, 0)) AS AM_PO_DIFF,
	   --(ISNULL(MS.QT_GR, 0) - ISNULL(MS1.QT_GR, 0)) AS QT_GR_DIFF,
	   --(ISNULL(MS.AM_GR, 0) - ISNULL(MS1.AM_GR, 0)) AS AM_GR_DIFF,
	   --(ISNULL(MS.QT_GI, 0) - ISNULL(MS1.QT_GI, 0)) AS QT_GI_DIFF,
	   --(ISNULL(MS.AM_GI, 0) - ISNULL(MS1.AM_GI, 0)) AS AM_GI_DIFF,
	   --((CASE WHEN ISNULL(MS.YN_BAD, 'N') = 'Y' THEN ISNULL(MS.QT_INV, 0) ELSE 0 END) -
	   -- (CASE WHEN ISNULL(MS1.YN_BAD, 'N') = 'Y' THEN ISNULL(MS1.QT_INV, 0) ELSE 0 END)) AS QT_BAD_DIFF,
	   --((CASE WHEN ISNULL(MS.YN_BAD, 'N') = 'Y' THEN ISNULL(MS.AM_INV, 0) ELSE 0 END) - 
	   -- (CASE WHEN ISNULL(MS1.YN_BAD, 'N') = 'Y' THEN ISNULL(MS1.AM_INV, 0) ELSE 0 END)) AS AM_BAD_DIFF
FROM MA_PITEM MI
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = MI.CD_COMPANY AND MC.CD_FIELD = 'MA_B000030' AND MC.CD_SYSDEF = MI.CLS_L
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = MI.CD_COMPANY AND MC1.CD_FIELD = 'MA_B000031' AND MC1.CD_SYSDEF = MI.CLS_M
LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = MI.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000032' AND MC2.CD_SYSDEF = MI.CLS_S
LEFT JOIN #SORT ST ON ST.CD_SYSDEF = MC.CD_SYSDEF
LEFT JOIN (SELECT *, 
				  (SELECT MAX(IL.DT_IO) 
				   FROM (SELECT IL.CD_COMPANY,
						 	    IL.CD_ITEM,
						        IL.DT_IO,
						 	    SUM(IL.QT_IO) OVER (PARTITION BY IL.CD_ITEM ORDER BY IL.DT_IO DESC) AS QT_IO
						 FROM MM_QTIO IL
						 WHERE IL.CD_COMPANY = MS.CD_COMPANY
						 AND IL.CD_ITEM = MS.CD_ITEM
						 AND IL.FG_PS = '1'
						 AND IL.CD_SL = 'SL02') IL
				   WHERE IL.QT_IO >= MS.QT_INV) AS DT_IO 
		   FROM CZ_MM_MONTHLY_STOCK MS) MS 
ON MS.CD_COMPANY = MI.CD_COMPANY AND MS.CD_ITEM = MI.CD_ITEM
--LEFT JOIN CZ_MM_MONTHLY_STOCK MS1 ON MS1.CD_COMPANY = MI.CD_COMPANY AND MS1.CD_ITEM = MI.CD_ITEM AND MS1.YMM = SUBSTRING(CONVERT(CHAR(8), DATEADD(MM, -1, @P_DT_YYYYMM + '01'), 112), 0, 7)
WHERE MI.CD_COMPANY = @P_CD_COMPANY
AND MS.YMM = @P_DT_YYYYMM
AND (ISNULL(@P_CLS_ITEM, '') = '' OR MI.CLS_ITEM = @P_CLS_ITEM)
AND (ISNULL(@P_TP_CLS_L, '') = '' OR MI.CLS_L = @P_TP_CLS_L)
AND (ISNULL(@P_TP_CLS_M, '') = '' OR MI.CLS_M = @P_TP_CLS_M)
AND (ISNULL(@P_TP_CLS_S, '') = '' OR MI.CLS_S = @P_TP_CLS_S)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM = @P_CD_ITEM)
AND (ISNULL(@P_YN_EXCLUDE, 'N') = 'N' OR MS.QT_INV > 0)

DROP TABLE #SORT

GO

