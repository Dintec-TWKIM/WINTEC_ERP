USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_DEFERRED_DELIVERYL_S]    Script Date: 2016-05-23 오후 5:33:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





ALTER PROCEDURE [NEOE].[SP_CZ_SA_DEFERRED_DELIVERYL_S] 
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_TP_TAB			NVARCHAR(1),
	@P_NO_SO			NVARCHAR(20),
	@P_NO_KEY			NVARCHAR(20),
	@P_DT_LIMIT			NVARCHAR(8)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

IF @P_TP_TAB = '0'
BEGIN
SELECT SL.CD_COMPANY, 
	   SL.NO_SO,
	   SL.NO_SO AS NO_KEY,
	   SL.DT_DUEDATE AS DT_LIMIT,
	   SL.SEQ_SO AS NO_LINE, 
	   QL.NO_DSP,
	   SL.CD_ITEM,
	   MI.NM_ITEM,
	   QL.CD_ITEM_PARTNER,
	   QL.NM_ITEM_PARTNER,
	   QL.CD_SPEC,
	   MI.STND_DETAIL_ITEM,
	   MI.STND_ITEM,
	   MI.MAT_ITEM,
	   PL.CD_SUPPLIER, 
	   PL.NM_SUPPLIER,
	   PL.NO_ORDER,
	   PL.DT_LIMIT AS DT_LIMIT_PO,
	   (CASE WHEN ISNULL(PL.QT_PO, 0) > ISNULL(PL.QT_IN, 0) AND PL.DT_LIMIT <> '' AND PL.DT_LIMIT <> 'STOCK' THEN DATEDIFF(DAY, PL.DT_LIMIT, GETDATE()) ELSE '' END) AS DT_DELAY,
	   (CASE WHEN ISNULL(PL.QT_PO, 0) > 0 AND ISNULL(PL.QT_PO, 0) = ISNULL(PL.QT_IN, 0) THEN 'Y' ELSE 'N' END) AS YN_ALL_IN,
	   1 AS QT_SO,
	   ISNULL(PL.QT_PO, 0) AS QT_PO,
	   ISNULL(PL.QT_IN, 0) AS QT_IN,
	   ISNULL(CASE WHEN SL.QT_SO = GL.QT_GIR THEN 1 ELSE 0 END, 0) AS QT_GIR,
	   ISNULL(CASE WHEN SL.QT_SO = GL.QT_OUT THEN 1 ELSE 0 END, 0) AS QT_OUT,
	   ISNULL(SH.YN_CLOSE, 'N') AS YN_CLOSE,
	   SL.DT_EXPECT,
	   MI1.DC_RMK_LOG
FROM SA_SOL SL
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
LEFT JOIN CZ_MA_PITEM MI1 ON MI1.CD_COMPANY = MI.CD_COMPANY AND MI1.CD_PLANT = MI.CD_PLANT AND MI1.CD_ITEM = MI.CD_ITEM
LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = SL.CD_COMPANY AND SH.NO_SO = SL.NO_SO
LEFT JOIN FI_GWDOCU GW ON GW.CD_COMPANY = 'K100' AND GW.CD_PC = '010000' AND GW.NO_DOCU = SH.NO_DOCU
JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = SL.CD_COMPANY AND QL.NO_FILE = SL.NO_SO AND QL.NO_LINE = SL.SEQ_SO
LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE,
		   		  MAX(PH.CD_PARTNER) AS CD_SUPPLIER, 
		   		  MAX(MP.LN_PARTNER) AS NM_SUPPLIER,
		   		  MAX(PH.NO_ORDER) AS NO_ORDER,
				  MAX(PL.DT_LIMIT) AS DT_LIMIT,
		   		  COUNT(PL.CD_ITEM) AS QT_PO,
		   		  SUM(CASE WHEN PL.QT_PO = IL.QT_IN THEN 1 ELSE 0 END) AS QT_IN 
		   FROM PU_POL PL
		   LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
		   LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, ISNULL(SUM(IL.QT_IO), 0) AS QT_IN 
		   			  FROM MM_QTIO IL
					  JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
					  WHERE IH.YN_RETURN = 'N'
		   			  GROUP BY IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL
		   ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PSO_MGMT = PL.NO_PO AND IL.NO_PSOLINE_MGMT = PL.NO_LINE
		   LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = PH.CD_COMPANY AND MP.CD_PARTNER = PH.CD_PARTNER
		   WHERE PL.CD_ITEM NOT LIKE 'SD%'
		   GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE
		   UNION ALL
		   SELECT SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE,
		   		  'STOCK' AS CD_SUPPLIER,
		   		  'STOCK' AS NM_SUPPLIER,
		   		  'STOCK' AS NO_ORDER,
				  'STOCK' AS DT_LIMIT,
		   		  1 AS QT_PO,
		   		  (CASE WHEN SB.QT_STOCK = SB.QT_BOOK THEN 1 ELSE 0 END) AS QT_IN
		   FROM CZ_SA_STOCK_BOOK SB) PL
ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO, 
		   		  ISNULL(SUM(GL.QT_GIR), 0) AS QT_GIR,
		   		  ISNULL(SUM(OL.QT_OUT), 0) AS QT_OUT
		   FROM SA_GIRL GL
		   LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE, SUM(OL.QT_IO) AS QT_OUT
		   			  FROM MM_QTIO OL
					  JOIN MM_QTIOH IH ON IH.CD_COMPANY = OL.CD_COMPANY AND IH.NO_IO = OL.NO_IO
					  WHERE IH.YN_RETURN = 'N'
		   			  GROUP BY OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE) OL
		   ON OL.CD_COMPANY = GL.CD_COMPANY AND OL.NO_ISURCV = GL.NO_GIR AND OL.NO_ISURCVLINE = GL.SEQ_GIR
		   GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
WHERE SL.CD_COMPANY = @P_CD_COMPANY
AND SL.NO_SO = @P_NO_SO
AND SL.DT_DUEDATE = @P_DT_LIMIT
AND SL.CD_ITEM NOT LIKE 'SD%'
AND (ISNULL(SH.YN_CLOSE, 'N') <> 'Y' OR GW.ST_STAT <> '1' OR GL.QT_GIR > 0)
END
ELSE IF @P_TP_TAB = '2'
BEGIN
SELECT SL.CD_COMPANY, 
	   SL.NO_SO,
	   PL.NO_PO AS NO_KEY,
	   PL.DT_LIMIT,
	   PL.NO_LINE,
	   QL.NO_DSP,
	   PL.CD_ITEM,
	   MI.NM_ITEM,
	   QL.CD_ITEM_PARTNER,
	   QL.NM_ITEM_PARTNER,
	   QL.CD_SPEC,
	   MI.STND_DETAIL_ITEM,
	   MI.STND_ITEM,
	   MI.MAT_ITEM,
	   1 AS QT_SO,
	   ISNULL(PL.QT_PO, 0) AS QT_PO,
	   ISNULL(PL.QT_IN, 0) AS QT_IN,
	   ISNULL(CASE WHEN SL.QT_SO = GL.QT_GIR THEN 1 ELSE 0 END, 0) AS QT_GIR,
	   ISNULL(CASE WHEN SL.QT_SO = GL.QT_OUT THEN 1 ELSE 0 END, 0) AS QT_OUT,
	   ISNULL(PL.DT_PO, '') AS DT_PO,
	   ISNULL(PL.DT_IN, '') AS DT_IN,
	   (CASE WHEN PL.DT_PO <> 'STOCK' AND ISNULL(PL.DT_IN, '') <> '' THEN DATEDIFF(DAY, PL.DT_PO, PL.DT_IN) ELSE '' END) AS DT_IN_DAYS,
	   (CASE WHEN ISNULL(PL.QT_PO, 0) > 0 AND ISNULL(PL.QT_PO, 0) = ISNULL(PL.QT_IN, 0) THEN 'Y' ELSE 'N' END) AS YN_ALL_IN,
	   ISNULL(SH.YN_CLOSE, 'N') AS YN_CLOSE,
	   PL.DT_EXPECT,
	   MI1.DC_RMK_LOG
FROM SA_SOL SL
LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = SL.CD_COMPANY AND SH.NO_SO = SL.NO_SO
LEFT JOIN FI_GWDOCU GW ON GW.CD_COMPANY = 'K100' AND GW.CD_PC = '010000' AND GW.NO_DOCU = SH.NO_DOCU
JOIN (SELECT PL.CD_COMPANY,
	  		 PL.NO_SO,
	  		 PL.NO_SOLINE,
	  		 PL.NO_PO, 
	  		 PL.NO_LINE,
	  		 MAX(PL.CD_ITEM) AS CD_ITEM,
			 MAX(PH.DT_PO) AS DT_PO,
	  		 PL.DT_LIMIT,
			 MAX(IL.DT_IN) AS DT_IN,
	  		 COUNT(PL.CD_ITEM) AS QT_PO,
	  		 SUM(CASE WHEN ISNULL(PL.QT_PO, 0) = ISNULL(IL.QT_IN, 0) THEN 1 ELSE 0 END) AS QT_IN,
			 PL.DT_EXPECT 
	  FROM PU_POL PL
	  LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
	  LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, 
						MAX(IH.DT_IO) AS DT_IN,
						SUM(IL.QT_IO) AS QT_IN 
	  			 FROM MM_QTIO IL
				 JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
			     WHERE IH.YN_RETURN = 'N'
	  			 GROUP BY IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL
	  ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PSO_MGMT = PL.NO_PO AND IL.NO_PSOLINE_MGMT = PL.NO_LINE
	  LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = PH.CD_COMPANY AND MP.CD_PARTNER = PH.CD_PARTNER
	  GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE, PL.NO_PO, PL.NO_LINE, PL.DT_LIMIT, PL.DT_EXPECT
	  UNION ALL
	  SELECT SB.CD_COMPANY, 
	  		 SB.NO_FILE,
	  		 SB.NO_LINE,
	  		 'STOCK' AS NO_PO, 
	  		 0 AS NO_LINE,
	  		 SB.CD_ITEM,
			 'STOCK' AS DT_PO,
	  		 'STOCK' AS DT_LIMIT,
			 'STOCK' AS DT_IN,
	  		 1 AS QT_PO,
	  		 (CASE WHEN SB.QT_STOCK = SB.QT_BOOK THEN 1 ELSE 0 END) AS QT_IN,
			 'STOCK' AS DT_EXPECT
	  FROM CZ_SA_STOCK_BOOK SB) PL
ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
LEFT JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = PL.CD_COMPANY AND QL.NO_FILE = PL.NO_SO AND QL.NO_LINE = PL.NO_SOLINE
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = PL.CD_ITEM
LEFT JOIN CZ_MA_PITEM MI1 ON MI1.CD_COMPANY = MI.CD_COMPANY AND MI1.CD_PLANT = MI.CD_PLANT AND MI1.CD_ITEM = MI.CD_ITEM
LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO, 
		   		  ISNULL(SUM(GL.QT_GIR), 0) AS QT_GIR,
		   		  ISNULL(SUM(OL.QT_OUT), 0) AS QT_OUT
		   FROM SA_GIRL GL
		   LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE, SUM(OL.QT_IO) AS QT_OUT
		   			  FROM MM_QTIO OL
					  JOIN MM_QTIOH IH ON IH.CD_COMPANY = OL.CD_COMPANY AND IH.NO_IO = OL.NO_IO
					  WHERE IH.YN_RETURN = 'N'
		   			  GROUP BY OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE) OL
		   ON OL.CD_COMPANY = GL.CD_COMPANY AND OL.NO_ISURCV = GL.NO_GIR AND OL.NO_ISURCVLINE = GL.SEQ_GIR
		   GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
WHERE SL.CD_COMPANY = @P_CD_COMPANY
AND SL.NO_SO = @P_NO_SO
AND PL.NO_PO = @P_NO_KEY
AND PL.DT_LIMIT = @P_DT_LIMIT 
AND (ISNULL(SH.YN_CLOSE, 'N') <> 'Y' OR GW.ST_STAT <> '1' OR GL.QT_GIR > 0)
END


GO

