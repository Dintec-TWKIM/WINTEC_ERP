USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_DEFERRED_DELIVERYL_U]    Script Date: 2016-09-28 오후 4:31:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_SA_DEFERRED_DELIVERYL_U]  
(  
    @P_CD_COMPANY		NVARCHAR(7),
	@P_TP_TYPE			NVARCHAR(1),
	@P_NO_KEY			NVARCHAR(20),
	@P_NO_LINE			NUMERIC(5, 0),
	@P_DT_EXPECT		NVARCHAR(8),
	@P_DC_RMK_LOG		NVARCHAR(1000),
	@P_ID_UPDATE		NVARCHAR(15)
)
AS

IF @P_TP_TYPE = '0'
BEGIN
	UPDATE SA_SOL
	SET DT_EXPECT = @P_DT_EXPECT,
		ID_UPDATE = @P_ID_UPDATE,
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_SO = @P_NO_KEY
	AND SEQ_SO = @P_NO_LINE

	IF EXISTS (SELECT 1 
			   FROM SA_SOL SL
			   JOIN CZ_MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
			   WHERE SL.CD_COMPANY = @P_CD_COMPANY
			   AND SL.NO_SO = @P_NO_KEY
			   AND SL.SEQ_SO = @P_NO_LINE)
	BEGIN
		UPDATE MI
	    SET MI.DC_RMK_LOG = @P_DC_RMK_LOG,
			MI.ID_UPDATE = @P_ID_UPDATE,
			MI.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	    FROM SA_SOL SL
	    JOIN CZ_MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_PLANT = SL.CD_PLANT AND MI.CD_ITEM = SL.CD_ITEM
	    WHERE SL.CD_COMPANY = @P_CD_COMPANY
	    AND SL.NO_SO = @P_NO_KEY
	    AND SL.SEQ_SO = @P_NO_LINE
	END
	ELSE
	BEGIN
		INSERT INTO CZ_MA_PITEM
		(
			CD_COMPANY,
			CD_PLANT,
			CD_ITEM,
			DC_RMK_LOG,
			ID_INSERT,
			DTS_INSERT
		)
		SELECT SL.CD_COMPANY,
			   SL.CD_PLANT,
			   SL.CD_ITEM,
			   @P_DC_RMK_LOG AS DC_RMK_LOG,
			   @P_ID_UPDATE AS ID_INSERT,
			   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
		FROM SA_SOL SL
	    WHERE SL.CD_COMPANY = @P_CD_COMPANY
	    AND SL.NO_SO = @P_NO_KEY
	    AND SL.SEQ_SO = @P_NO_LINE
	END
END
ELSE IF @P_TP_TYPE = '2'
BEGIN
	UPDATE PU_POL
	SET DT_EXPECT = @P_DT_EXPECT,
		ID_UPDATE = @P_ID_UPDATE,
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_PO = @P_NO_KEY
	AND NO_LINE = @P_NO_LINE

	UPDATE SL
	SET SL.DT_EXPECT = PL.DT_EXPECT,
		SL.ID_UPDATE = @P_ID_UPDATE,
		SL.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE()) 
	FROM SA_SOL SL
	JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE,
	      	     MAX(DT_EXPECT) AS DT_EXPECT 
	      FROM PU_POL PL
		  WHERE PL.CD_COMPANY = @P_CD_COMPANY
		  AND PL.NO_PO = @P_NO_KEY
		  AND PL.NO_LINE = @P_NO_LINE
	      GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE) PL
	ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO

	IF EXISTS (SELECT 1
			   FROM PU_POL PL
			   JOIN CZ_MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_PLANT = PL.CD_PLANT AND MI.CD_ITEM = PL.CD_ITEM
			   WHERE PL.CD_COMPANY = @P_CD_COMPANY
			   AND PL.NO_PO = @P_NO_KEY
			   AND PL.NO_LINE = @P_NO_LINE)
	BEGIN
		UPDATE MI
		SET MI.DC_RMK_LOG = @P_DC_RMK_LOG,
			MI.ID_UPDATE = @P_ID_UPDATE,
			MI.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
		FROM PU_POL PL
		JOIN CZ_MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_PLANT = PL.CD_PLANT AND MI.CD_ITEM = PL.CD_ITEM
		WHERE PL.CD_COMPANY = @P_CD_COMPANY
		AND PL.NO_PO = @P_NO_KEY
		AND PL.NO_LINE = @P_NO_LINE
	END
	ELSE
	BEGIN
		INSERT INTO CZ_MA_PITEM
		(
			CD_COMPANY,
			CD_PLANT,
			CD_ITEM,
			DC_RMK_LOG,
			ID_INSERT,
			DTS_INSERT
		)
		SELECT PL.CD_COMPANY,
			   PL.CD_PLANT,
			   PL.CD_ITEM,
			   @P_DC_RMK_LOG AS DC_RMK_LOG,
			   @P_ID_UPDATE AS ID_INSERT,
			   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
		FROM PU_POL PL
		WHERE PL.CD_COMPANY = @P_CD_COMPANY
		AND PL.NO_PO = @P_NO_KEY
		AND PL.NO_LINE = @P_NO_LINE
	END
END

GO