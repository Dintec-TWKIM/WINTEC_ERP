USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MM_STOCK_PO_RPT_S1]    Script Date: 2019-03-26 오전 11:26:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_MM_STOCK_PO_RPT_S1]
(
    @P_CD_COMPANY   NVARCHAR(7),
	@P_QT_FRE		NUMERIC(10, 0),
	@P_CLS_M		NVARCHAR(4)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

PRINT ('임시테이블 생성')
CREATE TABLE #재고단가
(
	CD_COMPANY NVARCHAR(7),
	CD_PARTNER NVARCHAR(20),
	CD_ITEM	   NVARCHAR(20),
	UM_ITEM    NUMERIC(15, 4)
)

CREATE NONCLUSTERED INDEX 재고단가 ON #재고단가 (CD_COMPANY, CD_PARTNER, CD_ITEM)

INSERT INTO #재고단가
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY 
AND CD_PARTNER = '00067' -- (주)사라콤
AND DC_PRICE_TERMS = '사용불가(기획실전용)'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '09680' -- (주)테크로스
AND DC_PRICE_TERMS = '단가표'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '00028' -- (주)대양전장
AND DC_PRICE_TERMS = '재고 D/C적용'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   (CASE WHEN FG_UM = '001' THEN (UM_ITEM * 0.85) ELSE UM_ITEM END) AS UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '03316' -- (주)오리엔탈검사개발
AND DC_PRICE_TERMS = '표준단가'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   (UM_ITEM * 0.95) AS UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '00312' -- 한국에머슨프로세스매니지먼트마린솔루션(주)
AND DC_PRICE_TERMS = '표준단가'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   (UM_ITEM * 0.95) AS UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY 
AND CD_PARTNER = '03971' -- 우리무역
AND DC_PRICE_TERMS = '단가표'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   (CASE WHEN FG_UM = '001' THEN (UM_ITEM * 0.74) ELSE UM_ITEM END) AS UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '00141' -- (주)동화뉴텍
AND DC_PRICE_TERMS = '단가표'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '00731' -- 한국알파라발(주)서울
AND DC_PRICE_TERMS = 'STOCK'
AND EDT_UM = '99991231'
UNION ALL
SELECT CD_COMPANY,
       CD_PARTNER,
	   CD_ITEM,
	   UM_ITEM
FROM MA_ITEM_UMPARTNER
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = '04886' -- 강림중공업(주)
AND EDT_UM = '99991231'
UNION ALL
SELECT PH.CD_COMPANY, 
	   PH.CD_PARTNER, 
	   PH.CD_ITEM, 
	   PH.UM 
FROM (SELECT PH.CD_COMPANY, 
	  	     PH.CD_PARTNER,
	  	     PH.DT_PO, 
	  	     PL.CD_ITEM, 
	  	     PL.UM,
	  	     ROW_NUMBER() OVER (PARTITION BY PH.CD_COMPANY, PH.CD_PARTNER, PL.CD_ITEM ORDER BY PH.DT_PO DESC) AS IDX 
	  FROM PU_POH PH
	  JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
	  WHERE PH.CD_COMPANY = @P_CD_COMPANY 
	  AND PH.CD_PARTNER = '00740' -- 하이에어코리아(주)
	  AND PH.CD_TPPO IN ('1300', '1400', '2300', '2400')) PH
WHERE PH.IDX = 1;

WITH A AS
(
	SELECT MI.CLS_M,
		   MC.NM_SYSDEF AS NM_CLS_M,
		   MI.CD_ITEM,
		   MC1.NM_SYSDEF AS NM_UNIT_IM,
		   QL.QT_FILE_QTN,
		   QL.QT_ITEM_QTN,
		   QL.QT_FILE_SO,
		   QL.QT_ITEM_SO,
		   (ISNULL(ML.QT_OPEN, 0) + ISNULL(OM.QT_MONTH, 0)) AS QT_INV,
		   PL.QT_NOT_IN,
		   (ISNULL(SB.QT_BOOK, 0) - ISNULL(SB.QT_GI, 0)) AS QT_BOOK,
		   SB.QT_HOLD,
		   (CASE WHEN ISNULL(UM.UM_ITEM, 0) > 0 THEN UM.UM_ITEM
				 WHEN ISNULL(MI.STAND_PRC, 0) > 0 THEN MI.STAND_PRC
										          ELSE AV.UM_KR_P_AVG END) AS STAND_PRC,
		   (CASE WHEN ISNULL(UM.UM_ITEM, 0) > 0 THEN '기준단가'
				 WHEN ISNULL(MI.STAND_PRC, 0) > 0 THEN '재고평균단가'
										          ELSE '평균매입단가' END) AS TP_UM 
	FROM MA_PITEM MI
	JOIN (SELECT QH.CD_COMPANY,
				 QL.CD_ITEM,
				 COUNT(QH.NO_FILE) AS QT_FILE_QTN,
				 COUNT(SL.NO_SO) AS QT_FILE_SO,
				 SUM(QL.QT_QTN) AS QT_ITEM_QTN,
				 SUM(SL.QT_SO) AS QT_ITEM_SO 
		  FROM CZ_SA_QTNH QH
		  JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		  LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = QL.CD_COMPANY AND SL.NO_SO = QL.NO_FILE AND SL.SEQ_SO = QL.NO_LINE
		  WHERE QH.CD_COMPANY = @P_CD_COMPANY
		  AND QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112)
		  AND EXISTS (SELECT 1 
		  	          FROM MA_CODEDTL MC
		  		      WHERE MC.CD_COMPANY = QH.CD_COMPANY
		  		      AND MC.CD_FIELD = 'CZ_SA00023'
		  		      AND MC.CD_SYSDEF NOT IN ('00', 'HB', 'ZZ')
		  			  AND QH.NO_FILE LIKE MC.CD_SYSDEF +  '%')
		  AND QL.CD_ITEM IS NOT NULL
		  AND QL.CD_ITEM <> ''
		  GROUP BY QH.CD_COMPANY, QL.CD_ITEM
		  HAVING COUNT(QH.NO_FILE) >= @P_QT_FRE) QL
	ON QL.CD_COMPANY = MI.CD_COMPANY AND QL.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.CD_ITEM,
		  	   	      SUM(ISNULL(OL.QT_GOOD_INV, 0) + ISNULL(OL.QT_REJECT_INV, 0) + ISNULL(OL.QT_INSP_INV, 0) + ISNULL(OL.QT_TRANS_INV, 0)) AS QT_OPEN
		  	   FROM MM_OPENQTL OL
		  	   WHERE OL.YM_STANDARD = CONVERT(NVARCHAR, YEAR(GETDATE())) + '00'
			   AND OL.CD_SL = 'SL02'
		  	   GROUP BY OL.CD_COMPANY, OL.CD_ITEM) ML
	ON ML.CD_COMPANY = MI.CD_COMPANY AND ML.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT CD_COMPANY, CD_ITEM,
			   		  SUM(ISNULL(QT_GOOD_GR, 0) - ISNULL(QT_GOOD_GI, 0)) AS QT_MONTH 
			   FROM MM_OHSLINVM
			   WHERE CD_SL = 'SL02'
			   AND YY_INV = YEAR(GETDATE())
			   GROUP BY CD_COMPANY, CD_ITEM) OM
	ON OM.CD_COMPANY = MI.CD_COMPANY AND OM.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.CD_ITEM,
					  SUM(PL.QT_PO - ISNULL(PL.QT_RCV, 0)) AS QT_NOT_IN 
			   FROM PU_POL PL
			   WHERE PL.FG_RCV IN ('160', '170', '180', '190') 
			   AND PL.QT_PO > PL.QT_RCV
			   GROUP BY PL.CD_COMPANY, PL.CD_ITEM) PL
	ON PL.CD_COMPANY = MI.CD_COMPANY AND PL.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT SB.CD_COMPANY, SB.CD_ITEM,
					  SUM(SB.QT_BOOK) AS QT_BOOK,
					  SUM(SB.QT_HOLD) AS QT_HOLD,
					  SUM(ISNULL(GL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GI, 0)) AS QT_GI 
			   FROM CZ_SA_STOCK_BOOK SB
	           LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
								 SUM(GL.QT_GIR_STOCK) AS QT_GIR_STOCK 
		                  FROM SA_GIRL GL
		                  WHERE GL.QT_GIR_STOCK > 0
		                  AND GL.QT_GI > 0
						  AND GL.YN_GI_STOCK = 'Y'
		                  GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
			   ON GL.CD_COMPANY = SB.CD_COMPANY AND GL.NO_SO = SB.NO_FILE AND GL.SEQ_SO = SB.NO_LINE
			   LEFT JOIN (SELECT CD_COMPANY, NO_SO, SEQ_SO, 
								 SUM(QT_GI) AS QT_GI
						  FROM MM_GIREQL
						  WHERE CD_COMPANY = @P_CD_COMPANY
						  AND CD_SL = 'SL02'
						  AND CD_GRSL = 'SL03'
						  GROUP BY CD_COMPANY, NO_SO, SEQ_SO) QL
			   ON QL.CD_COMPANY = SB.CD_COMPANY AND QL.NO_SO = SB.NO_FILE AND QL.SEQ_SO = SB.NO_LINE
			   GROUP BY SB.CD_COMPANY, SB.CD_ITEM) SB
	ON SB.CD_COMPANY = MI.CD_COMPANY AND SB.CD_ITEM = MI.CD_ITEM
	LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = MI.CD_COMPANY AND MC.CD_FIELD = 'MA_B000031' AND MC.CD_SYSDEF = MI.CLS_M
	LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = MI.CD_COMPANY AND MC1.CD_FIELD = 'MA_B000004' AND MC1.CD_SYSDEF = MI.UNIT_IM
	LEFT JOIN #재고단가 UM ON UM.CD_COMPANY = MI.CD_COMPANY AND UM.CD_PARTNER = MC.CD_FLAG2 AND UM.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT QH.CD_COMPANY,
			          QL.CD_ITEM,
			   	      AVG(QL.UM_KR_P) AS UM_KR_P_AVG
			   FROM CZ_SA_QTNH QH
			   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
			   WHERE QH.CD_COMPANY = 'K100'
			   AND QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112)
			   GROUP BY QH.CD_COMPANY, QL.CD_ITEM) AV
	ON AV.CD_COMPANY = MI.CD_COMPANY AND AV.CD_ITEM = MI.CD_ITEM
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.CLS_L = 'EQ'
	AND MI.YN_USE = 'Y'
	AND (ISNULL(@P_CLS_M, '') = '' OR MI.CLS_M = @P_CLS_M)
)
SELECT A.CLS_M,
	   A.NM_CLS_M,
	   A.CD_ITEM,
	   A.NM_UNIT_IM,
	   ISNULL(A.QT_FILE_QTN, 0) AS QT_FILE_QTN,
	   ISNULL(A.QT_ITEM_QTN, 0) AS QT_ITEM_QTN,
	   ISNULL(A.QT_FILE_SO, 0) AS QT_FILE_SO,
	   ISNULL(A.QT_ITEM_SO, 0) AS QT_ITEM_SO,
	   ISNULL(A.QT_INV, 0) AS QT_INV,
	   ISNULL(A.QT_NOT_IN, 0) AS QT_NOT_IN,
	   ISNULL(A.QT_BOOK, 0) AS QT_BOOK,
	   ISNULL(A.QT_HOLD, 0) AS QT_HOLD,
	   A.STAND_PRC,
	   A.TP_UM,
	   (A.QT_ITEM_SO / 12) AS QT_SO_MONTH,
	   0.0 AS QT_SO_MONTH1,
	   (ISNULL(A.QT_INV, 0) - ISNULL(A.QT_BOOK, 0)) AS QT_REMAIN,
	   (((ISNULL(A.QT_INV, 0) - ISNULL(A.QT_BOOK, 0)) + ISNULL(A.QT_NOT_IN, 0)) - ISNULL(A.QT_HOLD, 0)) AS QT_REMAIN1,
	   0.0 AS QT_NEED,
	   0.0 AS QT_NEED_ROUND,
	   0.0 AS AM_PO		   
FROM A

GO

