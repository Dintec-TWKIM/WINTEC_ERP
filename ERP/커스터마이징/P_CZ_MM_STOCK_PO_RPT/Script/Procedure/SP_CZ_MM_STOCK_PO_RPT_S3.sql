USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MM_STOCK_PO_RPT_S3]    Script Date: 2019-03-29 오후 4:26:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_MM_STOCK_PO_RPT_S3]
(
    @P_CD_COMPANY   NVARCHAR(7),
	@P_CLS_M		NVARCHAR(4)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH A AS
(
	SELECT MI.CD_COMPANY,
		   MI.CLS_M,
		   MI.CD_ITEM,
		   (ISNULL(ML.QT_OPEN, 0) + ISNULL(OM.QT_MONTH, 0)) AS QT_INV,
		   PL.QT_NOT_IN,
		   (ISNULL(SB.QT_BOOK, 0) - ISNULL(SB.QT_GI, 0)) AS QT_BOOK,
		   SB.QT_HOLD,
		   MI.STAND_PRC  
	FROM MA_PITEM MI
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.CD_ITEM,
		  	   	      SUM(ISNULL(OL.QT_GOOD_INV, 0) + ISNULL(OL.QT_REJECT_INV, 0) + ISNULL(OL.QT_INSP_INV, 0) + ISNULL(OL.QT_TRANS_INV, 0)) AS QT_OPEN
		  	   FROM MM_OPENQTL OL
		  	   WHERE OL.YM_STANDARD = CONVERT(NVARCHAR, YEAR(GETDATE())) + '00'
			   AND OL.CD_SL = 'SL02'
		  	   GROUP BY OL.CD_COMPANY, OL.CD_ITEM) ML
	ON ML.CD_COMPANY = MI.CD_COMPANY AND ML.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT CD_COMPANY, CD_ITEM,
			   		  SUM(ISNULL(QT_GOOD_GR, 0) - ISNULL(QT_GOOD_GI, 0)) AS QT_MONTH 
			   FROM MM_OHSLINVM
			   WHERE CD_SL = 'SL02'
			   AND YY_INV = YEAR(GETDATE())
			   GROUP BY CD_COMPANY, CD_ITEM) OM
	ON OM.CD_COMPANY = MI.CD_COMPANY AND OM.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT PL.CD_COMPANY, PL.CD_ITEM,
					  SUM(PL.QT_PO - ISNULL(PL.QT_RCV, 0)) AS QT_NOT_IN 
			   FROM PU_POL PL
			   WHERE PL.FG_RCV IN ('160', '170', '180', '190') 
			   AND PL.QT_PO > PL.QT_RCV
			   GROUP BY PL.CD_COMPANY, PL.CD_ITEM) PL
	ON PL.CD_COMPANY = MI.CD_COMPANY AND PL.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT SB.CD_COMPANY, SB.CD_ITEM,
					  SUM(SB.QT_BOOK) AS QT_BOOK,
					  SUM(SB.QT_HOLD) AS QT_HOLD,
					  SUM(ISNULL(GL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GI, 0)) AS QT_GI
			   FROM CZ_SA_STOCK_BOOK SB
	           LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
								 SUM(GL.QT_GIR_STOCK) AS QT_GIR_STOCK 
		                  FROM SA_GIRL GL
		                  WHERE GL.QT_GIR_STOCK > 0
		                  AND GL.QT_GI > 0
						  AND GL.YN_GI_STOCK = 'Y'
		                  GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
			   ON GL.CD_COMPANY = SB.CD_COMPANY AND GL.NO_SO = SB.NO_FILE AND GL.SEQ_SO = SB.NO_LINE
			   LEFT JOIN (SELECT CD_COMPANY, NO_SO, SEQ_SO, 
								 SUM(QT_GI) AS QT_GI
						  FROM MM_GIREQL
						  WHERE CD_COMPANY = @P_CD_COMPANY
						  AND CD_SL = 'SL02'
						  AND CD_GRSL = 'SL03'
						  GROUP BY CD_COMPANY, NO_SO, SEQ_SO) QL
			   ON QL.CD_COMPANY = SB.CD_COMPANY AND QL.NO_SO = SB.NO_FILE AND QL.SEQ_SO = SB.NO_LINE
			   GROUP BY SB.CD_COMPANY, SB.CD_ITEM) SB
	ON SB.CD_COMPANY = MI.CD_COMPANY AND SB.CD_ITEM = MI.CD_ITEM
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.CLS_L = 'EQ'
	AND MI.YN_USE = 'Y'
	AND (ISNULL(@P_CLS_M, '') = '' OR MI.CLS_M = @P_CLS_M)
)
SELECT CLS_M,
	   MC.NM_SYSDEF AS NM_CLS_M,
	   ROUND(SUM((((ISNULL(A.QT_INV, 0) - ISNULL(A.QT_BOOK, 0)) + ISNULL(A.QT_NOT_IN, 0)) - ISNULL(A.QT_HOLD, 0)) * ISNULL(A.STAND_PRC, 0)), 0) AS AM_REMAIN
FROM A
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = A.CD_COMPANY AND MC.CD_FIELD = 'MA_B000031' AND MC.CD_SYSDEF = A.CLS_M
GROUP BY CLS_M, MC.NM_SYSDEF

GO

