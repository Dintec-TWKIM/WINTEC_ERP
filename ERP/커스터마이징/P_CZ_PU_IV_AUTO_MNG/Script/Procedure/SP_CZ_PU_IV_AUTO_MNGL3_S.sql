USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_IV_AUTO_MNGL3_S]    Script Date: 2016-11-17 오후 5:00:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
    
ALTER PROCEDURE [NEOE].[SP_CZ_PU_IV_AUTO_MNGL3_S]        
(             
	@P_CD_COMPANY           NVARCHAR(7),
	@P_CD_PARTNER			NVARCHAR(20),
	@P_DT_MONTH				NVARCHAR(6),
	@P_IDX					INT,
	@P_NO_FILE				NVARCHAR(20)
)        
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT 'N' AS S,
	   EL.CD_PARTNER,
	   MP.LN_PARTNER,
	   EL.DT_MONTH,
	   EL.IDX,
	   EL.NO_FILE,
	   ISNULL(EL.AM, 0) AS AM,
	   ISNULL(EL.VAT, 0) AS VAT,
	   PH.NO_PO,
	   PH.NO_EMP,
	   ISNULL(PH.AM_PO, 0) AS AM_PO,
	   ISNULL(PH.AM_IO, 0) AS AM_IO,
	   ISNULL(PH.AM_IV, 0) AS AM_IV,
	   ISNULL(PH.AM_REMAIN, 0) AS AM_REMAIN,
	   (ISNULL(EL.AM, 0) - ISNULL(PH.AM_IO, 0)) AS AM_DIFF,
	   IC.DC_RMK,
	   IC.DC_RMK_WF,
	   EL1.SEQ,
	   EL1.DC_RMK AS DC_RMK_TAX
FROM (SELECT CD_COMPANY, CD_PARTNER, DT_MONTH, IDX, NO_FILE,
	  	     SUM(AM) AS AM,
	  	     SUM(VAT) AS VAT
	  FROM CZ_PU_ETAX_DETAILL
	  GROUP BY CD_COMPANY, CD_PARTNER, DT_MONTH, IDX, NO_FILE) EL
LEFT JOIN (SELECT CD_COMPANY, CD_PARTNER, DT_MONTH, IDX, NO_FILE,
			      SEQ, 
			      DC_RMK,
			      ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, CD_PARTNER, DT_MONTH, IDX, NO_FILE ORDER BY SEQ) AS IDX1
		   FROM CZ_PU_ETAX_DETAILL) EL1
ON EL1.CD_COMPANY = EL.CD_COMPANY AND EL1.CD_PARTNER = EL.CD_PARTNER AND EL1.DT_MONTH = EL.DT_MONTH AND EL1.IDX = EL.IDX AND EL1.NO_FILE = EL.NO_FILE AND EL1.IDX1 = 1
LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PARTNER, PH.CD_PJT,
		   		  MAX(PH.NO_PO) AS NO_PO,
				  MAX(PH.NO_EMP) AS NO_EMP,
		   		  SUM(PL.AM_PO) AS AM_PO,
		   		  SUM(PL.AM_IO) AS AM_IO,
		   		  SUM(PL.AM_IV) AS AM_IV,
				  SUM(ISNULL(PL.AM_IO, 0) - ISNULL(PL.AM_IV, 0)) AS AM_REMAIN
		   FROM PU_POH PH
		   LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_PO,
		   				     SUM(CASE WHEN ISNULL(IH.YN_RETURN, 'N') = 'Y' THEN -PL.AM ELSE PL.AM END) AS AM_PO,
		   				     SUM(CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM ELSE IL.AM END) AS AM_IO,
		   				     SUM(CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_CLS ELSE IL.AM_CLS END) AS AM_IV
		   			  FROM PU_POL PL
		   			  LEFT JOIN MM_QTIO IL ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PSO_MGMT = PL.NO_PO AND IL.NO_PSOLINE_MGMT = PL.NO_LINE
					  LEFT JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
					  WHERE ISNULL(IL.YN_AM, 'Y') = 'Y'
		   			  GROUP BY PL.CD_COMPANY, PL.NO_PO) PL
		   ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
		   GROUP BY PH.CD_COMPANY, PH.CD_PARTNER, PH.CD_PJT) PH
ON PH.CD_COMPANY = EL.CD_COMPANY AND PH.CD_PARTNER = EL.CD_PARTNER AND (PH.CD_PJT = EL.NO_FILE OR PH.CD_PJT = EL.NO_FILE + '-ST' OR PH.CD_PJT = LEFT(EL.NO_FILE, 10))
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = EL.CD_COMPANY AND MP.CD_PARTNER = EL.CD_PARTNER
LEFT JOIN CZ_PU_IV_CONFIRM IC ON IC.CD_COMPANY = EL.CD_COMPANY AND IC.TP_CONFIRM = '004' AND IC.NO_PO = PH.NO_PO AND IC.AM_EX = EL.AM
WHERE EL.CD_COMPANY = @P_CD_COMPANY
AND EL.CD_PARTNER = @P_CD_PARTNER
AND EL.DT_MONTH = @P_DT_MONTH
AND EL.IDX = @P_IDX
AND (ISNULL(@P_NO_FILE, '') = '' OR EL.NO_FILE = @P_NO_FILE)

GO