USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_IV_AUTO_XML]    Script Date: 2016-03-30 오후 1:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
           
ALTER PROCEDURE [NEOE].[SP_CZ_PU_IV_AUTO_XML]                
(
    @P_CD_COMPANY           NVARCHAR(7),
    @P_XML			        XML, 
	@P_DT_PROCESS           NVARCHAR(8),
    @P_DT_PAY_PREARRANGED   NVARCHAR(8),
    @P_ID_USER		        NVARCHAR(10), 
    @DOC			        INT = NULL
)                
AS                

DECLARE @V_NO_IV     NVARCHAR(20)
DECLARE @V_ERRMSG	 VARCHAR(255) -- ERROR 메시지
DECLARE @V_DT_IO     NVARCHAR(6)
DECLARE @V_DOC       INT

EXEC SP_XML_PREPAREDOCUMENT @V_DOC OUTPUT, @P_XML

SELECT * INTO #XML
FROM OPENXML (@V_DOC, '/XML/ROW', 2) WITH 
(
    CD_COMPANY  NVARCHAR(7),
    NO_IO		NVARCHAR(20),
    NO_IOLINE   NUMERIC(5, 0),
    NO_PO       NVARCHAR(20),
    NO_POLINE   NUMERIC(5, 0),
    CD_ITEM     NVARCHAR(20),
    CD_EXCH     NVARCHAR(4),
    RT_EXCH     NUMERIC(17, 4),
    QT_IV       NUMERIC(17, 4),
    UM          NUMERIC(17, 4),          
    AM_IV       NUMERIC(17, 4),
    VAT_IV      NUMERIC(17, 4),
    UM_EX       NUMERIC(17, 4),
    AM_EX       NUMERIC(17, 4)
)

EXEC SP_XML_REMOVEDOCUMENT @V_DOC

BEGIN TRAN SP_CZ_PU_IV_AUTO
BEGIN TRY

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SET @V_DT_IO = CONVERT(NVARCHAR(6), GETDATE(), 112)

EXEC NEOE.CP_GETNO @P_CD_COMPANY,'PU', '09', @V_DT_IO,  @V_NO_IV OUTPUT;

WITH A AS
(
    SELECT IH.CD_COMPANY,
           IH.CD_PARTNER,
           IH.FG_TRANS,
           IH.YN_RETURN,
           IL.FG_TPIO,
           IL.FG_TAX,
           XL.CD_EXCH,
           XL.RT_EXCH,
           (SELECT ISNULL(CD_DOCU, (CASE WHEN IH.FG_TRANS = '001' THEN '45' ELSE '46' END)) FROM MA_AISPOSTH WHERE CD_COMPANY = IL.CD_COMPANY AND CD_TP = IL.FG_TPIO AND FG_TP = '200') AS CD_DOCU,
           XL.AM_EX,
           XL.AM_IV AS AM_K,
           XL.VAT_IV AS VAT_TAX
    FROM MM_QTIOH IH
    JOIN MM_QTIO IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
    JOIN #XML XL ON XL.NO_IO = IL.NO_IO AND XL.NO_IOLINE = IL.NO_IOLINE
    LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IL.CD_COMPANY AND MC.CD_FIELD = 'MA_B000046' AND MC.CD_SYSDEF = IL.FG_TAX
    WHERE IH.CD_COMPANY = @P_CD_COMPANY
    AND XL.QT_IV <> 0
    UNION ALL
    SELECT IH.CD_COMPANY,
           IH.CD_PARTNER,
           IH.FG_TRANS,
           IH.YN_RETURN,
           IL.FG_TPIO,
           IL.FG_TAX,
           XL.CD_EXCH,
           XL.RT_EXCH,
           (SELECT ISNULL(CD_DOCU, (CASE WHEN IH.FG_TRANS = '001' THEN '45' ELSE '46' END)) FROM MA_AISPOSTH WHERE CD_COMPANY = IL.CD_COMPANY AND CD_TP = IL.FG_TPIO AND FG_TP = '200') AS CD_DOCU,
           XL.AM_EX,
           XL.AM_IV AS AM_K,
           XL.VAT_IV AS VAT_TAX
    FROM MM_QTIOH IH
    JOIN MM_QTIO IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
    JOIN #XML XL ON XL.NO_IO = IL.NO_IO AND XL.NO_IOLINE = IL.NO_IOLINE
    LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IL.CD_COMPANY AND MC.CD_FIELD = 'MA_B000046' AND MC.CD_SYSDEF = IL.FG_TAX
    WHERE IH.CD_COMPANY = @P_CD_COMPANY
    AND XL.QT_IV = 0
),
B AS
(
    SELECT A.CD_COMPANY,
           A.CD_PARTNER,
           A.FG_TRANS,
           A.FG_TPIO,
           A.FG_TAX,
           A.CD_EXCH,
           A.RT_EXCH,
           A.CD_DOCU,
           A.AM_EX,
           A.AM_K,
           A.VAT_TAX 
    FROM A
),
C AS
(
    SELECT B.CD_COMPANY,
           B.CD_PARTNER,
           B.FG_TRANS,
           B.FG_TPIO,
           B.FG_TPIO AS FG_TPPURCHASE,
           B.FG_TAX,
           B.CD_EXCH,
           B.RT_EXCH,
           B.CD_DOCU,
           SUM(B.AM_EX) AS AM_EX,
           SUM(B.AM_K) AS AM_K,
           SUM(B.VAT_TAX) AS VAT_TAX
    FROM B
    GROUP BY B.CD_COMPANY,
             B.CD_PARTNER,
             B.FG_TRANS,
             B.FG_TPIO,
             B.FG_TAX,
             B.CD_EXCH,
             B.RT_EXCH,
             B.CD_DOCU
)
INSERT INTO PU_IVH
(
    NO_IV,
    CD_COMPANY,
    CD_BIZAREA,
    NO_BIZAREA,
    FG_TPPURCHASE,
    CD_PARTNER,
    FG_TRANS,
    AM_K,
    VAT_TAX,
    DT_PROCESS,         
    FG_TAX,
    TP_FD,
    TP_SUMTAX,
    FG_TAXP,
    CD_DEPT,
    NO_EMP,
    YN_PURSUB,
    YN_EXPIV,
    DTS_INSERT,
    ID_INSERT,
    AM_EX,
    RT_EXCH,
    CD_EXCH,        
    DC_RMK,
    CD_DOCU,
    FG_PAYBILL,
    DT_PAY_PREARRANGED,
    CD_BIZAREA_TAX,
    DT_DUE,
    YN_JEONJA
)
SELECT @V_NO_IV,
       IH.CD_COMPANY,
       MB.CD_BIZAREA,
       MB.NO_BIZAREA,
       IH.FG_TPPURCHASE,
       IH.CD_PARTNER,
       IH.FG_TRANS,
       ISNULL(IH.AM_K, 0) AS AM_K,
       ISNULL(IH.VAT_TAX, 0) AS VAT_TAX,
       @P_DT_PROCESS AS DT_PROCESS,
       IH.FG_TAX,
       'D' AS TP_FD,
       'S' AS TP_SUMTAX,
       '001' AS FG_TAXP, -- 계산서처리 일괄(001), 건별(002)
       ME.CD_DEPT,
       ME.NO_EMP,
       'N' AS YN_PURSUB,
       'N' AS YN_EXPIV,
       NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT,
       @P_ID_USER AS ID_INSERT,
       ISNULL(IH.AM_EX, 0) AS AM_EX,
       IH.RT_EXCH,
       IH.CD_EXCH,
       NULL AS DC_RMK,
       (SELECT ISNULL(CD_DOCU, (CASE WHEN IH.FG_TRANS = '001' THEN '45' ELSE '46' END)) FROM MA_AISPOSTH WHERE CD_COMPANY = IH.CD_COMPANY AND CD_TP = IH.FG_TPIO AND FG_TP = '200') AS CD_DOCU,
       MP.FG_PAYBILL,
       @P_DT_PAY_PREARRANGED AS DT_PAY_PREARRANGED,
       MB.CD_BIZAREA AS CD_BIZAREA_TAX,
       @P_DT_PAY_PREARRANGED AS DT_DUE,
       MP.YN_JEONJA  
FROM C AS IH
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = IH.CD_COMPANY
LEFT JOIN MA_USER MU ON MU.CD_COMPANY = IH.CD_COMPANY AND MU.ID_USER = @P_ID_USER
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = MU.CD_COMPANY AND ME.NO_EMP = MU.NO_EMP
JOIN MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER;

WITH A AS
(
    SELECT @V_NO_IV AS NO_IV,
           IL.CD_COMPANY,
           IL.CD_PLANT,
           IL.NO_IO,
           IL.NO_IOLINE,
           IL.CD_ITEM,
           PH.CD_PURGRP,
           (CASE WHEN ISNULL(PL.CD_CC,'') = '' THEN PG.CD_CC ELSE PL.CD_CC END) AS CD_CC,
           @P_DT_PROCESS AS DT_TAX,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.QT_IV ELSE XL.QT_IV END) AS QT_RCV_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.UM ELSE XL.UM END) AS UM_ITEM_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.AM_IV ELSE XL.AM_IV END) AS AM_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.VAT_IV ELSE XL.VAT_IV END) AS VAT,
           MU.NO_EMP,
           IL.CD_PJT,                 
           IL.FG_TPIO AS FG_TPPURCHASE,
           XL.NO_PO AS NO_PO,         
    	   XL.NO_POLINE AS NO_POLINE,
           XL.CD_EXCH,
           XL.RT_EXCH,
           IH.YN_RETURN,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.UM_EX ELSE XL.UM_EX END) AS UM_EX_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.AM_EX ELSE XL.AM_EX END) AS AM_EX_CLS,                
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.QT_IV ELSE XL.QT_IV END) AS QT_CLS,
           NULL AS NO_LC,
           0 AS NO_LCLINE,
           0 AS SEQ_PROJECT,
           NULL AS NO_WBS,
           NULL AS NO_CBS,
           (CASE WHEN (ISNULL(IL.TP_UM_TAX, '002') = '002' OR LEN(IL.TP_UM_TAX) < 1) THEN '002' ELSE '001' END) AS TP_UM_TAX,
           'A' AS TP_ORDER
    FROM MM_QTIO IL
    JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
    JOIN #XML XL ON XL.NO_IO = IL.NO_IO AND XL.NO_IOLINE = IL.NO_IOLINE
    LEFT JOIN PU_POL PL ON PL.CD_COMPANY = IL.CD_COMPANY AND PL.NO_PO = IL.NO_PSO_MGMT AND PL.NO_LINE = IL.NO_PSOLINE_MGMT
    LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
    LEFT JOIN MA_USER MU ON MU.CD_COMPANY = IH.CD_COMPANY AND MU.ID_USER = @P_ID_USER
    LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IL.CD_COMPANY AND MC.CD_FIELD = 'MA_B000046' AND MC.CD_SYSDEF = IL.FG_TAX
    LEFT JOIN MA_PURGRP PG ON PG.CD_COMPANY = PH.CD_COMPANY AND PG.CD_PURGRP = PH.CD_PURGRP
    WHERE IL.CD_COMPANY = @P_CD_COMPANY
    AND XL.QT_IV <> 0
    UNION ALL
    SELECT @V_NO_IV AS NO_IV,
           IL.CD_COMPANY,
           IL.CD_PLANT,
           IL.NO_IO,
           IL.NO_IOLINE,
           XL.CD_ITEM,
           PH.CD_PURGRP,
           (CASE WHEN ISNULL(PL.CD_CC,'') = '' THEN PG.CD_CC ELSE PL.CD_CC END) AS CD_CC,
           @P_DT_PROCESS AS DT_TAX,
           0 AS QT_RCV_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.UM ELSE XL.UM END) AS UM_ITEM_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.AM_IV ELSE XL.AM_IV END) AS AM_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.VAT_IV ELSE XL.VAT_IV END) AS VAT,
           MU.NO_EMP,
           IL.CD_PJT,                 
           IL.FG_TPIO AS FG_TPPURCHASE,
           XL.NO_PO AS NO_PO,         
    	   XL.NO_POLINE AS NO_POLINE,
           XL.CD_EXCH,
           XL.RT_EXCH,
           IH.YN_RETURN,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.UM_EX ELSE XL.UM_EX END) AS UM_EX_CLS,
           (CASE WHEN IH.YN_RETURN = 'Y' THEN -XL.AM_EX ELSE XL.AM_EX END) AS AM_EX_CLS,                
           0 AS QT_CLS,
           NULL AS NO_LC,
           0 AS NO_LCLINE,
           0 AS SEQ_PROJECT,
           NULL AS NO_WBS,
           NULL AS NO_CBS,
           (CASE WHEN (ISNULL(IL.TP_UM_TAX, '002') = '002' OR LEN(IL.TP_UM_TAX) < 1) THEN '002' ELSE '001' END) AS TP_UM_TAX,
           'Z' AS TP_ORDER
    FROM MM_QTIO IL
    JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
    JOIN #XML XL ON XL.NO_IO = IH.NO_IO AND XL.NO_IOLINE = IL.NO_IOLINE
    LEFT JOIN PU_POL PL ON PL.CD_COMPANY = IL.CD_COMPANY AND PL.NO_PO = IL.NO_PSO_MGMT AND PL.NO_LINE = IL.NO_PSOLINE_MGMT
    LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
    LEFT JOIN MA_USER MU ON MU.CD_COMPANY = IH.CD_COMPANY AND MU.ID_USER = @P_ID_USER
    LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IL.CD_COMPANY AND MC.CD_FIELD = 'MA_B000046' AND MC.CD_SYSDEF = IL.FG_TAX
    LEFT JOIN MA_PURGRP PG ON PG.CD_COMPANY = PH.CD_COMPANY AND PG.CD_PURGRP = PH.CD_PURGRP
    WHERE IL.CD_COMPANY = @P_CD_COMPANY
    AND XL.QT_IV = 0
)
INSERT INTO PU_IVL                
(
    NO_IV,
    NO_LINE,
    CD_COMPANY,
    CD_PLANT,
    NO_IO,
    NO_IOLINE,
    CD_ITEM,                 
    CD_PURGRP,
    CD_CC,
    DT_TAX,
    QT_RCV_CLS,
    UM_ITEM_CLS,
    AM_CLS,
    VAT,
    NO_EMP,
    CD_PJT,                 
    FG_TPPURCHASE,
    NO_PO,
    NO_POLINE,
    CD_EXCH,
    RT_EXCH,
    YN_RETURN,
    UM_EX_CLS,
    AM_EX_CLS,                
    QT_CLS,
    NO_LC,
    NO_LCLINE,
    SEQ_PROJECT,
    NO_WBS,
    NO_CBS,
    TP_UM_TAX
)
SELECT IL.NO_IV,
       ROW_NUMBER() OVER(PARTITION BY IL.CD_COMPANY ORDER BY IL.NO_IO, IL.NO_IOLINE, IL.TP_ORDER ASC) AS NO_LINE,
       IL.CD_COMPANY,
       IL.CD_PLANT,
       IL.NO_IO,
       IL.NO_IOLINE,
       IL.CD_ITEM,
       IL.CD_PURGRP,
       IL.CD_CC,
       IL.DT_TAX,
       IL.QT_RCV_CLS,
       IL.UM_ITEM_CLS,
       IL.AM_CLS,
       IL.VAT,
       IL.NO_EMP,
       IL.CD_PJT,                 
       IL.FG_TPPURCHASE,
       IL.NO_PO,         
       IL.NO_POLINE,
       IL.CD_EXCH,
       IL.RT_EXCH,
       IL.YN_RETURN,
       IL.UM_EX_CLS,
       IL.AM_EX_CLS,                
       IL.QT_CLS,
       IL.NO_LC,
       IL.NO_LCLINE,
       IL.SEQ_PROJECT,
       IL.NO_WBS,
       IL.NO_CBS,
       IL.TP_UM_TAX
FROM A IL

SELECT @V_NO_IV

COMMIT TRAN SP_CZ_PU_IV_AUTO

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PU_IV_AUTO
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PU_IV_AUTO

GO