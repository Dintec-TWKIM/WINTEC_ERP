USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_IV_BASE_IOH_S]    Script Date: 2018-06-26 오후 2:13:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_SA_IV_BASE_IOH_S]  
(
    @P_CD_COMPANY			NVARCHAR(7),
	@P_DT_FROM				NVARCHAR(8),
	@P_DT_TO				NVARCHAR(8)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @P_AM_FSIZE		NUMERIC(3, 0)   -- 소수점

IF @P_CD_COMPANY = 'S100'
	SET @P_AM_FSIZE = 2
ELSE
	SET @P_AM_FSIZE = 0;

WITH A AS -- 프로젝트가 없는 청구등록 건
(
	SELECT SL.CD_COMPANY,
		   SL.NO_SO AS NO_PROJECT, 
		   SL.CD_PARTNER, 
		   SL.CD_CC, 
		   IL.NO_IO, 
		   IL.DT_IO,
		   MAX(IL.CD_CC) AS CD_CC_IV,
		   ROUND(SUM(ISNULL(SL.UM_SO, 0) * ISNULL(IL.QT_IV, 0)), @P_AM_FSIZE) AS AM_SO,
		   SUM(IL.AM_SA_IV) AS AM_SA_IV,
		   SUM(IL.AM_SA_CHARGE) AS AM_SA_CHARGE,
		   0 AS AM_PO,
		   0 AS AM_PU_IV,
		   0 AS AM_PU_CHARGE,
		   0 AS AM_STOCK
	FROM (SELECT SH.CD_COMPANY, SH.NO_SO, SL.SEQ_SO,
				 SH.CD_PARTNER, 
			     SG.CD_CC, 
			     SL.NO_PROJECT,
				 (ISNULL(SL.UM_SO, 0) * ISNULL(SH.RT_EXCH, 0)) AS UM_SO 
		  FROM SA_SOH SH 
		  LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
		  JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
		  WHERE SH.CD_COMPANY = @P_CD_COMPANY
		  AND ISNULL(SL.NO_PROJECT, '') = '') SL
	JOIN (SELECT IH.CD_COMPANY, IH.NO_IO, IH.DT_IO,
			     IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, 
				 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.QT_IV ELSE IL.QT_IV END) AS QT_IV,
				 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_IV ELSE IL.AM_SA_IV END) AS AM_SA_IV,
				 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_CHARGE ELSE IL.AM_SA_CHARGE END) AS AM_SA_CHARGE,
				 IL.CD_CC
		  FROM MM_QTIOH IH
		  JOIN (SELECT IL.CD_COMPANY, IL.NO_IO,
					   IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT,
					   MAX(IL.CD_CC) AS CD_CC,
				       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN IL.QT_IO ELSE 0 END) AS QT_IV,
				       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN IL.AM ELSE 0 END) AS AM_SA_IV,
				       SUM(CASE WHEN MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016' THEN IL.AM ELSE 0 END) AS AM_SA_CHARGE 
			    FROM MM_QTIO IL
			    LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
			    LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = MI.CD_COMPANY AND CD.CD_FIELD = 'MA_B000010' AND CD.CD_SYSDEF = MI.CLS_ITEM
                WHERE IL.YN_AM = 'Y'
			    GROUP BY IL.CD_COMPANY, IL.NO_IO,
					     IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL 
	      ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
	      WHERE IH.DT_IO BETWEEN @P_DT_FROM AND @P_DT_TO) IL 
	ON IL.CD_COMPANY = SL.CD_COMPANY AND IL.NO_PSO_MGMT = SL.NO_SO AND IL.NO_PSOLINE_MGMT = SL.SEQ_SO
	GROUP BY SL.CD_COMPANY, SL.NO_SO, SL.CD_PARTNER, SL.CD_CC, 
		     IL.NO_IO, IL.DT_IO
),
B AS -- 프로젝트가 있는 청구등록 건
(
	SELECT SL.CD_COMPANY,
		   SL.NO_PROJECT, 
		   SL.CD_PARTNER, 
		   SL.CD_CC, 
		   IL.NO_IO, 
		   IL.DT_IO,
		   MAX(IL.CD_CC) AS CD_CC_IV,
		   ROUND(SUM(ISNULL(SL.UM_SO, 0) * ISNULL(IL.QT_IV, 0)), @P_AM_FSIZE) AS AM_SO,
		   SUM(IL.AM_SA_IV) AS AM_SA_IV,
		   SUM(IL.AM_SA_CHARGE) AS AM_SA_CHARGE,
		   0 AS AM_PO,
		   0 AS AM_PU_IV,
		   0 AS AM_PU_CHARGE,
		   0 AS AM_STOCK
    FROM (SELECT SH.CD_COMPANY, SH.NO_SO, SL.SEQ_SO,
		  	     SH.CD_PARTNER, 
			     SG.CD_CC, 
			     SL.NO_PROJECT,
		  	     (ISNULL(SL.UM_SO, 0) * ISNULL(SH.RT_EXCH, 0)) AS UM_SO 
		  FROM SA_SOH SH 
		  LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
	      JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
		  WHERE SH.CD_COMPANY = @P_CD_COMPANY
		  AND NOT EXISTS (SELECT 1 
						  FROM CZ_SA_QTNH QH
						  WHERE QH.CD_COMPANY = SH.CD_COMPANY
						  AND QH.NO_FILE = SH.NO_SO)
		  AND ISNULL(SL.NO_PROJECT, '') <> '') SL
	JOIN (SELECT IH.CD_COMPANY, IH.NO_IO, IH.DT_IO,
				 IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, 
		  		 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.QT_IV ELSE IL.QT_IV END) AS QT_IV,
		  		 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_IV ELSE IL.AM_SA_IV END) AS AM_SA_IV,
		  		 (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_CHARGE ELSE IL.AM_SA_CHARGE END) AS AM_SA_CHARGE,
				 IL.CD_CC
		  FROM MM_QTIOH IH
		  JOIN (SELECT IL.CD_COMPANY, IL.NO_IO,
					   IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, 
					   MAX(IL.CD_CC) AS CD_CC,
		  		       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN IL.QT_IO ELSE 0 END) AS QT_IV,
		  		       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN IL.AM ELSE 0 END) AS AM_SA_IV,
		  		       SUM(CASE WHEN MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016' THEN IL.AM ELSE 0 END) AS AM_SA_CHARGE 
				FROM MM_QTIO IL
				LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
				LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = MI.CD_COMPANY AND CD.CD_FIELD = 'MA_B000010' AND CD.CD_SYSDEF = MI.CLS_ITEM
                WHERE IL.YN_AM = 'Y'
				GROUP BY IL.CD_COMPANY, IL.NO_IO,
					     IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL 
			ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
			WHERE IH.DT_IO BETWEEN @P_DT_FROM AND @P_DT_TO) IL 
	ON IL.CD_COMPANY = SL.CD_COMPANY AND IL.NO_PSO_MGMT = SL.NO_SO AND IL.NO_PSOLINE_MGMT = SL.SEQ_SO
    GROUP BY SL.CD_COMPANY, SL.NO_PROJECT, SL.CD_PARTNER, SL.CD_CC, 
			 IL.NO_IO, IL.DT_IO
),
C AS -- 수주등록 건 (지급등록 적용)
(
	SELECT SL.CD_COMPANY, 
		   SL.NO_PROJECT, 
		   SL.CD_PARTNER, 
		   SL.CD_CC, 
		   IL.NO_IO, 
		   IL.DT_IO,
		   MAX(IL.CD_CC) AS CD_CC_IV,
	  	   SUM(ISNULL(SL.UM_SO, 0) * ISNULL(IL.QT_IV, 0)) AS AM_SO,
	  	   SUM(IL.AM_SA_IV) AS AM_SA_IV,
	  	   SUM(IL.AM_SA_CHARGE) AS AM_SA_CHARGE,
	  	   ROUND(SUM((ISNULL(SL.UM_PO, 0) + ISNULL(PC.UM_PO, 0)) * ISNULL(IL.QT_GIR, 0)), @P_AM_FSIZE) AS AM_PO,
	  	   ROUND(SUM((ISNULL(SL.UM_PU_IV, 0) + ISNULL(PC.UM_IV, 0)) * ISNULL(IL.QT_GIR, 0)), @P_AM_FSIZE) AS AM_PU_IV,
	  	   ROUND(SUM(CASE WHEN ISNULL(PC.UM_CHARGE, 0) > 0 THEN ISNULL(PC.UM_CHARGE, 0) * ISNULL(IL.QT_GIR, 0)
														   ELSE (ISNULL(SL.UM_PO_CHARGE, 0) + ISNULL(PC.UM_PO_CHARGE, 0)) * ISNULL(IL.QT_GIR, 0) END), @P_AM_FSIZE) AS AM_PU_CHARGE,
	  	   SUM(ISNULL(SL.UM_STOCK, 0) * ISNULL(IL.QT_GIR_STOCK, 0)) AS AM_STOCK
	FROM (SELECT SH.CD_COMPANY, SH.NO_SO, SL.SEQ_SO,
	  			 SH.CD_PARTNER, 
				 SG.CD_CC, 
				 ISNULL(CH.NO_SO, SH.NO_PROJECT) AS NO_PROJECT,
	  			 SL.UM_KR_S AS UM_SO,
	  			 SB.UM_KR AS UM_STOCK,
	  			 (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 ELSE (ISNULL(PL.AM_PO, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_PO,
				 (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 ELSE (ISNULL(PL.AM_PO_CHARGE, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_PO_CHARGE,
	  			 (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 ELSE (ISNULL(PL.AM_IV, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_PU_IV
	  	  FROM SA_SOH SH
	  	  JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
		  LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
		  LEFT JOIN CZ_SA_CLAIMH CH ON CH.CD_COMPANY = SH.CD_COMPANY AND CH.NO_CLAIM = SH.NO_PROJECT
	  	  LEFT JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = SL.CD_COMPANY AND SB.NO_FILE = SL.NO_SO AND SB.NO_LINE = SL.SEQ_SO
	  	  LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE,
							SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN PL.AM ELSE 0 END) AS AM_PO,
			   		   		SUM(CASE WHEN MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016' THEN PL.AM ELSE 0 END) AS AM_PO_CHARGE,
	  						SUM(IL.AM_IV) AS AM_IV 
	  				 FROM PU_POL PL
	  				 LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_ITEM = PL.CD_ITEM
                     LEFT JOIN MM_EJTP EJ ON EJ.CD_COMPANY = PL.CD_COMPANY AND EJ.CD_QTIOTP = PL.FG_RCV
	  				 LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE,
									   SUM(CASE WHEN IL.YN_RETURN = 'Y' THEN -IL.AM_CLS ELSE IL.AM_CLS END) AS AM_IV
	  							FROM PU_IVL IL
	  							LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
	  							WHERE MI.CLS_ITEM <> '010' 
								AND MI.CLS_ITEM <> '016'
								GROUP BY IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE) IL
	  				 ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PO = PL.NO_PO AND IL.NO_POLINE = PL.NO_LINE
					 WHERE MI.CLS_ITEM <> '007'
                     AND EJ.YN_AM = 'Y'
	  				 GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE) PL
	  	  ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
	  	  WHERE SH.CD_COMPANY = @P_CD_COMPANY
		  AND EXISTS (SELECT 1 
					  FROM CZ_SA_QTNH QH
					  WHERE QH.CD_COMPANY = SH.CD_COMPANY 
					  AND QH.NO_FILE = SH.NO_SO)
	  	  AND ISNULL(SH.NO_PROJECT, '') <> '') SL
    JOIN (SELECT IH.CD_COMPANY, IH.NO_IO, IH.DT_IO,
		  	     IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT,
		  	     (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.QT_IV ELSE IL.QT_IV END) AS QT_IV,
		  	     (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_IV ELSE IL.AM_SA_IV END) AS AM_SA_IV,
		  	     (CASE WHEN IH.YN_RETURN = 'Y' THEN -IL.AM_SA_CHARGE ELSE IL.AM_SA_CHARGE END) AS AM_SA_CHARGE,
		  	     IL.QT_GIR, 
		  	     IL.QT_GIR_STOCK,
		  	     IL.CD_CC
		  FROM MM_QTIOH IH
		  JOIN (SELECT IL.CD_COMPANY, IL.NO_IO,
		  		       IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT, 
		  		       MAX(IL.CD_CC) AS CD_CC,
		  	           SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' AND IL.YN_AM = 'Y' THEN IL.QT_IO ELSE 0 END) AS QT_IV,
		  	           SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' AND IL.YN_AM = 'Y' THEN IL.AM ELSE 0 END) AS AM_SA_IV,
		  	           SUM(CASE WHEN MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016' AND IL.YN_AM = 'Y' THEN IL.AM ELSE 0 END) AS AM_SA_CHARGE,
		  		       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' AND IL.YN_AM = 'Y' THEN OL.QT_GIR ELSE 0 END) AS QT_GIR,
		  		       SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' AND IL.YN_AM = 'Y' THEN OL.QT_GIR_STOCK ELSE 0 END) AS QT_GIR_STOCK 
		       FROM MM_QTIO IL
		       LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
		       LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = MI.CD_COMPANY AND CD.CD_FIELD = 'MA_B000010' AND CD.CD_SYSDEF = MI.CLS_ITEM
		       LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_IO, OL.NO_IOLINE,
		    			         SUM(CASE WHEN OH.YN_RETURN = 'Y' THEN -GL.QT_GIR ELSE GL.QT_GIR END) AS QT_GIR,
		    			         SUM(CASE WHEN OH.YN_RETURN = 'Y' THEN -GL.QT_GIR ELSE GL.QT_GIR_STOCK END) AS QT_GIR_STOCK
		    		      FROM MM_QTIOH OH
		    		      JOIN MM_QTIO OL ON OL.CD_COMPANY = OH.CD_COMPANY AND OL.NO_IO = OH.NO_IO
		    		      JOIN (SELECT CD_COMPANY, NO_GIR, SEQ_GIR,
		    			   			   (ISNULL(QT_GIR, 0) - ISNULL(QT_GIR_STOCK, 0)) AS QT_GIR,
		    			   			   QT_GIR_STOCK 
		    			   	    FROM SA_GIRL) GL 
		    		      ON GL.CD_COMPANY = OL.CD_COMPANY AND GL.NO_GIR = OL.NO_ISURCV AND GL.SEQ_GIR = OL.NO_ISURCVLINE
		    		      GROUP BY OL.CD_COMPANY, OL.NO_IO, OL.NO_IOLINE) OL
		  	   ON OL.CD_COMPANY = IL.CD_COMPANY AND OL.NO_IO = IL.NO_IO AND OL.NO_IOLINE = IL.NO_IOLINE
		       WHERE IL.CD_QTIOTP NOT IN ('500', '983')
		  	   GROUP BY IL.CD_COMPANY, IL.NO_IO, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL 
		  ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO				
		  WHERE IH.DT_IO BETWEEN @P_DT_FROM AND @P_DT_TO) IL 
	ON IL.CD_COMPANY = SL.CD_COMPANY AND IL.NO_PSO_MGMT = SL.NO_SO AND IL.NO_PSOLINE_MGMT = SL.SEQ_SO
	LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
			   	      (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 
			   										     ELSE (ISNULL(IL.AM_CHARGE, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_CHARGE,
					  (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 
			   										     ELSE (ISNULL(PV.AM_PO, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_PO,
					  (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 
			   										     ELSE (ISNULL(PV.AM_PO_CHARGE, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_PO_CHARGE,
					  (CASE WHEN ISNULL(SL.QT_PO, 0) = 0 THEN 0 
			   										     ELSE (ISNULL(PV.AM_IV, 0) / ISNULL(SL.QT_PO, 0)) END) AS UM_IV
	    	   FROM (SELECT CD_COMPANY, NO_SO,
			   			    SUM(QT_PO) AS QT_PO 
			   	     FROM SA_SOL
			   	     GROUP BY CD_COMPANY, NO_SO) SL
			   LEFT JOIN (SELECT IL.CD_COMPANY, IL.CD_PJT,
	    	   			         SUM(CASE WHEN IL.YN_RETURN = 'Y' THEN -AM_CLS ELSE AM_CLS END) AS AM_CHARGE  
			   	          FROM PU_IVL IL
	    	   	          JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM  		  		   
	    	   	          WHERE (MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016')
						  AND EXISTS (SELECT 1 
									  FROM PU_POL PL
									  WHERE PL.CD_COMPANY = IL.CD_COMPANY
									  AND PL.NO_PO = IL.NO_PO
									  AND PL.NO_LINE = IL.NO_POLINE
									  AND PL.NO_SO IS NULL)
			   	          GROUP BY IL.CD_COMPANY, IL.CD_PJT) IL
			   ON IL.CD_COMPANY = SL.CD_COMPANY AND IL.CD_PJT = SL.NO_SO
			   LEFT JOIN (SELECT PL.CD_COMPANY, PL.CD_PJT,
			   		   		     SUM(CASE WHEN MI.CLS_ITEM <> '010' AND MI.CLS_ITEM <> '016' THEN PL.AM ELSE 0 END) AS AM_PO,
			   		   		     SUM(CASE WHEN MI.CLS_ITEM = '010' OR MI.CLS_ITEM = '016' THEN PL.AM ELSE 0 END) AS AM_PO_CHARGE,
			   		   		     SUM(IL.AM_IV) AS AM_IV
			   		      FROM PU_POL PL
			   		      LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_ITEM = PL.CD_ITEM
                          LEFT JOIN MM_EJTP EJ ON EJ.CD_COMPANY = PL.CD_COMPANY AND EJ.CD_QTIOTP = PL.FG_RCV
			   		      LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE,
			   		      				    SUM(CASE WHEN IL.YN_RETURN = 'Y' THEN -IL.AM_CLS ELSE IL.AM_CLS END) AS AM_IV
			   		      		     FROM PU_IVL IL
			   		      		     LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
			   		      			 WHERE MI.CLS_ITEM <> '010' 
			   		      			 AND MI.CLS_ITEM <> '016'
			   		      		     GROUP BY IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE) IL
			   		      ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PO = PL.NO_PO AND IL.NO_POLINE = PL.NO_LINE
			   		      WHERE PL.NO_SO IS NULL
						  AND MI.CLS_ITEM <> '007'
                          AND EJ.YN_AM = 'Y'
			   		      GROUP BY PL.CD_COMPANY, PL.CD_PJT) PV
			   ON PV.CD_COMPANY = SL.CD_COMPANY AND PV.CD_PJT = SL.NO_SO) PC
	  ON PC.CD_COMPANY = SL.CD_COMPANY AND PC.NO_SO = SL.NO_SO
	  GROUP BY SL.CD_COMPANY, SL.NO_PROJECT, SL.CD_PARTNER, SL.CD_CC, IL.NO_IO, IL.DT_IO
),
E AS
(
	SELECT *
	FROM (SELECT * FROM A
		  UNION ALL
		  SELECT * FROM B 
		  UNION ALL
		  SELECT * FROM C) SH
),
SH AS
(
	SELECT SH.CD_COMPANY,
		   SH.NO_PROJECT,
		   MAX(SH.CD_PARTNER) AS CD_PARTNER, 
		   MAX(SH.CD_CC) AS CD_CC, 
		   MAX(SH.NO_IO) AS NO_IO, 
		   MAX(SH.DT_IO) AS DT_IO,
		   MAX(SH.CD_CC_IV) AS CD_CC_IV,
		   COUNT(DISTINCT SH.NO_IO) AS QT_IV,
		   SUM(SH.AM_SO) AS AM_SO,
		   SUM(SH.AM_SA_IV) AS AM_SA_IV,
		   SUM(SH.AM_SA_CHARGE) AS AM_SA_CHARGE,
		   SUM(SH.AM_PO) AS AM_PO,
		   SUM(SH.AM_PU_IV) AS AM_PU_IV,
		   SUM(SH.AM_PU_CHARGE) AS AM_PU_CHARGE,
		   SUM(SH.AM_STOCK) AS AM_STOCK,
		   SUM(ISNULL(SH.AM_SA_IV, 0) + ISNULL(SH.AM_SA_CHARGE, 0)) AS AM_SA_TOTAL,
		   SUM(CASE WHEN ABS(ISNULL(SH.AM_PO, 0)) > ABS(ISNULL(SH.AM_PU_IV, 0) + ISNULL(SH.AM_PU_CHARGE, 0)) THEN (ISNULL(SH.AM_PO, 0) + ISNULL(SH.AM_STOCK, 0))
																							                 ELSE (ISNULL(SH.AM_PU_IV, 0) + ISNULL(SH.AM_PU_CHARGE, 0) + ISNULL(SH.AM_STOCK, 0)) END) AS AM_PU_TOTAL
	FROM E SH
	GROUP BY SH.CD_COMPANY, SH.NO_PROJECT
)
SELECT SH.CD_COMPANY,
	   SH.NO_PROJECT,
	   SH.NO_IO,
	   SH.QT_IV,
	   SH.CD_PARTNER,
	   MP.LN_PARTNER,
	   SH.DT_IO,
	   SH.CD_CC_IV,
	   SH.CD_CC,
	   MC.NM_CC,
	   SH.AM_SO,
	   SH.AM_SA_IV,
	   SH.AM_SA_CHARGE,
	   SH.AM_PO,
	   SH.AM_PU_IV,
	   SH.AM_PU_CHARGE,
	   SH.AM_STOCK,
	   SH.AM_SA_TOTAL,
	   SH.AM_PU_TOTAL,
	   (ISNULL(SH.AM_SA_TOTAL, 0) - ISNULL(SH.AM_PU_TOTAL, 0)) AS AM_PROFIT,
	   ROUND(CASE WHEN ISNULL(SH.AM_SA_TOTAL, 0) = 0 THEN 0
													 ELSE ((ISNULL(SH.AM_SA_TOTAL, 0) - ISNULL(SH.AM_PU_TOTAL, 0)) / ISNULL(SH.AM_SA_TOTAL, 0)) * 100 END, 2) AS RT_PROFIT
FROM SH
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = SH.CD_COMPANY AND MP.CD_PARTNER = SH.CD_PARTNER
LEFT JOIN MA_CC MC ON MC.CD_COMPANY = SH.CD_COMPANY AND MC.CD_CC = SH.CD_CC
OPTION(RECOMPILE)

GO

