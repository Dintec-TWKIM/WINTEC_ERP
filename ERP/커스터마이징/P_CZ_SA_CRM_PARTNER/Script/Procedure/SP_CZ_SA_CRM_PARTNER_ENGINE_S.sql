USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_CUST_REL_MNG_HULL_S]    Script Date: 2017-05-25 오전 10:04:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_SA_CRM_PARTNER_ENGINE_S]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_CD_PARTNER		NVARCHAR(20),
	@P_DT_START			NVARCHAR(8),
	@P_DT_END			NVARCHAR(8)
) 
AS
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT MH.NO_IMO,
	   MH.NO_HULL,
	   MH.NM_VESSEL,
	   MC4.NM_SYSDEF AS NM_ENGINE,
	   HE.NM_MODEL,
	   MC3.NM_SYSDEF AS NM_MAKER,
	   HE.CAPACITY,
	   HE.SERIAL,
	   MC.NM_SYSDEF AS NM_CLS_L,
	   MC1.NM_SYSDEF AS NM_CLS_M,
	   MC2.NM_SYSDEF AS NM_CLS_S,
	   1 AS QT_ENGINE,
	   QH.QT_QTN,
	   QH.QT_SO,
	   QH.AM_SO_QTN,
	   QH.AM_PO_QTN,
	   (ISNULL(QH.AM_SO_QTN, 0) - ISNULL(QH.AM_PO_QTN, 0)) AS AM_PROFIT_QTN,
	   QH.AM_SO,
	   QH.AM_PO,
	   QH.AM_STOCK,
	   (ISNULL(QH.AM_SO, 0) - (ISNULL(QH.AM_PO, 0) + ISNULL(QH.AM_STOCK, 0))) AS AM_PROFIT,
	   ROUND(CASE WHEN ISNULL(QH.QT_QTN, 0) = 0 THEN 0 
											    ELSE (ISNULL(QH.QT_SO, 0) / ISNULL(QH.QT_QTN, 0)) * 100 END, 2) AS RT_SO,
	   ROUND(CASE WHEN ISNULL(QH.AM_SO_QTN, 0) = 0 THEN 0 
											       ELSE ((ISNULL(QH.AM_SO_QTN, 0) - ISNULL(QH.AM_PO_QTN, 0)) / ISNULL(QH.AM_SO_QTN, 0)) * 100 END, 2) AS RT_PROFIT_QTN,
	   ROUND(CASE WHEN ISNULL(QH.AM_SO, 0) = 0 THEN 0 
											   ELSE ((ISNULL(QH.AM_SO, 0) - (ISNULL(QH.AM_PO, 0) + ISNULL(QH.AM_STOCK, 0))) / ISNULL(QH.AM_SO, 0)) * 100 END, 2) AS RT_PROFIT,
	   HE.DC_RMK
FROM CZ_MA_HULL MH
JOIN CZ_MA_HULL_ENGINE HE ON HE.NO_IMO = MH.NO_IMO
JOIN (SELECT QH.NO_IMO, QL.NO_ENGINE,
	  	     SUM(1.0) AS QT_QTN,
	  	     SUM(CASE WHEN SH.CD_COMPANY IS NULL THEN 0 ELSE 1.0 END) AS QT_SO,
	  	     SUM(QL.AM_SO_QTN) AS AM_SO_QTN,
	  	     SUM(QL.AM_PO_QTN) AS AM_PO_QTN,
	  	     SUM(QL.AM_SO) AS AM_SO,
	  	     SUM(QL.AM_PO) AS AM_PO,
	  	     SUM(QL.AM_STOCK) AS AM_STOCK
	  FROM CZ_SA_QTNH QH
	  LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = QH.CD_COMPANY AND SH.NO_SO = QH.NO_FILE
	  LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_FILE, QL.NO_ENGINE,
	  				    SUM(QL.AM_KR_S) AS AM_SO_QTN,
	  				    SUM(QL.AM_KR_P) AS AM_PO_QTN,
	  				    SUM(SL.AM_KR_S) AS AM_SO,
	  				    SUM(PL.AM_PO) AS AM_PO,
	  				    SUM(SB.AM_STOCK) AS AM_STOCK
	  		     FROM CZ_SA_QTNL QL
	  		     LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = QL.CD_COMPANY AND SL.NO_SO = QL.NO_FILE AND SL.SEQ_SO = QL.NO_LINE
	  		     LEFT JOIN (SELECT CD_COMPANY, NO_FILE, NO_LINE,
	  		     				   (ISNULL(UM_KR, 0) * ISNULL(QT_STOCK, 0)) AS AM_STOCK 
	  		     			FROM CZ_SA_STOCK_BOOK) SB 
	  		     ON SB.CD_COMPANY = SL.CD_COMPANY AND SB.NO_FILE = SL.NO_SO AND SB.NO_LINE = SL.SEQ_SO
	  		     LEFT JOIN (SELECT CD_COMPANY, NO_SO, NO_SOLINE,
	  		     				   SUM(AM) AS AM_PO 
	  		     			FROM PU_POL
	  		     			GROUP BY CD_COMPANY, NO_SO, NO_SOLINE) PL
	  		     ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
	  		     GROUP BY QL.CD_COMPANY, QL.NO_FILE, QL.NO_ENGINE) QL 
	  ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
	  WHERE QH.CD_COMPANY = @P_CD_COMPANY
	  AND QH.CD_PARTNER = @P_CD_PARTNER
	  AND QH.DT_QTN BETWEEN @P_DT_START AND @P_DT_END
	  GROUP BY QH.NO_IMO, QL.NO_ENGINE) QH
ON QH.NO_IMO = HE.NO_IMO AND QH.NO_ENGINE = HE.NO_ENGINE
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = @P_CD_COMPANY AND MC.CD_FIELD = 'MA_B000030' AND MC.CD_SYSDEF = HE.CLS_L
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = @P_CD_COMPANY AND MC1.CD_FIELD = 'MA_B000031' AND MC1.CD_SYSDEF = HE.CLS_M
LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = @P_CD_COMPANY AND MC2.CD_FIELD = 'MA_B000032' AND MC2.CD_SYSDEF = HE.CLS_S
LEFT JOIN MA_CODEDTL MC3 ON MC3.CD_COMPANY = @P_CD_COMPANY AND MC3.CD_FIELD = 'CZ_MA00003' AND MC3.CD_SYSDEF = HE.CD_MAKER
LEFT JOIN MA_CODEDTL MC4 ON MC4.CD_COMPANY = @P_CD_COMPANY AND MC4.CD_FIELD = 'CZ_MA00009' AND MC4.CD_SYSDEF = HE.CD_ENGINE

GO

