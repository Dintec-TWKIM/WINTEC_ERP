USE [NEOE]
GO

/****** Object:  Trigger [NEOE].[TU_MA_PARTNER]    Script Date: 2017-01-04 오전 11:00:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER TRIGGER [NEOE].[TU_MA_PARTNER] ON [NEOE].[MA_PARTNER]
FOR UPDATE
-- ================================================
-- AUTHOR      : 2008.04.16
-- CREATE DATE : 허성철
-- 
-- MODULE      : 시스템
-- SYSTEM      : 시스템관리
-- SUBSYSTEM   : 거래처정보
-- PAGE        : 거래처정보관리
-- PROJECT     : P_MA_PARTNER_SUB
-- DESCRIPTION : 
-- ================================================
-- CHANGE HISTORY
-- v1.0 : 2010.11.17 이대성 수정
-- D20160831045 : 2106.08.31 계좌자료 업데이트, 해당자료 변경일때만 업데이트되게 수정
-- ================================================
AS
SET NOCOUNT ON

DECLARE	@V_CD_COMPANY		NVARCHAR(7),
		@V_CD_PARTNER		NVARCHAR(20),
		@V_NO_COMPANY		NVARCHAR(20),
		@V_OLD_NO_COMPANY	NVARCHAR(20),
		@V_LN_PARTNER		NVARCHAR(50),
		@V_NM_CEO			NVARCHAR(20),
		@V_TP_JOB			NVARCHAR(50),
		@V_CLS_JOB			NVARCHAR(50),
		@V_DC_ADS			NVARCHAR(800),
		@V_SD_PARTNER		NCHAR(8),
		@V_NO_RES			NVARCHAR(200),
		@V_USE_YN			NCHAR(1),
		@V_NO_DEPOSIT		NVARCHAR(40),
		@V_CD_BANK			NVARCHAR(20),
		@V_NM_DEPOSIT		NVARCHAR(100),
		@V_ID_UPDATE		NVARCHAR(15),
		@V_DTS_UPDATE		VARCHAR(14),
		@V_YN_BIZTAX		NVARCHAR(1),	-- 2010.11.16 이대성 추가 : 사업자단위과세 여부
		@V_NO_BIZTAX		NVARCHAR(4),	-- 2010.11.16 이대성 추가 : 종사업장번호
		@V_YN_JEONJA		NVARCHAR(1),	-- 2010.11.16 이대성 추가 : 전자세금계산서발행여부
		@V_CD_DEPOSITNO		NVARCHAR(5),	-- 2010.12.01 이대성 추가 : 계좌번호코드
		@V_TP_PALCOHOLIC	NVARCHAR(3),
		
		@V_OLD_CD_EMP_SALE	NVARCHAR(10),	-- 2010.09.14 : 장은경
		@V_NEW_CD_EMP_SALE	NVARCHAR(10),	-- 2010.09.14 : 장은경
		@V_CD_DEPT			NVARCHAR(12),	-- 2010.09.14 : 장은경
		@V_YN_UNIFYORG		NVARCHAR(1),		-- 장은경 : 조직통합일때 영업담당자 선택시 거래처부가정보 영업그룹 셋팅
		@V_NO_DEPOSIT_OLD		NVARCHAR(40),
		@V_CD_BANK_OLD			NVARCHAR(20),
		@V_NM_DEPOSIT_OLD		NVARCHAR(100)


DECLARE CUR_TU_MA_PARTNER CURSOR FOR

SELECT	CD_COMPANY, CD_PARTNER, NO_COMPANY, (SELECT NO_COMPANY FROM DELETED WHERE CD_PARTNER = I.CD_PARTNER) OLD_NO_COMPANY,
		LN_PARTNER, NM_CEO, TP_JOB, CLS_JOB, ISNULL(DC_ADS1_H,'') + ISNULL(DC_ADS1_D,'') DC_ADS, SD_PARTNER, NO_RES, USE_YN, ID_UPDATE, DTS_UPDATE,
		NO_DEPOSIT, CD_BANK, NM_DEPOSIT, (SELECT CD_EMP_SALE FROM DELETED WHERE CD_PARTNER = I.CD_PARTNER) OLD_CD_EMP_SALE, CD_EMP_SALE,
		YN_BIZTAX, NO_BIZTAX, YN_JEONJA, TP_PALCOHOLIC,
		(SELECT NO_DEPOSIT FROM DELETED WHERE CD_PARTNER = I.CD_PARTNER) NO_DEPOSIT_OLD,
		(SELECT CD_BANK FROM DELETED WHERE CD_PARTNER = I.CD_PARTNER) CD_BANK_OLD,
		(SELECT NM_DEPOSIT FROM DELETED WHERE CD_PARTNER = I.CD_PARTNER) NM_DEPOSIT_OLD
FROM	INSERTED I

OPEN  CUR_TU_MA_PARTNER

FETCH NEXT FROM CUR_TU_MA_PARTNER INTO @V_CD_COMPANY, @V_CD_PARTNER, @V_NO_COMPANY, @V_OLD_NO_COMPANY, @V_LN_PARTNER,
@V_NM_CEO, @V_TP_JOB, @V_CLS_JOB, @V_DC_ADS, @V_SD_PARTNER, @V_NO_RES, @V_USE_YN, @V_ID_UPDATE, @V_DTS_UPDATE,
@V_NO_DEPOSIT, @V_CD_BANK, @V_NM_DEPOSIT, @V_OLD_CD_EMP_SALE, @V_NEW_CD_EMP_SALE, @V_YN_BIZTAX, @V_NO_BIZTAX, @V_YN_JEONJA, @V_TP_PALCOHOLIC,
@V_NO_DEPOSIT_OLD, @V_CD_BANK_OLD, @V_NM_DEPOSIT_OLD

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @V_YN_UNIFYORG = 'N'

	IF EXISTS (SELECT YN_UNIFYORG FROM MA_ENV WHERE CD_COMPANY = @V_CD_COMPANY AND YN_UNIFYORG = 'Y')
		SET @V_YN_UNIFYORG = 'Y'

	IF @V_OLD_NO_COMPANY IS NULL
		SET @V_OLD_NO_COMPANY = ''
	IF @V_NO_COMPANY IS NULL
		SET @V_NO_COMPANY = ''

	IF @V_OLD_NO_COMPANY <> @V_NO_COMPANY	-- 사업자번호가 변경되면 FI_PARTNO에 무조건 인서트
	BEGIN
		IF NOT EXISTS (SELECT * FROM FI_PARTNO WHERE CD_COMPANY = @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER AND NO_COMPANY = @V_NO_COMPANY)
		BEGIN
			INSERT INTO FI_PARTNO
			(
				NO_COMPANY, CD_PARTNER, CD_COMPANY, NM_PARTNER, NM_MASTER, TP_JOB, CLS_JOB, ADS_HD, DT_STANDARD,
				ST_PARTNER, ID_INSERT, DTS_INSERT, NO_RES, YN_BIZTAX, NO_BIZTAX, YN_JEONJA, TP_PALCOHOLIC
			)
			VALUES
			(
				@V_NO_COMPANY, @V_CD_PARTNER, @V_CD_COMPANY, @V_LN_PARTNER, @V_NM_CEO, @V_TP_JOB, @V_CLS_JOB, @V_DC_ADS, @V_SD_PARTNER,
				CASE WHEN @V_USE_YN = 'N' THEN '2' ELSE '1' END, @V_ID_UPDATE, @V_DTS_UPDATE, @V_NO_RES, @V_YN_BIZTAX, @V_NO_BIZTAX, @V_YN_JEONJA, @V_TP_PALCOHOLIC
			)
		END
	END
	ELSE
	BEGIN
		UPDATE  FI_PARTNO
		SET 	NM_PARTNER = @V_LN_PARTNER,
				NM_MASTER = @V_NM_CEO,
				TP_JOB = @V_TP_JOB,
				CLS_JOB = @V_CLS_JOB,
				ADS_HD = @V_DC_ADS,
				DT_STANDARD	= @V_SD_PARTNER,
				NO_RES = @V_NO_RES,
				ST_PARTNER = CASE WHEN @V_USE_YN = 'N' THEN '2' ELSE '1' END,
				ID_UPDATE = @V_ID_UPDATE,
				DTS_UPDATE = @V_DTS_UPDATE,
				YN_BIZTAX = @V_YN_BIZTAX,
				NO_BIZTAX = @V_NO_BIZTAX,
				YN_JEONJA = @V_YN_JEONJA,
				TP_PALCOHOLIC = @V_TP_PALCOHOLIC
		WHERE	CD_COMPANY = @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER AND NO_COMPANY = @V_NO_COMPANY
	END
	
	IF ISNULL(@V_NO_DEPOSIT, '') <> '' AND ISNULL(@V_CD_BANK, '') <> ''
	BEGIN
		---- 2010.12.01 이대성 추가 : 동일한 거래처에 계좌코드번호 MAX 값 구하기
		--SELECT	@V_CD_DEPOSITNO = MAX(CD_DEPOSITNO) + 1
		--FROM	MA_PARTNER_DEPOSIT
		--WHERE	CD_COMPANY = @V_CD_COMPANY
		--AND		CD_PARTNER = @V_CD_PARTNER
		
		IF NOT EXISTS(SELECT * FROM MA_PARTNER_DEPOSIT WHERE CD_COMPANY = @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER AND NO_DEPOSIT = @V_NO_DEPOSIT)
		BEGIN
		
			-- 2010.12.01 이대성 추가 : 동일한 거래처에 계좌코드번호 MAX 값 구하기
			SELECT	@V_CD_DEPOSITNO = MAX(CD_DEPOSITNO) + 1
			FROM	MA_PARTNER_DEPOSIT
			WHERE	CD_COMPANY = @V_CD_COMPANY
			AND		CD_PARTNER = @V_CD_PARTNER
			
			UPDATE	MA_PARTNER_DEPOSIT
			SET		USE_YN = 'N'
			WHERE	CD_COMPANY = @V_CD_COMPANY
			AND		CD_PARTNER = @V_CD_PARTNER
			
			INSERT INTO MA_PARTNER_DEPOSIT (CD_COMPANY,	CD_PARTNER,	NO_DEPOSIT, CD_BANK, USE_YN, HELP_USE, NM_DEPOSIT, ID_INSERT, DT_INSERT, CD_DEPOSITNO)
			VALUES (@V_CD_COMPANY, @V_CD_PARTNER, @V_NO_DEPOSIT, @V_CD_BANK, 'Y', 'Y', @V_NM_DEPOSIT, @V_ID_UPDATE, @V_DTS_UPDATE, ISNULL(@V_CD_DEPOSITNO, '11'))
		END
		-- 20160831 계좌자료가 변경되었을때만 업데이트 실행
		ELSE IF @V_NO_DEPOSIT <> @V_NO_DEPOSIT_OLD OR @V_CD_BANK <> @V_CD_BANK_OLD OR @V_NM_DEPOSIT <> @V_NM_DEPOSIT_OLD
		BEGIN
			UPDATE	MA_PARTNER_DEPOSIT
			SET		USE_YN = 'N'
			WHERE	CD_COMPANY = @V_CD_COMPANY
			AND		CD_PARTNER = @V_CD_PARTNER AND USE_YN = 'Y'
			
			UPDATE	MA_PARTNER_DEPOSIT
			SET		USE_YN = 'Y',
					CD_BANK = @V_CD_BANK,
					NM_DEPOSIT = @V_NM_DEPOSIT,
					ID_UPDATE = @V_ID_UPDATE,
					DT_UPDATE = @V_DTS_UPDATE
					--CD_DEPOSITNO = ISNULL(@V_CD_DEPOSITNO, '11')
			WHERE	CD_COMPANY = @V_CD_COMPANY
			AND		CD_PARTNER = @V_CD_PARTNER
			AND		NO_DEPOSIT = @V_NO_DEPOSIT
		END
	END
	
	-- 장은경 2010.09.14
	-- 영업담당자를 선택할 경우 거래처부가정보 테이블의 영업그룹에 영업담당자의 부서를 넣어준다
	IF @V_YN_UNIFYORG = 'Y' AND ISNULL(@V_OLD_CD_EMP_SALE, '') <> ISNULL(@V_NEW_CD_EMP_SALE, '')
	BEGIN
		SET @V_CD_DEPT = ''
		
		SELECT	@V_CD_DEPT = E.CD_DEPT
		FROM	MA_EMP E
		INNER JOIN MA_DEPT DE
		ON		E.CD_COMPANY = DE.CD_COMPANY AND E.CD_DEPT = DE.CD_DEPT
		INNER JOIN MA_SALEGRP G
		ON		E.CD_COMPANY = G.CD_COMPANY AND E.CD_DEPT = G.CD_SALEGRP
		WHERE	E.CD_COMPANY = @V_CD_COMPANY AND E.NO_EMP = @V_NEW_CD_EMP_SALE
		
		IF NOT EXISTS (SELECT 1 FROM MA_PARTNER_SUB WHERE CD_COMPANY = @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER)
		BEGIN
			INSERT INTO MA_PARTNER_SUB (CD_COMPANY, CD_PARTNER, CD_SALEGRP)
			VALUES (@V_CD_COMPANY, @V_CD_PARTNER, @V_CD_DEPT)
		END
		ELSE
		BEGIN
			UPDATE	MA_PARTNER_SUB
			SET		CD_SALEGRP	= @V_CD_DEPT
			WHERE	CD_COMPANY	= @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER
		END
	END
	
	--박진호
	--2015.12.18 그룹웨어 DATA연동을 위한 UPDATE날짜 등록
	--PIMS: D20161111044 한용일주임(2016.11.11)통화-> 실제사용업체 발생시 연락 주기로함(주석처리)
	--UPDATE MA_PARTNER
	--SET GW_UPDATE_TIME = GETDATE()
	--WHERE CD_COMPANY = @V_CD_COMPANY AND CD_PARTNER = @V_CD_PARTNER
	
	FETCH NEXT FROM CUR_TU_MA_PARTNER INTO @V_CD_COMPANY, @V_CD_PARTNER, @V_NO_COMPANY, @V_OLD_NO_COMPANY, @V_LN_PARTNER,
	@V_NM_CEO, @V_TP_JOB, @V_CLS_JOB, @V_DC_ADS, @V_SD_PARTNER, @V_NO_RES, @V_USE_YN, @V_ID_UPDATE, @V_DTS_UPDATE,
	@V_NO_DEPOSIT, @V_CD_BANK, @V_NM_DEPOSIT, @V_OLD_CD_EMP_SALE, @V_NEW_CD_EMP_SALE, @V_YN_BIZTAX, @V_NO_BIZTAX, @V_YN_JEONJA, @V_TP_PALCOHOLIC,
	@V_NO_DEPOSIT_OLD, @V_CD_BANK_OLD, @V_NM_DEPOSIT_OLD
END

CLOSE CUR_TU_MA_PARTNER
DEALLOCATE CUR_TU_MA_PARTNER

SET NOCOUNT OFF
GO

