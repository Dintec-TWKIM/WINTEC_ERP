USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MA_PITEM_XML]    Script Date: 2016-06-28 오후 1:28:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_MA_PITEM_XML] 
(
	@P_XML			XML, 
	@P_ID_USER		NVARCHAR(10), 
    @DOC			INT = NULL
) 
AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

EXEC SP_XML_PREPAREDOCUMENT @DOC OUTPUT, @P_XML 

-- ================================================== DELETE
DELETE A 
FROM MA_PITEM A 
JOIN OPENXML (@DOC, '/XML/D', 2) 
        WITH (CD_COMPANY	NVARCHAR(7),
			  CD_PLANT		NVARCHAR(7),
			  CD_ITEM		NVARCHAR(20)) B 
ON A.CD_COMPANY = B.CD_COMPANY
AND A.CD_PLANT = B.CD_PLANT
AND A.CD_ITEM = B.CD_ITEM

DELETE A 
FROM CZ_MA_PITEM_FILE A 
JOIN OPENXML (@DOC, '/XML/D', 2) 
        WITH (CD_COMPANY	NVARCHAR(7),
			  CD_PLANT		NVARCHAR(7),
			  CD_ITEM		NVARCHAR(20)) B 
ON A.CD_COMPANY = B.CD_COMPANY
AND A.CD_PLANT = B.CD_PLANT
AND A.CD_ITEM = B.CD_ITEM
-- ================================================== INSERT
INSERT INTO MA_PITEM 
(
	CD_COMPANY,
	CD_BIZAREA,
	CD_PLANT,
	CD_ITEM,
	NM_ITEM, 
	CD_ITEM_PARTNER,
	NM_ITEM_PARTNER,
	STND_DETAIL_ITEM,
	UCODE2,
	STND_ITEM, 
	MAT_ITEM, 
	DC_OFFER,
	NO_STND, 
	CLS_ITEM,
	UNIT_IM,
	UNIT_SO,
	UNIT_PO,
	UNIT_GI,
	UNIT_MO,
	GRP_ITEM, 
	GRP_MFG, 
	WEIGHT, 
	FG_ABC, 
	CD_ZONE,  
	STAND_PRC, 
	CLS_L, 
	CLS_M, 
	CLS_S, 
	YN_USE,
	DC_RMK,
	DC_RMK1,
	DC_RMK2,
	PARTNER,
	CD_PARTNER1,
	CD_PARTNER2,
	TP_PROC,
	TP_ITEM,
	TP_PART,
	FG_GIR,
	DT_VALID,
	QT_SSTOCK, 
	LT_SAFE, 
	YN_PHANTOM,  
	FG_LONG, 
	LT_ITEM,
	CLS_PO,
	LOTSIZE,
	CD_SL,
	CD_GISL,
	DC_IMAGE1,
	DC_IMAGE2,
	DC_IMAGE3,
	DC_IMAGE4,
	DC_IMAGE5,
	DC_IMAGE6,
	DC_KEYWORD,
	DC_KEYWORD_WE,
	DC_KEYWORD_CO,
	DC_KEYWORD_EX1,
	DC_KEYWORD_EX2,
	DC_MODEL,
	KCODE2,
	YN_MGMT,
	DC_RMK3,
	QT_MIN,
	YN_MATCH,
	DC_RMK4,
	ID_INSERT,
	DTS_INSERT
)
SELECT CD_COMPANY,
	   CD_BIZAREA,
	   CD_PLANT,
	   CD_ITEM,
	   NM_ITEM, 
	   CD_ITEM_PARTNER,
	   NM_ITEM_PARTNER,
	   STND_DETAIL_ITEM, 
	   REPLACE(UCODE2, CHAR(10), CHAR(13) + CHAR(10)) AS UCODE2,
	   STND_ITEM, 
	   MAT_ITEM, 
	   DC_OFFER,
	   NO_STND, 
	   CLS_ITEM,
	   UNIT_IM,
	   UNIT_IM,
	   UNIT_IM,
	   UNIT_IM,
	   UNIT_IM, 
	   GRP_ITEM, 
	   GRP_MFG, 
	   WEIGHT, 
	   FG_ABC, 
	   CD_ZONE,  
	   STAND_PRC, 
	   CLS_L, 
	   CLS_M, 
	   CLS_S, 
	   YN_USE,
	   REPLACE(DC_RMK, CHAR(10), CHAR(13) + CHAR(10)) AS DC_RMK,
	   REPLACE(DC_RMK1, CHAR(10), CHAR(13) + CHAR(10)) AS DC_RMK1,
	   REPLACE(DC_RMK2, CHAR(10), CHAR(13) + CHAR(10)) AS DC_RMK2,
	   PARTNER,
	   CD_PARTNER1,
	   CD_PARTNER2,
	   TP_PROC,
	   TP_ITEM,
	   TP_PART,
	   FG_GIR,
	   DT_VALID,
	   QT_SSTOCK, 
	   LT_SAFE, 
	   YN_PHANTOM,  
	   FG_LONG, 
	   LT_ITEM,
	   CLS_PO,
	   LOTSIZE,
	   CD_SL,
	   CD_GISL,
	   DC_IMAGE1,
	   DC_IMAGE2,
	   DC_IMAGE3,
	   DC_IMAGE4,
	   DC_IMAGE5,
	   DC_IMAGE6,
	   REPLACE(DC_KEYWORD, CHAR(10), '') AS DC_KEYWORD,
	   DC_KEYWORD_WE,
	   DC_KEYWORD_CO,
	   DC_KEYWORD_EX1,
	   DC_KEYWORD_EX2,
	   DC_MODEL,
	   KCODE2,
	   YN_MGMT,
	   REPLACE(DC_RMK3, CHAR(10), CHAR(13) + CHAR(10)) AS DC_RMK3,
	   QT_MIN,
	   YN_MATCH,
	   DC_RMK4,
	   @P_ID_USER,
	   NEOE.SF_SYSDATE(GETDATE())
  FROM OPENXML (@DOC, '/XML/I', 2) 
          WITH (CD_COMPANY			NVARCHAR(7),
				CD_BIZAREA			NVARCHAR(7),
				CD_PLANT			NVARCHAR(7),
				CD_ITEM				NVARCHAR(20),
				NM_ITEM				NVARCHAR(MAX),
				CD_ITEM_PARTNER		NVARCHAR(30),
				NM_ITEM_PARTNER		NVARCHAR(MAX),
				STND_DETAIL_ITEM	NVARCHAR(MAX),
				UCODE2			    NVARCHAR(MAX),
				STND_ITEM			NVARCHAR(MAX),
				MAT_ITEM			NVARCHAR(MAX),
				DC_OFFER			NVARCHAR(MAX),
				NO_STND				NVARCHAR(MAX),
				CLS_ITEM			NVARCHAR(3),
				UNIT_IM				NVARCHAR(3),
				GRP_ITEM			NVARCHAR(20),
				GRP_MFG				NVARCHAR(4),
				WEIGHT				NUMERIC(21, 6),
				FG_ABC				NCHAR(1),
				CD_ZONE				NVARCHAR(20),        
				STAND_PRC			NUMERIC(15, 4),
				CLS_L				NVARCHAR(4),
				CLS_M				NVARCHAR(4),
				CLS_S				NVARCHAR(4),
				YN_USE				NCHAR(1),
				DC_RMK				NVARCHAR(MAX),
				DC_RMK1				NVARCHAR(MAX),
				DC_RMK2				NVARCHAR(MAX),
				PARTNER				NVARCHAR(20),
				CD_PARTNER1			NVARCHAR(20),
				CD_PARTNER2			NVARCHAR(20),
				TP_PROC				NVARCHAR(3),
				TP_ITEM				NVARCHAR(3),
				TP_PART				NCHAR(1),
				FG_GIR				NCHAR(1),
				DT_VALID			NCHAR(8),
				QT_SSTOCK			NUMERIC(17, 4),
				LT_SAFE				NUMERIC(3, 0),
				YN_PHANTOM			NCHAR(1),  
				FG_LONG				NCHAR(1),
				LT_ITEM				NUMERIC(3, 0),
				CLS_PO				NVARCHAR(3),
				LOTSIZE				NUMERIC(17, 4),
				CD_SL				NVARCHAR(7),
				CD_GISL				NVARCHAR(7),
				DC_IMAGE1			NVARCHAR(MAX),
				DC_IMAGE2			NVARCHAR(MAX),
				DC_IMAGE3			NVARCHAR(MAX),
				DC_IMAGE4			NVARCHAR(MAX),
				DC_IMAGE5			NVARCHAR(MAX),
				DC_IMAGE6			NVARCHAR(MAX),
				DC_KEYWORD			NVARCHAR(MAX),
				DC_KEYWORD_WE		NVARCHAR(MAX),
				DC_KEYWORD_CO		NVARCHAR(MAX),
				DC_KEYWORD_EX1		NVARCHAR(MAX),
				DC_KEYWORD_EX2		NVARCHAR(MAX),
				DC_MODEL			NVARCHAR(MAX),
				KCODE2				NVARCHAR(MAX),
				YN_MGMT				NVARCHAR(1),
				DC_RMK3				NVARCHAR(MAX),
				QT_MIN				NUMERIC(17, 4),
				YN_MATCH			NVARCHAR(1),
				DC_RMK4				NVARCHAR(200));

MERGE INTO CZ_MA_PITEM_FILE AS T
	  USING (SELECT CD_COMPANY,
					CD_PLANT,
					CD_ITEM,
					DC_IMAGE1,
					DC_IMAGE2,
					DC_IMAGE3,
					DC_IMAGE4,
					DC_IMAGE5,
					DC_IMAGE6,
					DC_IMAGE7,
					YN_MAIN
	         FROM OPENXML (@DOC, '/XML/I', 2) 
				  WITH (CD_COMPANY		NVARCHAR(7),
						CD_PLANT		NVARCHAR(7),
				        CD_ITEM			NVARCHAR(20),
				        DC_IMAGE1		NVARCHAR(MAX),
						DC_IMAGE2		NVARCHAR(MAX),
						DC_IMAGE3		NVARCHAR(MAX),
						DC_IMAGE4		NVARCHAR(MAX),
						DC_IMAGE5		NVARCHAR(MAX),
						DC_IMAGE6		NVARCHAR(MAX),
						DC_IMAGE7		NVARCHAR(MAX),
						YN_MAIN			NVARCHAR(1))
			 WHERE (DC_IMAGE1 IS NOT NULL OR
				    DC_IMAGE2 IS NOT NULL OR
					DC_IMAGE3 IS NOT NULL OR
					DC_IMAGE4 IS NOT NULL OR
					DC_IMAGE5 IS NOT NULL OR
					DC_IMAGE6 IS NOT NULL OR
					DC_IMAGE7 IS NOT NULL OR
					YN_MAIN IS NOT NULL)) AS S
	  ON T.CD_COMPANY = S.CD_COMPANY
	  AND T.CD_PLANT = S.CD_PLANT
	  AND T.CD_ITEM = S.CD_ITEM
	  WHEN MATCHED THEN
		UPDATE SET T.DC_IMAGE1 = S.DC_IMAGE1,
				   T.DC_IMAGE2 = S.DC_IMAGE2,
				   T.DC_IMAGE3 = S.DC_IMAGE3,
				   T.DC_IMAGE4 = S.DC_IMAGE4,
				   T.DC_IMAGE5 = S.DC_IMAGE5,
				   T.DC_IMAGE6 = S.DC_IMAGE6,
				   T.DC_IMAGE7 = S.DC_IMAGE7,
				   T.YN_MAIN = S.YN_MAIN,
				   T.ID_UPDATE = @P_ID_USER,
				   T.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	  WHEN NOT MATCHED THEN
		INSERT (CD_COMPANY,
				CD_PLANT,
				CD_ITEM,
				DC_IMAGE1,
				DC_IMAGE2,
				DC_IMAGE3,
				DC_IMAGE4,
				DC_IMAGE5,
				DC_IMAGE6,
				DC_IMAGE7,
				YN_MAIN,
				ID_INSERT,
				DTS_INSERT) 
		VALUES (S.CD_COMPANY,
				S.CD_PLANT,
				S.CD_ITEM,
				S.DC_IMAGE1,
				S.DC_IMAGE2,
				S.DC_IMAGE3,
				S.DC_IMAGE4,
				S.DC_IMAGE5,
				S.DC_IMAGE6,
				S.DC_IMAGE7,
				S.YN_MAIN,
				@P_ID_USER,
				NEOE.SF_SYSDATE(GETDATE()));

-- ================================================== UPDATE    
UPDATE A 
   SET A.NM_ITEM = B.NM_ITEM,
	   A.CD_ITEM_PARTNER = B.CD_ITEM_PARTNER,
	   A.NM_ITEM_PARTNER = B.NM_ITEM_PARTNER,
	   A.STND_DETAIL_ITEM = B.STND_DETAIL_ITEM,
	   A.UCODE2 = REPLACE(B.UCODE2, CHAR(10), CHAR(13) + CHAR(10)),
	   A.STND_ITEM = B.STND_ITEM,
	   A.MAT_ITEM = B.MAT_ITEM,
	   A.DC_OFFER = B.DC_OFFER, 
	   A.NO_STND = B.NO_STND,
	   A.CLS_ITEM = B.CLS_ITEM,
	   A.UNIT_IM = B.UNIT_IM,  
	   A.UNIT_SO = B.UNIT_IM,
	   A.UNIT_PO = B.UNIT_IM,
	   A.UNIT_GI = B.UNIT_IM,
	   A.UNIT_MO = B.UNIT_IM,
	   A.GRP_ITEM = B.GRP_ITEM,
	   A.GRP_MFG = B.GRP_MFG,
	   A.WEIGHT = B.WEIGHT,
	   A.FG_ABC = B.FG_ABC,
	   A.CD_ZONE = B.CD_ZONE,     
	   A.STAND_PRC = B.STAND_PRC,
	   A.CLS_L = B.CLS_L,
	   A.CLS_M = B.CLS_M,
	   A.CLS_S = B.CLS_S,
	   A.YN_USE = B.YN_USE,
	   A.PARTNER = B.PARTNER,
	   A.CD_PARTNER1 = B.CD_PARTNER1,
	   A.CD_PARTNER2 = B.CD_PARTNER2,
	   A.TP_PROC = B.TP_PROC,
	   A.TP_ITEM = B.TP_ITEM,
	   A.TP_PART = B.TP_PART,
	   A.FG_GIR = B.FG_GIR,
	   A.DT_VALID = B.DT_VALID,
	   A.QT_SSTOCK = B.QT_SSTOCK,
	   A.LT_SAFE = B.LT_SAFE,
	   A.YN_PHANTOM = B.YN_PHANTOM,  
	   A.FG_LONG = B.FG_LONG,
	   A.LT_ITEM = B.LT_ITEM,
	   A.CLS_PO = B.CLS_PO,
	   A.LOTSIZE = B.LOTSIZE,
	   A.CD_SL = B.CD_SL,
	   A.CD_GISL = B.CD_GISL,  
	   A.DC_IMAGE1 = B.DC_IMAGE1,
	   A.DC_IMAGE2 = B.DC_IMAGE2,
	   A.DC_IMAGE3 = B.DC_IMAGE3,
	   A.DC_IMAGE4 = B.DC_IMAGE4,
	   A.DC_IMAGE5 = B.DC_IMAGE5,
	   A.DC_IMAGE6 = B.DC_IMAGE6,
	   A.DC_RMK = REPLACE(B.DC_RMK, CHAR(10), CHAR(13) + CHAR(10)),
	   A.DC_RMK1 = REPLACE(B.DC_RMK1, CHAR(10), CHAR(13) + CHAR(10)),
	   A.DC_RMK2 = REPLACE(B.DC_RMK2, CHAR(10), CHAR(13) + CHAR(10)),
	   A.DC_KEYWORD = REPLACE(B.DC_KEYWORD, CHAR(10), ''),
	   A.DC_KEYWORD_WE = B.DC_KEYWORD_WE,
	   A.DC_KEYWORD_CO = B.DC_KEYWORD_CO,
	   A.DC_KEYWORD_EX1 = B.DC_KEYWORD_EX1,
	   A.DC_KEYWORD_EX2 = B.DC_KEYWORD_EX2,
	   A.DC_MODEL = B.DC_MODEL,
	   A.KCODE2 = B.KCODE2,
	   A.YN_MGMT = B.YN_MGMT,
	   A.DC_RMK3 = REPLACE(B.DC_RMK3, CHAR(10), CHAR(13) + CHAR(10)),
	   A.QT_MIN = B.QT_MIN,
	   A.YN_MATCH = B.YN_MATCH,
	   A.DC_RMK4 = B.DC_RMK4,
	   A.ID_UPDATE = @P_ID_USER, 
	   A.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
  FROM MA_PITEM A 
  JOIN OPENXML (@DOC, '/XML/U', 2) 
          WITH (CD_COMPANY			NVARCHAR(7),
				CD_PLANT			NVARCHAR(7),
				CD_ITEM				NVARCHAR(20),
				NM_ITEM				NVARCHAR(MAX),
				CD_ITEM_PARTNER		NVARCHAR(30),
				NM_ITEM_PARTNER		NVARCHAR(MAX),
				STND_DETAIL_ITEM	NVARCHAR(MAX),
				UCODE2			    NVARCHAR(MAX),
				STND_ITEM			NVARCHAR(MAX),
				MAT_ITEM			NVARCHAR(MAX),
				DC_OFFER			NVARCHAR(MAX),
				NO_STND				NVARCHAR(MAX),
				CLS_ITEM			NVARCHAR(3),
				UNIT_IM				NVARCHAR(3),
				GRP_ITEM			NVARCHAR(20),
				GRP_MFG				NVARCHAR(4),
				WEIGHT				NUMERIC(21, 6),
				FG_ABC				NCHAR(1),
				CD_ZONE				NVARCHAR(20),        
				STAND_PRC			NUMERIC(15, 4),
				CLS_L				NVARCHAR(4),
				CLS_M				NVARCHAR(4),
				CLS_S				NVARCHAR(4),
				YN_USE				NCHAR(1),
				DC_RMK				NVARCHAR(MAX),
				DC_RMK1				NVARCHAR(MAX),
				DC_RMK2				NVARCHAR(MAX),
				PARTNER				NVARCHAR(20),
				CD_PARTNER1			NVARCHAR(20),
				CD_PARTNER2			NVARCHAR(20),
				TP_PROC				NVARCHAR(3),
				TP_ITEM				NVARCHAR(3),
				TP_PART				NCHAR(1),
				FG_GIR				NCHAR(1),
				DT_VALID			NCHAR(8),
				QT_SSTOCK			NUMERIC(17, 4),
				LT_SAFE				NUMERIC(3, 0),
				YN_PHANTOM			NCHAR(1),  
				FG_LONG				NCHAR(1),
				LT_ITEM				NUMERIC(3, 0),
				CLS_PO				NVARCHAR(3),
				LOTSIZE				NUMERIC(17, 4),
				CD_SL				NVARCHAR(7),
				CD_GISL				NVARCHAR(7),
				DC_IMAGE1			NVARCHAR(MAX),
				DC_IMAGE2			NVARCHAR(MAX),
				DC_IMAGE3			NVARCHAR(MAX),
				DC_IMAGE4			NVARCHAR(MAX),
				DC_IMAGE5			NVARCHAR(MAX),
				DC_IMAGE6			NVARCHAR(MAX),
				DC_KEYWORD			NVARCHAR(MAX),
				DC_KEYWORD_WE		NVARCHAR(MAX),
				DC_KEYWORD_CO		NVARCHAR(MAX),
				DC_KEYWORD_EX1		NVARCHAR(MAX),
				DC_KEYWORD_EX2		NVARCHAR(MAX),
				DC_MODEL			NVARCHAR(MAX),
				KCODE2				NVARCHAR(MAX),
				YN_MGMT				NVARCHAR(1),
				DC_RMK3				NVARCHAR(MAX),
				QT_MIN				NUMERIC(17, 4),
				YN_MATCH			NVARCHAR(1),
				DC_RMK4				NVARCHAR(200)) B 
  ON A.CD_COMPANY = B.CD_COMPANY
  AND A.CD_PLANT = B.CD_PLANT
  AND A.CD_ITEM = B.CD_ITEM; 

UPDATE A
SET A.TP_ITEM = B.TP_ITEM,
	A.YN_MATCH = B.YN_MATCH,
	A.YN_USE = B.YN_USE
FROM CZ_DX_PITEM_KEY3 A
JOIN OPENXML (@DOC, '/XML/U', 2) 
        WITH (CD_COMPANY			NVARCHAR(7),
			  CD_ITEM				NVARCHAR(20),
			  NM_ITEM				NVARCHAR(MAX),
			  YN_USE				NCHAR(1),
			  TP_ITEM				NVARCHAR(3),
			  YN_MATCH				NVARCHAR(1)) B 
ON A.CD_COMPANY = B.CD_COMPANY
AND A.CD_ITEM = B.CD_ITEM; 

MERGE INTO CZ_MA_PITEM_FILE AS T
	  USING (SELECT CD_COMPANY,
					CD_PLANT,
					CD_ITEM,
					DC_IMAGE1,
					DC_IMAGE2,
					DC_IMAGE3,
					DC_IMAGE4,
					DC_IMAGE5,
					DC_IMAGE6,
					DC_IMAGE7,
					YN_MAIN
	         FROM OPENXML (@DOC, '/XML/U', 2) 
				  WITH (CD_COMPANY		NVARCHAR(7),
						CD_PLANT		NVARCHAR(7),
				        CD_ITEM			NVARCHAR(20),
				        DC_IMAGE1		NVARCHAR(MAX),
						DC_IMAGE2		NVARCHAR(MAX),
						DC_IMAGE3		NVARCHAR(MAX),
						DC_IMAGE4		NVARCHAR(MAX),
						DC_IMAGE5		NVARCHAR(MAX),
						DC_IMAGE6		NVARCHAR(MAX),
						DC_IMAGE7		NVARCHAR(MAX),
						YN_MAIN			NVARCHAR(1))
			 WHERE (DC_IMAGE1 IS NOT NULL OR
				    DC_IMAGE2 IS NOT NULL OR
				    DC_IMAGE3 IS NOT NULL OR
				    DC_IMAGE4 IS NOT NULL OR
				    DC_IMAGE5 IS NOT NULL OR
				    DC_IMAGE6 IS NOT NULL OR
				    DC_IMAGE7 IS NOT NULL OR
					YN_MAIN IS NOT NULL)) AS S
	  ON T.CD_COMPANY = S.CD_COMPANY
	  AND T.CD_PLANT = S.CD_PLANT
	  AND T.CD_ITEM = S.CD_ITEM
	  WHEN MATCHED THEN
		UPDATE SET T.DC_IMAGE1 = S.DC_IMAGE1,
				   T.DC_IMAGE2 = S.DC_IMAGE2,
				   T.DC_IMAGE3 = S.DC_IMAGE3,
				   T.DC_IMAGE4 = S.DC_IMAGE4,
				   T.DC_IMAGE5 = S.DC_IMAGE5,
				   T.DC_IMAGE6 = S.DC_IMAGE6,
				   T.DC_IMAGE7 = S.DC_IMAGE7,
				   T.YN_MAIN = S.YN_MAIN,
				   T.ID_UPDATE = @P_ID_USER,
				   T.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	  WHEN NOT MATCHED THEN
		INSERT (CD_COMPANY,
				CD_PLANT,
				CD_ITEM,
				DC_IMAGE1,
				DC_IMAGE2,
				DC_IMAGE3,
				DC_IMAGE4,
				DC_IMAGE5,
				DC_IMAGE6,
				DC_IMAGE7,
				YN_MAIN,
				ID_INSERT,
				DTS_INSERT) 
		VALUES (S.CD_COMPANY,
				S.CD_PLANT,
				S.CD_ITEM,
				S.DC_IMAGE1,
				S.DC_IMAGE2,
				S.DC_IMAGE3,
				S.DC_IMAGE4,
				S.DC_IMAGE5,
				S.DC_IMAGE6,
				S.DC_IMAGE7,
				S.YN_MAIN,
				@P_ID_USER,
				NEOE.SF_SYSDATE(GETDATE()));

IF EXISTS (SELECT 1 
		   FROM SYSOBJECTS 
		   WHERE NAME = 'CZ_EZCODE_PITEM')
BEGIN
-- ================================================== DELETE
DELETE A 
FROM CZ_EZCODE_PITEM A 
JOIN OPENXML (@DOC, '/XML/D', 2) 
        WITH (CD_COMPANY	NVARCHAR(7),
			  CD_ITEM		NVARCHAR(20)) B 
ON A.CD_COMPANY = B.CD_COMPANY
AND A.CD_ITEM = B.CD_ITEM;

-- ================================================== INSERT
MERGE INTO CZ_EZCODE_PITEM AS T
	  USING (SELECT CD_COMPANY,
					CD_ITEM,
					EZCODE
	         FROM OPENXML (@DOC, '/XML/I', 2) 
				  WITH (CD_COMPANY		NVARCHAR(7),
				        CD_ITEM			NVARCHAR(20),
				        EZCODE			NVARCHAR(MAX))) AS S
	  ON T.CD_COMPANY = S.CD_COMPANY
	  AND T.CD_ITEM = S.CD_ITEM
	  WHEN MATCHED THEN
		UPDATE SET T.EZCODE = S.EZCODE,
				   T.ID_UPDATE = @P_ID_USER,
				   T.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	  WHEN NOT MATCHED THEN
		INSERT (CD_COMPANY,
				CD_ITEM,
				EZCODE,
				ID_INSERT,
				DTS_INSERT) 
		VALUES (S.CD_COMPANY,
				S.CD_ITEM,
				S.EZCODE,
				@P_ID_USER,
				NEOE.SF_SYSDATE(GETDATE()));

-- ================================================== UPDATE 
MERGE INTO CZ_EZCODE_PITEM AS T
	  USING (SELECT CD_COMPANY,
					CD_ITEM,
					EZCODE
	         FROM OPENXML (@DOC, '/XML/U', 2) 
				  WITH (CD_COMPANY		NVARCHAR(7),
						CD_ITEM			NVARCHAR(20),
						EZCODE			NVARCHAR(MAX))) AS S
	  ON T.CD_COMPANY = S.CD_COMPANY
	  AND T.CD_ITEM = S.CD_ITEM
	  WHEN MATCHED THEN
		UPDATE SET T.EZCODE = S.EZCODE,
				   T.ID_UPDATE = @P_ID_USER,
				   T.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	  WHEN NOT MATCHED THEN
		INSERT (CD_COMPANY,
			    CD_ITEM,
			    EZCODE,
			    ID_INSERT,
			    DTS_INSERT) 
		VALUES (S.CD_COMPANY,
				S.CD_ITEM,
				S.EZCODE,
				@P_ID_USER,
				NEOE.SF_SYSDATE(GETDATE()));
END

EXEC SP_XML_REMOVEDOCUMENT @DOC 

GO

