USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MA_PITEM_UCODE_CHECK]    Script Date: 2016-06-28 오후 1:28:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_MA_PITEM_UCODE_CHECK] 
(
	@P_CD_COMPANY	NVARCHAR(7),
	@P_XML			XML
) 
AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_DOC INT

EXEC SP_XML_PREPAREDOCUMENT @V_DOC OUTPUT, @P_XML 

SELECT * INTO #XML
FROM OPENXML (@V_DOC, '/XML/ROW', 2) WITH 
(
	CD_COMPANY			NVARCHAR(7),
	CD_PLANT			NVARCHAR(7),
	CD_ITEM				NVARCHAR(20),
	CLS_L				NVARCHAR(4),
	CLS_M				NVARCHAR(4),
	PARTNER				NVARCHAR(20),
	STND_DETAIL_ITEM	NVARCHAR(MAX),
	UCODE2			    NVARCHAR(MAX),
	YN_USE				NCHAR(1)
)

EXEC SP_XML_REMOVEDOCUMENT @V_DOC

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

;WITH A AS
(
	SELECT MI.CLS_L, MI.CLS_M, MI.PARTNER, A.VALUE
	FROM #XML MI
	CROSS APPLY STRING_SPLIT(MI.STND_DETAIL_ITEM, ',') A
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.YN_USE = 'Y'
	AND ISNULL(MI.CLS_L, '') <> 'GS'
	AND ISNULL(A.VALUE, '') <> ''
	UNION ALL
	SELECT MI.CLS_L, MI.CLS_M, MI.PARTNER, A.VALUE
	FROM #XML MI
	CROSS APPLY STRING_SPLIT(MI.UCODE2, ',') A
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.YN_USE = 'Y'
	AND ISNULL(MI.CLS_L, '') <> 'GS'
	AND ISNULL(A.VALUE, '') <> ''
),
B AS
(
	SELECT MI.CLS_L, MI.CLS_M, MI.PARTNER, U.VALUE
	FROM MA_PITEM MI
	CROSS APPLY STRING_SPLIT(MI.STND_DETAIL_ITEM, ',') U
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.YN_USE = 'Y'
	AND ISNULL(U.VALUE, '') <> ''
	AND NOT EXISTS (SELECT 1 
				    FROM #XML A
					WHERE A.CD_COMPANY = MI.CD_COMPANY
					AND A.CD_PLANT = MI.CD_PLANT
					AND A.CD_ITEM = MI.CD_ITEM)
	UNION ALL
	SELECT MI.CLS_L, MI.CLS_M, MI.PARTNER, U.VALUE
	FROM MA_PITEM MI
	CROSS APPLY STRING_SPLIT(MI.UCODE2, ',') U
	WHERE MI.CD_COMPANY = @P_CD_COMPANY
	AND MI.YN_USE = 'Y'
	AND ISNULL(U.VALUE, '') <> ''
	AND NOT EXISTS (SELECT 1 
				    FROM #XML A
					WHERE A.CD_COMPANY = MI.CD_COMPANY
					AND A.CD_PLANT = MI.CD_PLANT
					AND A.CD_ITEM = MI.CD_ITEM)
),
C AS
(
	SELECT * 
	FROM A
	UNION ALL
	SELECT * 
	FROM B
	WHERE EXISTS (SELECT 1 
				  FROM A
				  WHERE A.value = B.value)
)
SELECT C.VALUE AS UCODE
FROM C
WHERE C.PARTNER = '11823'
GROUP BY C.VALUE
HAVING COUNT(1) > 1
UNION ALL
SELECT C.VALUE  AS UCODE
FROM C
WHERE C.PARTNER NOT IN ('11823', '03971', '00069')
GROUP BY C.CLS_L, C.CLS_M, C.VALUE
HAVING COUNT(1) > 1

GO

