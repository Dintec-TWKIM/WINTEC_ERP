USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_PACK_REG_XML]    Script Date: 2015-10-26 오후 6:33:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_SA_PACK_REG_XML] 
(
	@P_CD_COMPANY	NVARCHAR(7),
	@P_NO_GIR		NVARCHAR(20),
    @P_XML			XML, 
	@P_ID_USER		NVARCHAR(10), 
    @DOC			INT = NULL
) 
AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

EXEC SP_XML_PREPAREDOCUMENT @DOC OUTPUT, @P_XML 

-- ================================================== DELETE
INSERT INTO CZ_SA_PACKL_LOG
(
	CD_COMPANY, 
	NO_GIR, 
	NO_PACK, 
	SEQ_GIR, 
	CD_ITEM, 
	QT_PACK, 
	NO_FILE, 
	NO_QTLINE, 
	DTS_INSERT, 
	ID_INSERT, 
	DTS_UPDATE, 
	ID_UPDATE, 
	DTS_DELETE, 
	ID_DELETE, 
	NM_PROCEDURE
)
SELECT A.CD_COMPANY, 
	   A.NO_GIR, 
	   A.NO_PACK, 
	   A.SEQ_GIR, 
	   A.CD_ITEM, 
	   A.QT_PACK, 
	   A.NO_FILE, 
	   A.NO_QTLINE, 
	   A.DTS_INSERT, 
	   A.ID_INSERT, 
	   A.DTS_UPDATE, 
	   A.ID_UPDATE, 
	   @P_ID_USER,
	   NEOE.SF_SYSDATE(GETDATE()),
	   'SP_CZ_SA_PACK_REG_XML'
FROM CZ_SA_PACKL A 
JOIN OPENXML (@DOC, '/XML/D', 2) 
        WITH (NO_PACK NUMERIC(5, 0),
			  SEQ_GIR NUMERIC(5, 0)) B 
ON A.CD_COMPANY = @P_CD_COMPANY 
AND A.NO_GIR = @P_NO_GIR
AND A.NO_PACK = B.NO_PACK
AND A.SEQ_GIR = B.SEQ_GIR

DELETE A 
  FROM CZ_SA_PACKL A 
       JOIN OPENXML (@DOC, '/XML/D', 2) 
               WITH (NO_PACK NUMERIC(5, 0),
					 SEQ_GIR NUMERIC(5, 0)) B 
       ON A.CD_COMPANY = @P_CD_COMPANY 
	   AND A.NO_GIR = @P_NO_GIR
	   AND A.NO_PACK = B.NO_PACK
	   AND A.SEQ_GIR = B.SEQ_GIR
-- ================================================== INSERT		     
INSERT INTO CZ_SA_PACKL
(
	CD_COMPANY,
	NO_GIR,				
	NO_PACK,			
	SEQ_GIR,				
	CD_ITEM,		
	QT_PACK,
	NO_FILE,
	NO_QTLINE,			
	ID_INSERT,
    DTS_INSERT
)
SELECT @P_CD_COMPANY, 
       @P_NO_GIR,
	   NO_PACK,			
	   SEQ_GIR,				
	   CD_ITEM,		
	   QT_PACK,
	   NO_FILE,
	   NO_QTLINE,	
       @P_ID_USER, 
       NEOE.SF_SYSDATE(GETDATE()) 
  FROM OPENXML (@DOC, '/XML/I', 2) 
          WITH (NO_PACK		NUMERIC(5, 0),
				SEQ_GIR		NUMERIC(5, 0),
				CD_ITEM		NVARCHAR(20), 
				QT_PACK		NUMERIC(17, 4),
				NO_FILE		NVARCHAR(20),
				NO_QTLINE	INT)  
-- ================================================== UPDATE    
UPDATE A 
   SET A.CD_ITEM = B.CD_ITEM,		
	   A.QT_PACK = B.QT_PACK,
	   A.NO_FILE =  B.NO_FILE,
	   A.NO_QTLINE = B.NO_QTLINE,			
	   A.ID_UPDATE = @P_ID_USER,
	   A.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
  FROM CZ_SA_PACKL A 
       JOIN OPENXML (@DOC, '/XML/U', 2) 
               WITH (NO_PACK	 NUMERIC(5, 0),
					 SEQ_GIR	 NUMERIC(5, 0),
					 CD_ITEM	 NVARCHAR(20), 
					 QT_PACK	 NUMERIC(17, 4),
					 NO_FILE	 NVARCHAR(20),
					 NO_QTLINE	 INT) B 
       ON A.CD_COMPANY = @P_CD_COMPANY 
	   AND A.NO_GIR = @P_NO_GIR
	   AND A.NO_PACK = B.NO_PACK
	   AND A.SEQ_GIR = B.SEQ_GIR

IF EXISTS (SELECT 1
		   FROM CZ_SA_GIRL_PACK GL
		   LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_GIR, PL.SEQ_GIR,
		                     SUM(PL.QT_PACK) AS QT_PACK
		              FROM CZ_SA_PACKL PL
		              GROUP BY PL.CD_COMPANY, PL.NO_GIR, PL.SEQ_GIR) PL 
		   ON PL.CD_COMPANY = GL.CD_COMPANY AND PL.NO_GIR = GL.NO_GIR AND PL.SEQ_GIR = GL.SEQ_GIR
		   WHERE GL.CD_COMPANY = @P_CD_COMPANY
		   AND GL.NO_GIR = @P_NO_GIR
		   AND GL.CD_ITEM NOT LIKE 'SD%'
		   GROUP BY GL.CD_COMPANY, GL.NO_GIR
		   HAVING SUM(GL.QT_GIR) = SUM(PL.QT_PACK)
		   AND COUNT(DISTINCT GL.SEQ_GIR) = COUNT(DISTINCT PL.SEQ_GIR))
BEGIN
	UPDATE CZ_SA_GIRH_PACK
	SET STA_GIR = 'C',
		ID_UPDATE = @P_ID_USER,
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR	
END
ELSE
BEGIN
	UPDATE CZ_SA_GIRH_PACK
	SET STA_GIR = 'R',
		ID_UPDATE = @P_ID_USER,
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR
END

EXEC SP_XML_REMOVEDOCUMENT @DOC 

GO