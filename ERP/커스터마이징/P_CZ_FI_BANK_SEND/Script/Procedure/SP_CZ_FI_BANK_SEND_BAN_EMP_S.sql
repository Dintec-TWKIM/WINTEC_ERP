USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_FI_BANK_SEND_BAN_EMP_S]    Script Date: 2018-01-04 오후 7:31:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_FI_BANK_SEND_BAN_EMP_S]
( 
	@P_CD_COMPANY	NVARCHAR(7), 
	@P_CD_PC		NVARCHAR(4000), 
	@P_CD_ACCT		NVARCHAR(4000), 
	@P_DT_FACCT		NVARCHAR(8), 
	@P_DT_TACCT		NVARCHAR(8), 
	@P_TP_GUBUN		NVARCHAR(1), 
	@P_CD_FPARTNER  NVARCHAR(20), 
	@P_CD_TPARTNER  NVARCHAR(20), 
	@P_DT_END_F		NVARCHAR(8), 
	@P_DT_END_T		NVARCHAR(8), 
	@P_CD_DOCU		NVARCHAR(3), 
	@P_TP_DEPOSIT	NVARCHAR(1) = NULL,		-- 거래처계좌여부 (대림) 
	@P_TP_SET		NCHAR(1),
	@P_YN_BAN		NCHAR(1),			-- 반제완료여부
	@P_YN_TRAN		NCHAR(1)			-- 이체완료여부
) 
AS 

/******************************************* 
**  SYSTEM          : 회계관리 
**  SUB SYSTEM      : 은행연동-거래내역관리(반제) 
**  PAGE            : P_FI_BANK_SEND_BAN 
**  DESC            : 상단 그리드 조회 
**  RETURN VALUES   : 
** 
**  작    성    자  : 
**  작    성    일  :  
** 
**  수    정    자  : 박창수
**  수  정  내  용  : 거래구분이 사원일경우
********************************************* 
** CHANGE HISTORY 
********************************************* 
** 2015.10.07 윤나라 '비고'컬럼 추가(한국룬드벡 전용)
*********************************************/ 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

IF @P_TP_SET = '1'
BEGIN 
	SELECT DISTINCT 'N' AS S, 
		   BB.DT_ACCT AS ACCT_DATE, 
		   BB.NO_ACCT AS DOCU_NO, 
		   BB.NO_DOCU, 
		   BB.NO_DOLINE AS LINE_NO, 
		   (CASE WHEN ISNULL(BB.NO_DOCU,'') = '' THEN NULL ELSE BB.NO_DOCU + '-' + CONVERT(VARCHAR, BB.NO_DOLINE) END) AS NO_DOCU_LINE_NO,
		   BB.CD_PC AS NODE_CODE, 
		   BB.CD_ACCT AS ACCT_CODE, 
		   BB.NM_ACCT AS ACCT_NAME, 
		   BB.CD_EXCH,
		   BB.NM_EXCH,	
		   BB.AMT, -- 금액
		   BB.AMT_BAN, -- 반재금액
		   BB.AM_EX,
		   BB.AM_EXBAN,
		   ISNULL(CC.TRANS_AMT, 0) AS TRANS_AMT_A,-- 이체금액
		   ISNULL(CC.TRANS_AMT_EX, 0) AS TRANS_AMT_EX_A,
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AMT - BB.AMT_BAN) ELSE (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) END) AS TRANS_AMT, -- 이체가능금액
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AM_EX - BB.AM_EXBAN) ELSE (BB.AM_EX - ISNULL(CC.TRANS_AMT_EX, 0)) END) AS TRANS_AMT_EX,
		   BB.DT_END, 
		   BB.NM_NOTE AS CLIENT_NOTE, 
		   '' AS TRANS_NOTE, 
		   E.BANK_CODE AS TRANS_BANK_CODE, 
		   (SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'FI_T000013' AND CD_SYSDEF = E.BANK_CODE AND CD_COMPANY = @P_CD_COMPANY) AS TRANS_BANK_NAME, 
		   E.CD_DEPOSIT AS TRANS_ACCT_NO, 
		   E.TR_CODE AS CUST_CODE, 
		   E.TR_NAME AS CUST_NAME, 
		   E.NM_DEPOSIT AS TRANS_NAME, 
		   '' AS TRANS_DATE, 
		   '' AS TRANS_SEQ, 
		   '' AS BANK_CODE, 
		   '' AS ACCT_NO, 
		   ' ' AS SEQ, 
		   ' ' AS NO_COMPANY, 
		   (SELECT NM_DEPT FROM MA_DEPT WHERE CD_DEPT = BB.CD_DEPT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPT, 
		   (SELECT NM_CC FROM MA_CC WHERE CD_CC = BB.CD_CC AND CD_COMPANY = @P_CD_COMPANY) AS NM_CC, 
		   (SELECT NM_PROJECT FROM SA_PROJECTH WHERE NO_PROJECT = BB.CD_PJT AND NO_SEQ = 1 AND CD_COMPANY = @P_CD_COMPANY) AS NM_PJT, 
		   (SELECT NM_PC FROM MA_PC WHERE CD_PC = BB.CD_PC AND CD_COMPANY = @P_CD_COMPANY) AS NM_PC,
		   BB.CD_DEPOSIT, 
		   (SELECT NM_DEPOSIT FROM FI_DEPOSIT WHERE CD_DEPOSIT = BB.CD_DEPOSIT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPOSIT,
		   (CASE WHEN NEOE.FN_SERVERKEY('Y','LDBECK|') ='Y' THEN J.DC_RMK ELSE NULL END) AS DC_RMK,
		   BB.D61,
		   '' AS CONTNO,
		   '' AS NM_BANK_EN,
		   '' AS CD_BANK_NATION,
		   '' AS NM_BANK_NATION,
		   '' AS NO_SORT,
		   '' AS CD_DEPOSIT_NATION,
		   '' AS NM_DEPOSIT_NATION,
		   '' AS NO_SWIFT,
		   '' AS DC_DEPOSIT_TEL,
		   '' AS DC_DEPOSIT_ADDRESS,
		   '' AS NO_BANK_BIC,
		   BB.ST_GWARE				
	FROM (SELECT A.CD_COMPANY, 
				 B.DT_ACCT, 
				 A.NO_DOCU, 
				 B.NO_ACCT, 
				 A.NO_DOLINE, 
				 A.CD_PC, 
				 A.CD_ACCT, 
				 C.NM_ACCT, 
				 B.NM_NOTE, 
				 (CASE WHEN @P_TP_GUBUN = '1' THEN B.CD_PARTNER  
				 	   WHEN @P_TP_GUBUN = '2' THEN B.CD_EMPLOY  
				 	   ELSE B.CD_UMNG5 END) AS TR_CODE,
				 B.CD_EXCH,
				 MC.NM_SYSDEF AS NM_EXCH,  
				 --(A.AM_DOCU - A.AM_BAN ) AMT, 
				 A.AM_DOCU AS AMT,
				 A.AM_BAN AS AMT_BAN,
				 A.AM_EX,
				 A.AM_EXBAN,
				 B.DT_END,
				 B.CD_DEPT, 
				 B.CD_CC,
				 B.CD_PJT, 
				 B.CD_DEPOSIT,
				 B.CD_EMPLOY,
		         (CASE 'D61' WHEN B.CD_MNG1 THEN B.NM_MNGD1 
							 WHEN B.CD_MNG2 THEN B.NM_MNGD2 
							 WHEN B.CD_MNG3 THEN B.NM_MNGD3 
							 WHEN B.CD_MNG4 THEN B.NM_MNGD4 
				             WHEN B.CD_MNG5 THEN B.NM_MNGD5 
							 WHEN B.CD_MNG6 THEN B.NM_MNGD6 
							 WHEN B.CD_MNG7 THEN B.NM_MNGD7 
							 WHEN B.CD_MNG8 THEN B.NM_MNGD8 END) AS D61,
				 B.ST_GWARE	
				 FROM FI_BANH A 
				 JOIN FI_DOCU B ON A.NO_DOCU = B.NO_DOCU AND A.NO_DOLINE = B.NO_DOLINE AND A.CD_PC = B.CD_PC AND A.CD_COMPANY = B.CD_COMPANY 
			     JOIN FI_ACCTCODE C ON A.CD_COMPANY = C.CD_COMPANY AND A.CD_ACCT = C.CD_ACCT
				 LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = B.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = B.CD_EXCH
			   --WHERE	(A.DT_ACCT >= @P_DT_FACCT AND A.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' AND A.ST_BAN = '1' )  
				 WHERE	(B.DT_ACCT >= @P_DT_FACCT AND B.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' )  
				 AND (A.CD_PC IN (SELECT CD_STR FROM TF_GETSPLIT(@P_CD_PC)))  
				 AND (A.CD_COMPANY = @P_CD_COMPANY AND A.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND (C.CD_COMPANY = @P_CD_COMPANY AND C.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND ((@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL) AND (@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL) 
				   OR (A.CD_PARTNER >= @P_CD_FPARTNER AND  A.CD_PARTNER <= @P_CD_TPARTNER) 
				   OR (B.CD_EMPLOY >= @P_CD_FPARTNER AND B.CD_EMPLOY <= @P_CD_TPARTNER) 
				   OR (B.CD_UMNG5 >= @P_CD_FPARTNER AND B.CD_UMNG5 <= @P_CD_TPARTNER)) 
				 AND (@P_DT_END_F = '' OR @P_DT_END_F IS NULL OR ISNULL(B.DT_END,'') >= @P_DT_END_F) 
				 AND (@P_DT_END_T = '' OR @P_DT_END_T IS NULL OR ISNULL(B.DT_END,'') <= @P_DT_END_T)  
				 AND (@P_CD_DOCU = '' OR @P_CD_DOCU IS NULL OR B.CD_DOCU = @P_CD_DOCU) 
				 AND A.NO_DOCU NOT IN (SELECT NO_DOCU 
									   FROM	BANK_SENDSUB 
									   WHERE C_CODE = @P_CD_COMPANY 
									   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
									   AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
									   AND LINE_NO = A.NO_DOLINE)) BB 
				
	LEFT JOIN (SELECT NO_DOCU,
					  LINE_NO,
					  SUM(TRANS_AMT_EX) AS TRANS_AMT_EX,
					  SUM(TRANS_AMT) AS TRANS_AMT
			   FROM	BANK_SENDD
			   WHERE C_CODE = @P_CD_COMPANY 
			   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
			 --AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
			   GROUP BY NO_DOCU, LINE_NO)CC
	ON BB.NO_DOCU = CC.NO_DOCU AND BB.NO_DOLINE = CC.LINE_NO
	LEFT JOIN MA_EMP J ON BB.CD_COMPANY = J.CD_COMPANY AND BB.CD_EMPLOY = J.NO_EMP
	LEFT JOIN (SELECT CD_DEPOSIT,
					  NM_DEPOSIT,
					  TR_CODE,
					  TR_NAME,
					  BANK_CODE,
					  NM_RMK
			   FROM	BANK_DEPOSIT E1   
			   WHERE E1.CD_COMPANY = @P_CD_COMPANY 
			   AND E1.TP_DEPOSIT = @P_TP_GUBUN 
			   AND (@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL OR E1.TR_CODE >= @P_CD_FPARTNER)  
			   AND (@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL OR E1.TR_CODE <= @P_CD_TPARTNER)) E 
	ON BB.TR_CODE = E.TR_CODE 
  --WHERE BB.AMT > 0 
	WHERE ((@P_TP_DEPOSIT = '' OR @P_TP_DEPOSIT IS NULL) 
	    OR (@P_TP_DEPOSIT = 'Y' AND E.TR_CODE IS NOT NULL) 
		OR (@P_TP_DEPOSIT = 'N' AND E.TR_CODE IS NULL))
	-- 반제여부, 이체여부를 같이 체크함
    AND	(((@P_YN_BAN = '' OR @P_YN_BAN IS NULL)
	   OR (@P_YN_BAN = 'N' AND (BB.AMT - BB.AMT_BAN) <> 0)
	   OR (@P_YN_BAN = 'Y' AND (BB.AMT - BB.AMT_BAN) = 0))
	 AND ((@P_YN_TRAN = '' OR @P_YN_TRAN IS NULL)
	   OR (@P_YN_TRAN = 'N' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) <> 0)
	   OR (@P_YN_TRAN = 'Y' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) = 0)))
	ORDER BY BB.NO_DOCU, BB.NO_DOLINE 
END 
ELSE IF @P_TP_SET = '2'
BEGIN 
	SELECT DISTINCT 'N' AS S, 
		   BB.DT_ACCT AS ACCT_DATE, 
		   BB.NO_ACCT AS DOCU_NO, 
		   BB.NO_DOCU, 
		   BB.NO_DOLINE AS LINE_NO, 
		   (CASE WHEN ISNULL(BB.NO_DOCU, '') = '' THEN NULL ELSE BB.NO_DOCU + '-' + CONVERT(VARCHAR, BB.NO_DOLINE) END) AS NO_DOCU_LINE_NO,
		   BB.CD_PC AS NODE_CODE, 
		   BB.CD_ACCT AS ACCT_CODE, 
		   BB.NM_ACCT AS ACCT_NAME,
		   BB.CD_EXCH,
		   BB.NM_EXCH, 
		   BB.AMT, -- 금액
		   BB.AMT_BAN, -- 반재금액
		   BB.AM_EX,
		   BB.AM_EXBAN,
		   ISNULL(CC.TRANS_AMT, 0) AS TRANS_AMT_A,-- 이체금액
		   ISNULL(CC.TRANS_AMT_EX, 0) AS TRANS_AMT_EX_A,
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AMT - BB.AMT_BAN) ELSE (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) END) AS TRANS_AMT, -- 이체가능금액
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AM_EX - BB.AM_EXBAN) ELSE (BB.AM_EX - ISNULL(CC.TRANS_AMT_EX, 0)) END) AS TRANS_AMT_EX,
		   BB.DT_END, 
		   BB.NM_NOTE AS CLIENT_NOTE, 
		   '' AS TRANS_NOTE, 
		   J.CD_BANK1 AS TRANS_BANK_CODE, 
		   (SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'HR_P000006' AND CD_SYSDEF = J.CD_BANK1 AND CD_COMPANY = @P_CD_COMPANY) AS TRANS_BANK_NAME, 
		   J.NO_BANK1 AS TRANS_ACCT_NO, 
		   J.NO_EMP AS CUST_CODE, 
		   J.NM_KOR AS CUST_NAME,
		   J.NM_DEPOSIT1 AS TRANS_NAME,
		 --(SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'HR_P000006' AND CD_SYSDEF = J.CD_BANK1 AND CD_COMPANY = @P_CD_COMPANY) AS TRANS_NAME,
		   '' AS TRANS_DATE, 
		   '' AS TRANS_SEQ, 
		   '' AS BANK_CODE, 
		   '' AS ACCT_NO, 
		   ' ' AS SEQ, 
		   ' ' AS NO_COMPANY, 
		   (SELECT NM_DEPT FROM MA_DEPT WHERE CD_DEPT = BB.CD_DEPT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPT, 
		   (SELECT NM_CC FROM MA_CC WHERE CD_CC = BB.CD_CC AND CD_COMPANY = @P_CD_COMPANY) AS NM_CC, 
		   (SELECT NM_PROJECT FROM SA_PROJECTH WHERE NO_PROJECT = BB.CD_PJT AND NO_SEQ = 1 AND CD_COMPANY = @P_CD_COMPANY) AS NM_PJT, 
		   (SELECT NM_PC FROM MA_PC WHERE CD_PC = BB.CD_PC AND CD_COMPANY = @P_CD_COMPANY) AS NM_PC,
		   BB.CD_DEPOSIT, 
		   (SELECT NM_DEPOSIT FROM FI_DEPOSIT WHERE CD_DEPOSIT = BB.CD_DEPOSIT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPOSIT,
		   (CASE WHEN NEOE.FN_SERVERKEY('Y','LDBECK|') ='Y' THEN J.DC_RMK ELSE NULL END) AS DC_RMK,
		   BB.D61,
		   '' AS CONTNO,
		   '' AS NM_BANK_EN,
		   '' AS CD_BANK_NATION,
		   '' AS NM_BANK_NATION,
		   '' AS NO_SORT,
		   '' AS CD_DEPOSIT_NATION,
		   '' AS NM_DEPOSIT_NATION,
		   '' AS NO_SWIFT,
		   '' AS DC_DEPOSIT_TEL,
		   '' AS DC_DEPOSIT_ADDRESS,
		   '' AS NO_BANK_BIC,
		   BB.ST_GWARE
	FROM (SELECT A.CD_COMPANY, 
				 B.DT_ACCT, 
				 A.NO_DOCU, 
				 B.NO_ACCT, 
				 A.NO_DOLINE, 
				 A.CD_PC, 
				 A.CD_ACCT, 
				 C.NM_ACCT, 
				 B.NM_NOTE,
				 B.CD_EXCH,
				 MC.NM_SYSDEF AS NM_EXCH,   
			   --(A.AM_DOCU - A.AM_BAN ) AMT, 
				 A.AM_DOCU AS AMT,
				 A.AM_BAN AS AMT_BAN,
				 A.AM_EX,
				 A.AM_EXBAN,
				 B.DT_END,
				 B.CD_DEPT, 
				 B.CD_CC,
				 B.CD_PJT, 
				 B.CD_DEPOSIT, 
				 B.CD_EMPLOY,
		         (CASE 'D61' WHEN B.CD_MNG1 THEN B.NM_MNGD1 
							 WHEN B.CD_MNG2 THEN B.NM_MNGD2 
							 WHEN B.CD_MNG3 THEN B.NM_MNGD3 
							 WHEN B.CD_MNG4 THEN B.NM_MNGD4 
				             WHEN B.CD_MNG5 THEN B.NM_MNGD5 
							 WHEN B.CD_MNG6 THEN B.NM_MNGD6 
							 WHEN B.CD_MNG7 THEN B.NM_MNGD7 
							 WHEN B.CD_MNG8 THEN B.NM_MNGD8 END) AS D61,
				 B.ST_GWARE
				 FROM FI_BANH A 
				 JOIN FI_DOCU B ON A.NO_DOCU = B.NO_DOCU AND A.NO_DOLINE = B.NO_DOLINE AND A.CD_PC = B.CD_PC AND A.CD_COMPANY = B.CD_COMPANY 
				 JOIN FI_ACCTCODE C ON A.CD_COMPANY = C.CD_COMPANY AND A.CD_ACCT = C.CD_ACCT
				 LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = B.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = B.CD_EXCH
			   --WHERE	(A.DT_ACCT >= @P_DT_FACCT AND A.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' AND A.ST_BAN = '1' )  
				 WHERE (B.DT_ACCT >= @P_DT_FACCT AND B.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2')  
				 AND (A.CD_PC IN (SELECT CD_STR FROM TF_GETSPLIT(@P_CD_PC)))  
				 AND (A.CD_COMPANY = @P_CD_COMPANY AND A.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND (C.CD_COMPANY = @P_CD_COMPANY AND C.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND ((@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL) 
				  AND (@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL) 
				   OR (A.CD_PARTNER >= @P_CD_FPARTNER AND  A.CD_PARTNER <= @P_CD_TPARTNER) 
				   OR (B.CD_EMPLOY >= @P_CD_FPARTNER AND B.CD_EMPLOY <= @P_CD_TPARTNER) 
				   OR (B.CD_UMNG5 >= @P_CD_FPARTNER AND B.CD_UMNG5 <= @P_CD_TPARTNER)) 
				 AND (@P_DT_END_F = '' OR @P_DT_END_F IS NULL OR ISNULL(B.DT_END,'') >= @P_DT_END_F) 
				 AND (@P_DT_END_T = '' OR @P_DT_END_T IS NULL OR ISNULL(B.DT_END,'') <= @P_DT_END_T)  
				 AND (@P_CD_DOCU = '' OR @P_CD_DOCU IS NULL OR B.CD_DOCU = @P_CD_DOCU) 
				 AND A.NO_DOCU NOT IN (SELECT NO_DOCU 
									   FROM	BANK_SENDSUB 
									   WHERE C_CODE = @P_CD_COMPANY 
									   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
									   AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
									   AND LINE_NO = A.NO_DOLINE)) BB 
	LEFT JOIN (SELECT NO_DOCU,
					  LINE_NO,
					  SUM(TRANS_AMT_EX) AS TRANS_AMT_EX,
					  SUM(TRANS_AMT) AS TRANS_AMT
			   FROM	BANK_SENDD
			   WHERE C_CODE = @P_CD_COMPANY 
			   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
			 --AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
			   GROUP BY NO_DOCU, LINE_NO)CC
	ON BB.NO_DOCU = CC.NO_DOCU AND BB.NO_DOLINE = CC.LINE_NO
	LEFT JOIN MA_EMP J ON BB.CD_COMPANY = J.CD_COMPANY AND BB.CD_EMPLOY = J.NO_EMP
	--LEFT JOIN 
	--			( 
	--				SELECT	TR_CODE, NM_RMK
	--				FROM	BANK_DEPOSIT E1   
	--				WHERE	E1.CD_COMPANY = @P_CD_COMPANY 
	--				AND		E1.TP_DEPOSIT = @P_TP_GUBUN 
	--				AND		(@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL OR E1.TR_CODE >= @P_CD_FPARTNER)  
	--				AND		(@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL OR E1.TR_CODE <= @P_CD_TPARTNER) 
	--			) E 
	--ON			BB.CD_EMPLOY = E.TR_CODE 
	--WHERE		BB.AMT > 0 
	WHERE ((@P_TP_DEPOSIT = '' OR @P_TP_DEPOSIT IS NULL) 
	    OR (@P_TP_DEPOSIT = 'Y' AND J.NO_BANK1 IS NOT NULL) 
		OR (@P_TP_DEPOSIT = 'N' AND J.NO_BANK1 IS NULL) )
	-- 반제여부, 이체여부를 같이 체크함
    AND	(((@P_YN_BAN = '' OR @P_YN_BAN IS NULL)
	   OR (@P_YN_BAN = 'N' AND (BB.AMT - BB.AMT_BAN) <> 0)
	   OR (@P_YN_BAN = 'Y' AND (BB.AMT - BB.AMT_BAN) = 0))
	 AND ((@P_YN_TRAN = '' OR @P_YN_TRAN IS NULL)
	   OR (@P_YN_TRAN = 'N' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) <> 0)
	   OR (@P_YN_TRAN = 'Y' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) = 0)))
	ORDER BY BB.NO_DOCU, BB.NO_DOLINE
END 
ELSE IF @P_TP_SET = '3'
BEGIN 
	SELECT DISTINCT 'N' AS S, 
		   BB.DT_ACCT AS ACCT_DATE, 
		   BB.NO_ACCT AS DOCU_NO, 
		   BB.NO_DOCU, 
		   BB.NO_DOLINE AS LINE_NO, 
		   (CASE WHEN ISNULL(BB.NO_DOCU, '') = '' THEN NULL ELSE BB.NO_DOCU + '-' + CONVERT(VARCHAR, BB.NO_DOLINE) END) AS NO_DOCU_LINE_NO,
		   BB.CD_PC AS NODE_CODE, 
		   BB.CD_ACCT AS ACCT_CODE, 
		   BB.NM_ACCT AS ACCT_NAME, 
		   BB.CD_EXCH,
		   BB.NM_EXCH,
		   BB.AMT, -- 금액
		   BB.AMT_BAN, -- 반재금액
		   BB.AM_EX,
		   BB.AM_EXBAN,
		   ISNULL(CC.TRANS_AMT, 0) AS TRANS_AMT_A,-- 이체금액
		   ISNULL(CC.TRANS_AMT_EX, 0) AS TRANS_AMT_EX_A,
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AMT - BB.AMT_BAN) ELSE (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) END) AS TRANS_AMT, -- 이체가능금액
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AM_EX - BB.AM_EXBAN) ELSE (BB.AM_EX - ISNULL(CC.TRANS_AMT_EX, 0)) END) AS TRANS_AMT_EX,
		   BB.DT_END, 
		   BB.NM_NOTE AS CLIENT_NOTE, 
		   '' AS TRANS_NOTE,
		   J.CD_BANK2 AS TRANS_BANK_CODE, 
		   ( SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'HR_P000006' AND CD_SYSDEF = J.CD_BANK2 AND CD_COMPANY = @P_CD_COMPANY) AS TRANS_BANK_NAME, 
		   J.NO_BANK2 AS TRANS_ACCT_NO, 
		   J.NO_EMP AS CUST_CODE, 
		   J.NM_KOR AS CUST_NAME,
		   J.NM_DEPOSIT2 AS TRANS_NAME,
		   --(SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'HR_P000006' AND CD_SYSDEF = J.CD_BANK2 AND CD_COMPANY = @P_CD_COMPANY) TRANS_NAME,
		   '' AS TRANS_DATE, 
		   '' AS TRANS_SEQ, 
		   '' AS BANK_CODE, 
		   '' AS ACCT_NO, 
		   ' ' AS SEQ, 
		   ' ' AS NO_COMPANY, 
		   (SELECT NM_DEPT FROM MA_DEPT WHERE CD_DEPT = BB.CD_DEPT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPT, 
		   (SELECT NM_CC FROM MA_CC WHERE CD_CC = BB.CD_CC AND CD_COMPANY = @P_CD_COMPANY) AS NM_CC, 
		   (SELECT NM_PROJECT FROM SA_PROJECTH WHERE NO_PROJECT = BB.CD_PJT AND NO_SEQ = 1 AND CD_COMPANY = @P_CD_COMPANY) AS NM_PJT, 
		   (SELECT NM_PC FROM MA_PC WHERE CD_PC = BB.CD_PC AND CD_COMPANY = @P_CD_COMPANY) AS NM_PC,
		   BB.CD_DEPOSIT, 
		   (SELECT NM_DEPOSIT FROM FI_DEPOSIT WHERE CD_DEPOSIT = BB.CD_DEPOSIT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPOSIT,
		   (CASE WHEN NEOE.FN_SERVERKEY('Y','LDBECK|') ='Y' THEN J.DC_RMK ELSE NULL END) AS DC_RMK,
		   BB.D61,
		   '' AS CONTNO,
		   '' AS NM_BANK_EN,
		   '' AS CD_BANK_NATION,
		   '' AS NM_BANK_NATION,
		   '' AS NO_SORT,
		   '' AS CD_DEPOSIT_NATION,
		   '' AS NM_DEPOSIT_NATION,
		   '' AS NO_SWIFT,
		   '' AS DC_DEPOSIT_TEL,
		   '' AS DC_DEPOSIT_ADDRESS,
		   '' AS NO_BANK_BIC,
		   BB.ST_GWARE
	FROM (SELECT A.CD_COMPANY, 
				 B.DT_ACCT, 
				 A.NO_DOCU, 
				 B.NO_ACCT, 
				 A.NO_DOLINE, 
				 A.CD_PC, 
				 A.CD_ACCT, 
				 C.NM_ACCT, 
				 B.NM_NOTE, 
				 B.CD_EXCH,
				 MC.NM_SYSDEF AS NM_EXCH,  
				 --(A.AM_DOCU - A.AM_BAN ) AMT, 
				 A.AM_DOCU AS AMT,
				 A.AM_BAN AS AMT_BAN,
				 A.AM_EX,
				 A.AM_EXBAN,
				 B.DT_END,
				 B.CD_DEPT, 
				 B.CD_CC,
				 B.CD_PJT, 
				 B.CD_DEPOSIT, 
				 B.CD_EMPLOY,
		         (CASE 'D61' WHEN B.CD_MNG1 THEN B.NM_MNGD1 
							 WHEN B.CD_MNG2 THEN B.NM_MNGD2 
							 WHEN B.CD_MNG3 THEN B.NM_MNGD3 
							 WHEN B.CD_MNG4 THEN B.NM_MNGD4 
				             WHEN B.CD_MNG5 THEN B.NM_MNGD5 
							 WHEN B.CD_MNG6 THEN B.NM_MNGD6 
							 WHEN B.CD_MNG7 THEN B.NM_MNGD7 
							 WHEN B.CD_MNG8 THEN B.NM_MNGD8 END) AS D61,
				 B.ST_GWARE
				 FROM FI_BANH A 
				 JOIN FI_DOCU B ON A.NO_DOCU = B.NO_DOCU AND A.NO_DOLINE = B.NO_DOLINE AND A.CD_PC = B.CD_PC AND A.CD_COMPANY = B.CD_COMPANY 
				 JOIN FI_ACCTCODE C ON A.CD_COMPANY = C.CD_COMPANY AND A.CD_ACCT = C.CD_ACCT
				 LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = B.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = B.CD_EXCH
				 --WHERE	(A.DT_ACCT >= @P_DT_FACCT AND A.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' AND A.ST_BAN = '1' )  
				 WHERE (B.DT_ACCT >= @P_DT_FACCT AND B.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' )  
				 AND (A.CD_PC IN (SELECT CD_STR FROM TF_GETSPLIT(@P_CD_PC)))  
				 AND (A.CD_COMPANY = @P_CD_COMPANY AND A.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND (C.CD_COMPANY = @P_CD_COMPANY AND C.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND ((@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL) AND (@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL) 
				   OR (A.CD_PARTNER >= @P_CD_FPARTNER AND  A.CD_PARTNER <= @P_CD_TPARTNER) 
				   OR (B.CD_EMPLOY >= @P_CD_FPARTNER AND B.CD_EMPLOY <= @P_CD_TPARTNER) 
				   OR (B.CD_UMNG5 >= @P_CD_FPARTNER AND B.CD_UMNG5 <= @P_CD_TPARTNER)) 
				 AND (@P_DT_END_F = '' OR @P_DT_END_F IS NULL OR ISNULL(B.DT_END,'') >= @P_DT_END_F) 
				 AND (@P_DT_END_T = '' OR @P_DT_END_T IS NULL OR ISNULL(B.DT_END,'') <= @P_DT_END_T)  
				 AND (@P_CD_DOCU = '' OR @P_CD_DOCU IS NULL OR B.CD_DOCU = @P_CD_DOCU) 
				 AND A.NO_DOCU NOT IN (SELECT NO_DOCU 
									   FROM	BANK_SENDSUB 
									   WHERE C_CODE = @P_CD_COMPANY 
									   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
									   AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
									   AND LINE_NO = A.NO_DOLINE)) BB 
	LEFT JOIN (SELECT NO_DOCU,
					  LINE_NO,
					  SUM(TRANS_AMT_EX) AS TRANS_AMT_EX,
					  SUM(TRANS_AMT) AS TRANS_AMT
			   FROM	BANK_SENDD
			   WHERE C_CODE = @P_CD_COMPANY 
			   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
			 --AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
			   GROUP BY NO_DOCU, LINE_NO)CC
	ON BB.NO_DOCU = CC.NO_DOCU AND BB.NO_DOLINE = CC.LINE_NO
	LEFT JOIN MA_EMP J 
	ON BB.CD_COMPANY = J.CD_COMPANY AND BB.CD_EMPLOY = J.NO_EMP
	--WHERE		BB.AMT > 0 
	--LEFT JOIN 
	--			( 
	--				SELECT	TR_CODE, NM_RMK
	--				FROM	BANK_DEPOSIT E1   
	--				WHERE	E1.CD_COMPANY = @P_CD_COMPANY 
	--				AND		E1.TP_DEPOSIT = @P_TP_GUBUN 
	--				AND		(@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL OR E1.TR_CODE >= @P_CD_FPARTNER)  
	--				AND		(@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL OR E1.TR_CODE <= @P_CD_TPARTNER) 
	--			) E 
	--ON			BB.CD_EMPLOY = E.TR_CODE 
	WHERE ((@P_TP_DEPOSIT = '' OR @P_TP_DEPOSIT IS NULL) 
		OR (@P_TP_DEPOSIT = 'Y' AND J.NO_BANK2 IS NOT NULL) 
		OR (@P_TP_DEPOSIT = 'N' AND J.NO_BANK2 IS NULL) )
	-- 반제여부, 이체여부를 같이 체크함
    AND	(((@P_YN_BAN = '' OR @P_YN_BAN IS NULL)
	   OR (@P_YN_BAN = 'N' AND (BB.AMT - BB.AMT_BAN) <> 0)
	   OR (@P_YN_BAN = 'Y' AND (BB.AMT - BB.AMT_BAN) = 0))
	 AND ((@P_YN_TRAN = '' OR @P_YN_TRAN IS NULL)
	   OR (@P_YN_TRAN = 'N' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) <> 0)
	   OR (@P_YN_TRAN = 'Y' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) = 0)))
	ORDER BY BB.NO_DOCU, BB.NO_DOLINE 
END
ELSE IF @P_TP_SET = '4'
BEGIN 
	SELECT DISTINCT 'N' S, 
		   BB.DT_ACCT AS ACCT_DATE, 
		   BB.NO_ACCT AS DOCU_NO, 
		   BB.NO_DOCU, 
		   BB.NO_DOLINE AS LINE_NO, 
		   (CASE WHEN ISNULL(BB.NO_DOCU, '')= '' THEN NULL ELSE BB.NO_DOCU + '-' + CONVERT(VARCHAR, BB.NO_DOLINE) END) AS NO_DOCU_LINE_NO,
		   BB.CD_PC AS NODE_CODE, 
		   BB.CD_ACCT AS ACCT_CODE, 
		   BB.NM_ACCT AS ACCT_NAME, 
		   BB.CD_EXCH,
		   BB.NM_EXCH,
		   BB.AMT, -- 금액
		   BB.AMT_BAN, -- 반재금액
		   BB.AM_EX,
		   BB.AM_EXBAN,
		   ISNULL(CC.TRANS_AMT, 0) AS TRANS_AMT_A,-- 이체금액
		   ISNULL(CC.TRANS_AMT_EX, 0) AS TRANS_AMT_EX_A,
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AMT - BB.AMT_BAN) ELSE (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) END) AS TRANS_AMT, -- 이체가능금액
		   (CASE WHEN (BB.AMT_BAN > 0 OR BB.AM_EXBAN > 0) THEN (BB.AM_EX - BB.AM_EXBAN) ELSE (BB.AM_EX - ISNULL(CC.TRANS_AMT_EX, 0)) END) AS TRANS_AMT_EX,
		   BB.DT_END, 
		   BB.NM_NOTE AS CLIENT_NOTE, 
		   '' AS TRANS_NOTE, 
		   J.CD_BANK2 AS TRANS_BANK_CODE, 
		   --F.BANK_NAME TRANS_BANK_NAME, 
		   (SELECT NM_SYSDEF FROM MA_CODEDTL WHERE CD_FIELD = 'HR_P000006' AND CD_SYSDEF = J.CD_BANK2 AND CD_COMPANY = @P_CD_COMPANY) AS TRANS_BANK_NAME, 
		   J.NO_BANK2 AS TRANS_ACCT_NO, 
		   J.NM_DEPOSIT2 AS TRANS_NAME,
		   J.NO_EMP AS CUST_CODE, 
		   J.NM_KOR AS CUST_NAME,
		   '' AS TRANS_DATE, 
		   '' AS TRANS_SEQ, 
		   '' AS BANK_CODE, 
		   '' AS ACCT_NO, 
		   ' ' AS SEQ, 
		   ' ' AS NO_COMPANY, 
		   (SELECT NM_DEPT FROM MA_DEPT WHERE CD_DEPT = BB.CD_DEPT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPT, 
		   (SELECT NM_CC FROM MA_CC WHERE CD_CC = BB.CD_CC AND CD_COMPANY = @P_CD_COMPANY) AS NM_CC, 
		   (SELECT NM_PROJECT FROM SA_PROJECTH WHERE NO_PROJECT = BB.CD_PJT AND NO_SEQ = 1 AND CD_COMPANY = @P_CD_COMPANY) AS NM_PJT, 
		   (SELECT NM_PC FROM MA_PC WHERE CD_PC = BB.CD_PC AND CD_COMPANY = @P_CD_COMPANY) AS NM_PC,
		   BB.CD_DEPOSIT, 
		   (SELECT NM_DEPOSIT FROM FI_DEPOSIT WHERE CD_DEPOSIT = BB.CD_DEPOSIT AND CD_COMPANY = @P_CD_COMPANY) AS NM_DEPOSIT,
		   (CASE WHEN NEOE.FN_SERVERKEY('Y','LDBECK|') ='Y' THEN J.DC_RMK ELSE NULL END) AS DC_RMK,
		   BB.D61,
		   '' AS CONTNO,
		   '' AS NM_BANK_EN,
		   '' AS CD_BANK_NATION,
		   '' AS NM_BANK_NATION,
		   '' AS NO_SORT,
		   '' AS CD_DEPOSIT_NATION,
		   '' AS NM_DEPOSIT_NATION,
		   '' AS NO_SWIFT,
		   '' AS DC_DEPOSIT_TEL,
		   '' AS DC_DEPOSIT_ADDRESS,
		   '' AS NO_BANK_BIC,
		   BB.ST_GWARE
	FROM (SELECT A.CD_COMPANY, 
				 B.DT_ACCT, 
				 A.NO_DOCU, 
				 B.NO_ACCT, 
				 A.NO_DOLINE, 
				 A.CD_PC, 
				 A.CD_ACCT, 
				 C.NM_ACCT, 
				 B.NM_NOTE, 
				 B.CD_EMPLOY,
				 B.CD_EXCH,
				 MC.NM_SYSDEF AS NM_EXCH,  
				 --(A.AM_DOCU - A.AM_BAN ) AMT, 
				 A.AM_DOCU AS AMT,
				 A.AM_BAN AS AMT_BAN,
				 A.AM_EX,
				 A.AM_EXBAN,
				 B.DT_END,
				 B.CD_DEPT, 
				 B.CD_CC,
				 B.CD_PJT, 
				 B.CD_DEPOSIT, 
				 A.CD_PARTNER, 
				 (CASE WHEN B.CD_MNG1='C15' THEN B.NM_MNGD1 
					   WHEN B.CD_MNG2='C15' THEN B.NM_MNGD2 
					   WHEN B.CD_MNG3='C15' THEN B.NM_MNGD3 
					   WHEN B.CD_MNG4='C15' THEN B.NM_MNGD4 
					   WHEN B.CD_MNG5='C15' THEN B.NM_MNGD5 
					   WHEN B.CD_MNG6='C15' THEN B.NM_MNGD6 
					   WHEN B.CD_MNG7='C15' THEN B.NM_MNGD7 
					   WHEN B.CD_MNG8='C15' THEN B.NM_MNGD8 
					   ELSE '' END ) AS CD_DEPOSITNO,
		         (CASE 'D61' WHEN B.CD_MNG1 THEN B.NM_MNGD1 
							 WHEN B.CD_MNG2 THEN B.NM_MNGD2 
							 WHEN B.CD_MNG3 THEN B.NM_MNGD3 
							 WHEN B.CD_MNG4 THEN B.NM_MNGD4 
				             WHEN B.CD_MNG5 THEN B.NM_MNGD5 
							 WHEN B.CD_MNG6 THEN B.NM_MNGD6 
							 WHEN B.CD_MNG7 THEN B.NM_MNGD7 
							 WHEN B.CD_MNG8 THEN B.NM_MNGD8 END) AS D61,
				 B.ST_GWARE
			     FROM FI_BANH A 
			     JOIN FI_DOCU B ON A.NO_DOCU = B.NO_DOCU AND A.NO_DOLINE = B.NO_DOLINE AND A.CD_PC = B.CD_PC AND A.CD_COMPANY = B.CD_COMPANY 
				 JOIN FI_ACCTCODE C ON A.CD_COMPANY = C.CD_COMPANY AND A.CD_ACCT = C.CD_ACCT
				 LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = B.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = B.CD_EXCH
				 --WHERE (A.DT_ACCT >= @P_DT_FACCT AND A.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' AND A.ST_BAN = '1' )  
				 WHERE (B.DT_ACCT >= @P_DT_FACCT AND B.DT_ACCT <= @P_DT_TACCT AND A.ST_DOCU = '2' )  
				 AND (A.CD_PC IN (SELECT CD_STR FROM TF_GETSPLIT(@P_CD_PC)))  
				 AND (A.CD_COMPANY = @P_CD_COMPANY AND A.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND (C.CD_COMPANY = @P_CD_COMPANY AND C.CD_ACCT IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ACCT))) 
				 AND ((@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL) AND (@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL) 
				   OR (A.CD_PARTNER >= @P_CD_FPARTNER AND  A.CD_PARTNER <= @P_CD_TPARTNER) 
				   OR (B.CD_EMPLOY >= @P_CD_FPARTNER AND B.CD_EMPLOY <= @P_CD_TPARTNER) 
				   OR (B.CD_UMNG5 >= @P_CD_FPARTNER AND B.CD_UMNG5 <= @P_CD_TPARTNER)) 
				 AND (@P_DT_END_F = '' OR @P_DT_END_F IS NULL OR ISNULL(B.DT_END,'') >= @P_DT_END_F) 
				 AND (@P_DT_END_T = '' OR @P_DT_END_T IS NULL OR ISNULL(B.DT_END,'') <= @P_DT_END_T)  
				 AND (@P_CD_DOCU = '' OR @P_CD_DOCU IS NULL OR B.CD_DOCU = @P_CD_DOCU) 
				 AND A.NO_DOCU NOT IN (SELECT	NO_DOCU 
									   FROM	BANK_SENDSUB 
									   WHERE C_CODE = @P_CD_COMPANY 
									   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
									   AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
									   AND LINE_NO  = A.NO_DOLINE)) BB 
	LEFT JOIN (SELECT NO_DOCU,
					  LINE_NO,
					  SUM(TRANS_AMT_EX) AS TRANS_AMT_EX,
					  SUM(TRANS_AMT) AS TRANS_AMT
			   FROM	BANK_SENDD
			   WHERE C_CODE = @P_CD_COMPANY 
			   AND NODE_CODE IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PC)) 
			 --AND ACCT_DATE BETWEEN @P_DT_FACCT AND @P_DT_TACCT 
			   GROUP BY NO_DOCU, LINE_NO)CC
	ON BB.NO_DOCU = CC.NO_DOCU AND BB.NO_DOLINE = CC.LINE_NO
	LEFT JOIN MA_PARTNER_DEPOSIT H ON BB.CD_COMPANY = H.CD_COMPANY AND BB.CD_PARTNER = H.CD_PARTNER AND BB.CD_DEPOSITNO = H.NO_DEPOSIT
	LEFT JOIN MA_EMP J ON BB.CD_COMPANY = J.CD_COMPANY AND BB.CD_EMPLOY = J.NO_EMP
	LEFT JOIN MA_PARTNER I ON BB.CD_COMPANY = I.CD_COMPANY AND BB.CD_PARTNER = I.CD_PARTNER 
	--LEFT JOIN 
	--			( 
	--				SELECT	TR_CODE, NM_RMK
	--				FROM	BANK_DEPOSIT E1   
	--				WHERE	E1.CD_COMPANY = @P_CD_COMPANY 
	--				AND		E1.TP_DEPOSIT = @P_TP_GUBUN 
	--				AND		(@P_CD_FPARTNER = '' OR @P_CD_FPARTNER IS NULL OR E1.TR_CODE >= @P_CD_FPARTNER)  
	--				AND		(@P_CD_TPARTNER = '' OR @P_CD_TPARTNER IS NULL OR E1.TR_CODE <= @P_CD_TPARTNER) 
	--			) E 
	--ON			BB.CD_EMPLOY = E.TR_CODE 
	--WHERE		BB.AMT > 0 
	WHERE ((@P_TP_DEPOSIT = '' OR @P_TP_DEPOSIT IS NULL) 
	    OR (@P_TP_DEPOSIT = 'Y' AND H.CD_PARTNER IS NOT NULL) 
		OR (@P_TP_DEPOSIT = 'N' AND H.CD_PARTNER IS NULL) )
	-- 반제여부, 이체여부를 같이 체크함
    AND (((@P_YN_BAN = '' OR @P_YN_BAN IS NULL)
	   OR (@P_YN_BAN = 'N' AND (BB.AMT - BB.AMT_BAN) <> 0)
	   OR (@P_YN_BAN = 'Y' AND (BB.AMT - BB.AMT_BAN) = 0))
	 AND ((@P_YN_TRAN = '' OR @P_YN_TRAN IS NULL)
	   OR (@P_YN_TRAN = 'N' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) <> 0)
	   OR (@P_YN_TRAN = 'Y' AND (BB.AMT - ISNULL(CC.TRANS_AMT, 0)) = 0)))
	ORDER BY BB.NO_DOCU, BB.NO_DOLINE 
END
GO

