USE [NEOE]
GO
/****** Object:  Trigger [NEOE].[TI_MA_EXCHANGE]    Script Date: 2020-09-18 오후 3:27:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/** 1회차 환율 : 최초고시환율 -> 전일 환율의 평균 값 (회계처리시 사용)
	2회차 환율 : 최초고시환율의 경우, 환율 변동 트랜드가 반영되어 있지 않기 때문에 2회차 환율을 기준으로 계산한 영업환율을 실제 영업에서 사용 **/

ALTER TRIGGER [NEOE].[TI_MA_EXCHANGE] ON [NEOE].[MA_EXCHANGE] 
AFTER INSERT
AS 

BEGIN
	SET NOCOUNT ON

	IF NOT EXISTS (SELECT 1 
				   FROM CZ_MA_EXCHANGE EX
				   JOIN INSERTED TI ON TI.CD_COMPANY = EX.CD_COMPANY AND TI.YYMMDD = EX.YYMMDD AND 1 = EX.NO_SEQ AND '000' = EX.CURR_SOUR AND '000' = EX.CURR_DEST)
	BEGIN
		INSERT INTO CZ_MA_EXCHANGE
		(
			CD_COMPANY,
			YYMMDD,
			NO_SEQ,
			CURR_SOUR,
			CURR_DEST,
			RATE_PURCHASE,
			RATE_SALES,			 
			ID_INSERT,
			DTS_INSERT
		)
		SELECT CD_COMPANY,
			   YYMMDD,
			   1 AS NO_SEQ,
			   '000' AS CURR_SOUR,
			   '000' AS CURR_DEST,
			   1 AS RATE_PURCHASE,
			   1 AS RATE_SALES,
			   'AUTO' AS ID_INSERT,			
			   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
		FROM INSERTED
		WHERE CD_COMPANY IN ('K100', 'K200', 'K300', 'W100')
	END;

	MERGE INTO CZ_MA_EXCHANGE AS T 
		  USING (SELECT TI.CD_COMPANY, 
						TI.YYMMDD,
						TI.NO_SEQ,
						TI.CURR_SOUR,
						TI.CURR_DEST,
						TI.RATE_BASE,
						TI.RATE_SALE,
						TI.RATE_BUY,
						ISNULL(FE.RT_EXCH, 0) AS RT_EXCH 
				 FROM INSERTED TI
				 LEFT JOIN (SELECT CD_COMPANY, 
								   ROUND((AVG(RT_EXCH) * 0.98), -1) AS RT_EXCH
							FROM CZ_MA_FORWARD_EXCHANGE
							WHERE DT_CONTRACT BETWEEN CONVERT(CHAR(8), DATEADD(MM, -2, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112)
							GROUP BY CD_COMPANY) FE
				 ON FE.CD_COMPANY = (CASE WHEN TI.CD_COMPANY = 'K300' THEN 'K100' ELSE TI.CD_COMPANY END)
				 WHERE TI.CD_COMPANY IN ('K100', 'K200', 'K300')
				 AND TI.NO_SEQ IN (1, 2)) S
		  ON T.CD_COMPANY = S.CD_COMPANY 
		  AND T.YYMMDD = S.YYMMDD
		  AND T.NO_SEQ = S.NO_SEQ
		  AND T.CURR_SOUR = S.CURR_SOUR
		  AND T.CURR_DEST = S.CURR_DEST
		  WHEN MATCHED THEN 
			UPDATE SET RATE_PURCHASE = (CASE WHEN S.CURR_SOUR = '001' THEN (CASE WHEN S.RT_EXCH > ROUND(S.RATE_BASE * 1.03, -1) THEN S.RT_EXCH
																															    ELSE ROUND(S.RATE_BASE * 1.03, -1) END) 
																	  ELSE ROUND(S.RATE_BUY * 1.02, -1) END),
					   RATE_SALES = (CASE WHEN S.CURR_SOUR = '001' THEN (CASE WHEN S.RT_EXCH > ROUND(S.RATE_BASE * 0.97, -1) THEN ROUND(S.RATE_BASE * 0.97, -1) 
																														     ELSE S.RT_EXCH END)
																   ELSE ROUND(S.RATE_SALE * 0.98, -1) END),
					   ID_UPDATE = 'AUTO',
				       DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
		  WHEN NOT MATCHED THEN 
			INSERT (CD_COMPANY,
					YYMMDD,
					NO_SEQ,
					CURR_SOUR,
					CURR_DEST,
					RATE_PURCHASE,
					RATE_SALES,			 
					ID_INSERT,
					DTS_INSERT) 
			VALUES (S.CD_COMPANY, 
					S.YYMMDD,
					S.NO_SEQ,
					S.CURR_SOUR,
					S.CURR_DEST,
					(CASE WHEN S.CURR_SOUR = '001' THEN (CASE WHEN S.RT_EXCH > ROUND(S.RATE_BASE * 1.03, -1) THEN S.RT_EXCH
																											 ELSE ROUND(S.RATE_BASE * 1.03, -1) END)
												   ELSE ROUND(S.RATE_BUY * 1.02, -1) END),
					(CASE WHEN S.CURR_SOUR = '001' THEN (CASE WHEN S.RT_EXCH > ROUND(S.RATE_BASE * 0.97, -1) THEN ROUND(S.RATE_BASE * 0.97, -1) 
																											 ELSE S.RT_EXCH END)
												   ELSE ROUND(S.RATE_SALE * 0.98, -1) END),			 
					'AUTO',			
					NEOE.SF_SYSDATE(GETDATE()));

	UPDATE ME
	SET ME.RATE_BASE = (ME.RATE_BASE / 100),
		ME.RATE_SALE = (ME.RATE_SALE / 100),
		ME.RATE_BUY = (ME.RATE_BUY / 100),
		ID_UPDATE = 'AUTO',
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	FROM MA_EXCHANGE ME
	JOIN INSERTED TI ON TI.CD_COMPANY = ME.CD_COMPANY AND TI.YYMMDD = ME.YYMMDD AND TI.NO_SEQ = ME.NO_SEQ AND TI.CURR_SOUR = ME.CURR_SOUR AND TI.CURR_DEST = ME.CURR_DEST
	WHERE ME.CD_COMPANY IN ('K100', 'K200', 'K300', 'W100') 
	AND ME.CURR_SOUR = '002'
	AND ME.CURR_DEST = '000'

	UPDATE ME
	SET ME.RATE_PURCHASE = (ME.RATE_PURCHASE / 100),
		ME.RATE_SALES = (ME.RATE_SALES / 100),
		ID_UPDATE = 'AUTO',
		DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	FROM CZ_MA_EXCHANGE ME
	JOIN INSERTED TI ON TI.CD_COMPANY = ME.CD_COMPANY AND TI.YYMMDD = ME.YYMMDD AND TI.NO_SEQ = ME.NO_SEQ AND TI.CURR_SOUR = ME.CURR_SOUR AND TI.CURR_DEST = ME.CURR_DEST
	WHERE ME.CD_COMPANY IN ('K100', 'K200', 'K300') 
	AND ME.CURR_SOUR = '002'
	AND ME.CURR_DEST = '000'

	-- 딘텍 싱가폴
	UPDATE ME
	SET ME.RATE_BASE = (CASE WHEN ME.CURR_SOUR = '002' THEN FORMAT(ROUND((ME.RATE_BASE / 100) / ME1.RATE_BASE, 4), '0.0000') 
													   ELSE FORMAT(ROUND(ME.RATE_BASE / ME1.RATE_BASE, 4), '0.0000') END),
		ME.RATE_BUY = 0,
		ME.RATE_SALE = 0,
		ME.ID_UPDATE = 'AUTO',
		ME.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	FROM MA_EXCHANGE ME
	JOIN MA_EXCHANGE ME1 ON ME1.CD_COMPANY = 'K100' AND ME1.YYMMDD = ME.YYMMDD AND ME1.NO_SEQ = ME.NO_SEQ AND ME1.CURR_SOUR = '001' AND ME1.CURR_DEST = ME.CURR_DEST
	WHERE ME.CD_COMPANY = 'S100'
	AND EXISTS (SELECT 1 
				FROM INSERTED TI 
				WHERE TI.CD_COMPANY = ME.CD_COMPANY 
				AND TI.YYMMDD = ME.YYMMDD 
				AND TI.NO_SEQ = ME.NO_SEQ 
				AND TI.CURR_SOUR = ME.CURR_SOUR 
				AND TI.CURR_DEST = ME.CURR_DEST)
    
	INSERT INTO CZ_MA_EXCHANGE
	(
		CD_COMPANY,
		YYMMDD,
		NO_SEQ,
		CURR_SOUR,
		CURR_DEST,
		RATE_PURCHASE,
		RATE_SALES,
		YN_USE,
		ID_INSERT,
		DTS_INSERT
	)
	SELECT TI.CD_COMPANY,
		   TI.YYMMDD,
		   TI.NO_SEQ,
		   TI.CURR_SOUR,
		   TI.CURR_DEST,
		   0 AS RATE_PURCHASE,
		   0 AS RATE_SALES,
		   'Y' AS YN_USE,
		   'AUTO' AS ID_INSERT,
		   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT 
	FROM INSERTED TI
	WHERE TI.CD_COMPANY = 'S100'
	AND NOT EXISTS (SELECT 1 
					FROM CZ_MA_EXCHANGE CE 
					WHERE CE.CD_COMPANY = TI.CD_COMPANY 
					AND CE.YYMMDD = TI.YYMMDD 
					AND CE.NO_SEQ = TI.NO_SEQ 
					AND CE.CURR_SOUR = TI.CURR_SOUR 
					AND CE.CURR_DEST = TI.CURR_DEST)

	UPDATE CE
	SET CE.RATE_SALES = (CASE WHEN CE.CURR_SOUR = '001' THEN ME.RATE_BASE
							  WHEN CE.CURR_SOUR = '002' THEN (ME.RATE_BASE - 0.0001)
							  WHEN CE.CURR_SOUR = 'SGD' THEN (ME.RATE_BASE - 0.01)
							  WHEN CE.CURR_SOUR IN ('003', 'GBP', 'NOK', 'MYR', 'DKK') THEN (ME.RATE_BASE - 0.03) ELSE ME.RATE_BASE END),
	    CE.RATE_PURCHASE = (CASE WHEN CE.CURR_SOUR = '001' THEN ME.RATE_BASE
							     WHEN CE.CURR_SOUR = '002' THEN (ME.RATE_BASE + 0.0003)
							     WHEN CE.CURR_SOUR = 'SGD' THEN (ME.RATE_BASE + 0.02)
							     WHEN CE.CURR_SOUR IN ('003', 'GBP', 'NOK', 'MYR', 'DKK') THEN (ME.RATE_BASE + 0.03) ELSE ME.RATE_BASE END),
		CE.ID_UPDATE = 'AUTO',
		CE.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
	FROM CZ_MA_EXCHANGE CE
	JOIN MA_EXCHANGE ME ON ME.CD_COMPANY = CE.CD_COMPANY AND ME.YYMMDD = CE.YYMMDD AND ME.NO_SEQ = CE.NO_SEQ AND ME.CURR_SOUR = CE.CURR_SOUR AND ME.CURR_DEST = CE.CURR_DEST
	WHERE CE.CD_COMPANY = 'S100'
	AND EXISTS (SELECT 1 
				FROM INSERTED TI 
				WHERE TI.CD_COMPANY = CE.CD_COMPANY 
				AND TI.YYMMDD = CE.YYMMDD 
				AND TI.NO_SEQ = CE.NO_SEQ 
				AND TI.CURR_SOUR = CE.CURR_SOUR 
				AND TI.CURR_DEST = CE.CURR_DEST)

	-- 해당 날짜, 통화에 대해서 SEQ 관계없이 모두 사용 N 처리
	--UPDATE A SET
	--	YN_USE = 'N'
	--FROM CZ_MA_EXCHANGE	AS A
	--WHERE 1 = 1
	--	AND EXISTS (SELECT 1 FROM INSERTED WHERE CD_COMPANY = A.CD_COMPANY AND YYMMDD = A.YYMMDD AND CURR_SOUR = A.CURR_SOUR AND CURR_DEST = A.CURR_DEST)

	---- 해당 날짜, 통화에 대해서 제일 최근 것만 사용 Y 처리
	--UPDATE A SET
	--	YN_USE = 'Y'
	--FROM CZ_MA_EXCHANGE	AS A
	--JOIN
	--(
	--	SELECT
	--		  ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, YYMMDD, CURR_SOUR, CURR_DEST ORDER BY NO_SEQ DESC)	AS RN
	--		, CD_COMPANY
	--		, YYMMDD
	--		, NO_SEQ
	--		, CURR_SOUR
	--		, CURR_DEST
	--	FROM CZ_MA_EXCHANGE AS A
	--	WHERE 1 = 1
	--		AND EXISTS (SELECT 1 FROM INSERTED WHERE CD_COMPANY = A.CD_COMPANY AND YYMMDD = A.YYMMDD AND CURR_SOUR = A.CURR_SOUR AND CURR_DEST = A.CURR_DEST)
	--)					AS B ON A.CD_COMPANY = B.CD_COMPANY AND A.YYMMDD = B.YYMMDD AND A.NO_SEQ = B.NO_SEQ AND A.CURR_SOUR = B.CURR_SOUR AND A.CURR_DEST = B.CURR_DEST
	--WHERE B.RN = 1

END

