USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_GIRSCHL_S]    Script Date: 2015-06-19 오전 11:44:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--EXEC SP_CZ_SA_GIRSCHL_S 'TEST', '1', '1', '1', '1', '1', '1'
ALTER PROCEDURE [NEOE].[SP_CZ_SA_GIRSCHL_S]  
(              
    @P_CD_COMPANY			NVARCHAR(7),	   -- 회사코드
    @P_KEY					NVARCHAR(20),	   -- KEY                                             
    @P_YN_BOM				NVARCHAR(1) = 'N',
	@P_STA_SO				NVARCHAR(3) = '',  -- 처리상태              
    @P_RET					NVARCHAR(3) = '',  -- 출고구분                         
    @P_TP_SO				NVARCHAR(4) = ''   -- 수주유형
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

IF EXISTS (SELECT 1 FROM SA_GIRH WHERE CD_COMPANY = @P_CD_COMPANY AND NO_GIR = @P_KEY)
BEGIN
	SELECT 'N' AS S,
		   GL.CD_COMPANY,
		   GL.NO_GIR,
		   GL.SEQ_GIR,
		   GL.CD_ITEM,
		   QL.NO_DSP,
		   QL.NM_SUBJECT,
		   QL.CD_ITEM_PARTNER,
		   QL.CD_UNIQUE_PARTNER,
		   ISNULL(QL.NM_ITEM_PARTNER, MI.NM_ITEM) AS NM_ITEM_PARTNER,
		   QL.TP_BOM,
		   QL.YN_DSP_RMK,
		   QL.DC_RMK,
		   MI.NM_ITEM,
		   MI.STND_ITEM,
		   MI.CLS_ITEM,
		   MI.UNIT_WEIGHT,
		   GL.UNIT,
		   GH.STA_GIR,
		   MC3.NM_SYSDEF AS NM_STA_GIR,
		   GH.TP_BUSI,
		   MC.NM_SYSDEF AS NM_BUSI,
		   GL.CD_EXCH,
		   MC2.NM_SYSDEF AS NM_EXCH,
		   GH.CD_PLANT,
		   GL.DT_DUEDATE,
		   ST.NM_SO,
		   SL.NO_SO,
		   SL.SEQ_SO,
		   JT.NM_QTIOTP AS NM_TP_GI,
		   SG.NM_SALEGRP,
		   GL.GI_PARTNER,
		   MP.LN_PARTNER AS GI_LN_PARTNER,
		   ME.NM_KOR,
		   GL.NO_PROJECT,
		   SP.NM_PROJECT,
		   MC1.NM_SYSDEF AS NM_RETURN,
		   MS.NM_SL,
		   SH.FG_TRANSPORT,
		   MP1.CD_PARTNER_GRP,
		   MC4.NM_SYSDEF AS NM_PARTNER_GRP,
		   GL.DC_RMK AS L_DC_RMK,
		   ISNULL(FT.QT_TAX, 0) AS QT_TAX,
		   MH.NO_HULL,
		   MH.NM_VESSEL,
		   SH.NO_PO_PARTNER,
		   OL.DT_IO,
		   WD.DT_COMPLETE,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(SL.QT_SO, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(SL.QT_SO, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_SO,
		   (ISNULL(SL.QT_PO, 0) + ISNULL(SB.QT_STOCK, 0)) AS QT_PO,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GIR,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -ISNULL(GL.QT_GIR_IM, 0) 
										 ELSE ISNULL(GL.QT_GIR_IM, 0) END) AS QT_GIR_IM,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR_STOCK, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GIR_STOCK, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GIR_STOCK,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GI,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) 
										 ELSE (ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) END) AS WEIGHT,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) 
										 ELSE (ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) END) AS QT_GI_WEIGHT,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE ISNULL(SL.UM_EX_Q, 0) END) AS UM_EX_Q,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -ISNULL(GL.UM, 0) 
																		 ELSE ISNULL(GL.UM, 0) END) END) AS UM_EX,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 1), 2) 
																		 ELSE ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 1), 2) END) END) AS UM,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (ISNULL(SL.UM_EX_Q, 0) * ISNULL(GL.QT_GIR, 0)) END) AS AM_EX_Q,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE ISNULL(SL.RT_DC, 0) END) AS RT_DC,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE -ROUND((ISNULL(SL.UM_EX_Q, 0) - ISNULL(SL.UM_EX_S, 0)) * ISNULL(GL.QT_GIR, 0), 2) END) AS AM_DC,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -GL.AM_GIR 
																		 ELSE GL.AM_GIR END) END) AS AM_GIR,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -GL.AM_GIRAMT 
																	     ELSE GL.AM_GIRAMT END) END) AS AM_GIRAMT,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NM_SUPPLIER, '') = '' THEN 'STOCK' 
																																	  ELSE 'STOCK,' + QL.NM_SUPPLIER END) 
													 ELSE (CASE WHEN QL.TP_BOM = 'P' THEN 'BOM' 
																					 ELSE QL.NM_SUPPLIER END) END) AS NM_SUPPLIER,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NM_SUPPLIER, '') = '' THEN 'STOCK (' + GL.CD_ITEM + ')' 
																																	  ELSE 'STOCK,' + QL.NM_SUPPLIER + ' (' + GL.CD_ITEM + ')' END) 
													 ELSE (CASE WHEN QL.TP_BOM = 'P' THEN 'BOM' 
																					 ELSE QL.NM_SUPPLIER END) END) AS NM_SUPPLIER_RPT,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NO_LOCATION, '') = '' THEN MI.CD_ZONE 
																																	  ELSE MI.CD_ZONE + ',' + QL.NO_LOCATION END) 
													 ELSE QL.NO_LOCATION END) AS NO_LOCATION,
		   (CASE WHEN PL.QT_PACK > 0 THEN 'Y' 
									 ELSE (CASE WHEN PL.QT_GIR > 0 THEN 'P' 
																   ELSE 'N' END) END) AS STA_PACK,
		   (CASE WHEN (ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GI, 0)) > ISNULL(GL.QT_GIR, 0) THEN 'Y' ELSE 'N' END) AS YN_PARTIAL,
		   GL.YN_ADD_STOCK,
		   QL.GRP_ITEM,
		   IG.NM_ITEMGRP,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(SL.UM_EX_Q, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								     FROM MA_EXCHANGE EX 
																								     WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								     AND EX.YYMMDD = SH.DT_SO 
																								     AND EX.CURR_SOUR = '001' 
																								     AND EX.CURR_DEST = '000'
																								     AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD_Q,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), -ROUND((ISNULL(SL.UM_EX_Q, 0) - ISNULL(SL.UM_EX_S, 0)) / (SELECT ISNULL(RATE_BASE, 1) 
																																FROM MA_EXCHANGE EX 
																																WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																																AND EX.YYMMDD = SH.DT_SO 
																																AND EX.CURR_SOUR = '001' 
																																AND EX.CURR_DEST = '000'
																																AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD_DC,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(GL.UM, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								FROM MA_EXCHANGE EX 
																								WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								AND EX.YYMMDD = SH.DT_SO 
																								AND EX.CURR_SOUR = '001' 
																								AND EX.CURR_DEST = '000'
																								AND EX.NO_SEQ = 1), 2)) ELSE NULL END) AS UM_USD,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(GL.UM, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								FROM MA_EXCHANGE EX 
																								WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								AND EX.YYMMDD = SH.DT_SO 
																								AND EX.CURR_SOUR = '001' 
																								AND EX.CURR_DEST = '000'
																								AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD,
	       (GL.NO_GIR + '-' + GL.NO_SO) AS NO_KEY1,
		   ISNULL(GL.TXT_USERDEF1, '') AS CD_QR,
		   ISNULL(GL.TXT_USERDEF1, 'RCT') AS CD_QR_RCT,
		   ISNULL(GL.TXT_USERDEF2, 'CI') AS CD_QR_CI,
		   ISNULL(GL.TXT_USERDEF3, 'PL') AS CD_QR_PL,
		   FT.MODEL,
	       FT.UNIT_IMP,
	       FT.HSCODE,
	       FT.ORIGIN,
		   FT.CUSTOMS,
		   (CASE WHEN EXISTS (SELECT 1 
		                      FROM PU_POL PL
			                  WHERE PL.CD_COMPANY = SL.CD_COMPANY
			                  AND PL.NO_SO = SL.NO_SO
			                  AND PL.NO_SOLINE = SL.SEQ_SO
			                  AND PL.YN_BL = 'Y') THEN 'Y' ELSE 'N' END) AS YN_BL
	FROM SA_GIRL GL
	LEFT JOIN SA_GIRH GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
	LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GL.CD_COMPANY AND WD.NO_GIR = GL.NO_GIR
	LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = GL.CD_COMPANY AND SL.NO_SO = ISNULL(GL.NO_SO, GL.NO_SO_MGMT) AND SL.SEQ_SO = (CASE WHEN GL.SEQ_SO = 0 THEN GL.NO_SOLINE_MGMT ELSE GL.SEQ_SO END)
	LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = SL.CD_COMPANY AND SH.NO_SO = SL.NO_SO
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE,
					  MAX(OH.DT_IO) AS DT_IO
			   FROM MM_QTIO OL
			   JOIN MM_QTIOH OH ON OH.CD_COMPANY = OL.CD_COMPANY AND OH.NO_IO = OL.NO_IO
			   GROUP BY OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE) OL 
	ON OL.CD_COMPANY = GL.CD_COMPANY AND OL.NO_ISURCV = GL.NO_GIR AND OL.NO_ISURCVLINE = GL.SEQ_GIR
	LEFT JOIN CZ_MA_HULL MH ON MH.NO_IMO = WD.NO_IMO
	LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = GL.CD_COMPANY AND MI.CD_PLANT = GH.CD_PLANT AND MI.CD_ITEM = GL.CD_ITEM
	LEFT JOIN MM_EJTP JT ON JT.CD_COMPANY = GL.CD_COMPANY AND JT.CD_QTIOTP = GL.TP_GI
	LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = GL.CD_COMPANY AND SG.CD_SALEGRP = GL.CD_SALEGRP
	LEFT JOIN SA_PROJECTH SP ON SP.CD_COMPANY = GL.CD_COMPANY AND SP.NO_PROJECT = GL.NO_PROJECT
	LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = GL.CD_COMPANY AND MP.CD_PARTNER = GL.GI_PARTNER
	LEFT JOIN MA_PARTNER MP1 ON MP1.CD_COMPANY = GH.CD_COMPANY AND MP1.CD_PARTNER = GH.CD_PARTNER 
	LEFT JOIN MA_SL MS ON MS.CD_COMPANY = GL.CD_COMPANY AND MS.CD_PLANT = GH.CD_PLANT AND MS.CD_SL = GL.CD_SL
	LEFT JOIN SA_TPSO ST ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.TP_SO = SH.TP_SO
	LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = SH.CD_COMPANY AND ME.NO_EMP = SH.NO_EMP
	LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = GH.CD_COMPANY AND MC.CD_FIELD = 'PU_C000016' AND MC.CD_SYSDEF = GH.TP_BUSI
	LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = GH.CD_COMPANY AND MC1.CD_FIELD = 'PU_C000027' AND MC1.CD_SYSDEF = GH.YN_RETURN
	LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = GL.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000005' AND MC2.CD_SYSDEF = GL.CD_EXCH
	LEFT JOIN MA_CODEDTL MC3 ON MC3.CD_COMPANY = GH.CD_COMPANY AND MC3.CD_FIELD = 'CZ_SA00030' AND MC3.CD_SYSDEF = GH.STA_GIR
	LEFT JOIN MA_CODEDTL MC4 ON MC4.CD_COMPANY = MP1.CD_COMPANY AND MC4.CD_FIELD = 'MA_B000065' AND MC4.CD_SYSDEF = MP1.CD_PARTNER_GRP
	LEFT JOIN (SELECT QC.CD_COMPANY, QC.NO_FILE, QC.NO_LINE, QC.NO_LINE_PARENT, QC.NO_DSP, QC.NM_SUBJECT, QC.CD_ITEM_PARTNER, QC.CD_UNIQUE_PARTNER, QC.NM_ITEM_PARTNER, QC.TP_BOM, QC.YN_DSP_RMK, QC.DC_RMK,
					  QC.GRP_ITEM,
					  (QC.QT / (CASE WHEN QP.QT = 0 THEN 1 ELSE QP.QT END)) AS QT_BOM,
					  STUFF((SELECT DISTINCT ',' + MP.LN_PARTNER
							 FROM PU_POL PL
							 JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
							 LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = PH.CD_COMPANY AND MP.CD_PARTNER = PH.CD_PARTNER
							 WHERE PL.CD_COMPANY = QC.CD_COMPANY
							 AND PL.NO_SO = QC.NO_FILE
							 AND PL.NO_LINE = QC.NO_LINE 
							 FOR XML PATH('')),1,1,'') AS NM_SUPPLIER,
					  STUFF((SELECT DISTINCT ',' + LC.CD_LOCATION
							 FROM MM_QTIO OL
							 JOIN MM_QTIO_LOCATION LC ON LC.CD_COMPANY = OL.CD_COMPANY AND LC.NO_IO = OL.NO_IO AND LC.NO_IOLINE = OL.NO_IOLINE
							 WHERE OL.FG_PS = '1'
							 AND OL.CD_COMPANY = QC.CD_COMPANY
							 AND OL.CD_PJT = QC.NO_FILE
							 AND OL.NO_PSOLINE_MGMT = QC.NO_LINE
							 FOR XML PATH('')),1,1,'') AS NO_LOCATION  
			   FROM CZ_SA_QTNL QC
			   LEFT JOIN CZ_SA_QTNL QP ON QP.CD_COMPANY = QC.CD_COMPANY AND QP.NO_FILE = QC.NO_FILE AND QP.NO_LINE = QC.NO_LINE_PARENT) QL 
	ON QL.CD_COMPANY = SL.CD_COMPANY AND QL.NO_FILE = SL.NO_SO AND (QL.NO_LINE = SL.SEQ_SO OR QL.NO_LINE_PARENT = SL.SEQ_SO)
	LEFT JOIN MA_ITEMGRP IG ON IG.CD_COMPANY = QL.CD_COMPANY AND IG.CD_ITEMGRP = QL.GRP_ITEM
	LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_SO, IL.NO_SOLINE,
				      SUM(IL.QT_TAX) AS QT_TAX,
			   	      MAX(DL.MODEL) AS MODEL,
			   	      MAX(DL.UNIT) AS UNIT_IMP,
			   	      MAX(DL.HSCODE) AS HSCODE,
			   	      LEFT(MAX(DL.ORIGIN), 2) AS ORIGIN,
					  SUM(DL.CUSTOMS) AS CUSTOMS
			   FROM CZ_FI_IMP_PMTL IL
			   LEFT JOIN CZ_PU_IMPORT_DECLARATIONL DL ON DL.CD_COMPANY = IL.CD_COMPANY AND REPLACE(DL.NO_IMPORT, '-', '') = IL.NO_IMPORT AND DL.SEQ = IL.SEQ_IMPORT
			   LEFT JOIN CZ_PU_IMPORT_DECLARATIONH DH ON DH.CD_COMPANY = DL.CD_COMPANY AND DH.NO_IMPORT = DL.NO_IMPORT
			   GROUP BY IL.CD_COMPANY, IL.NO_SO, IL.NO_SOLINE) FT
	ON FT.CD_COMPANY = SL.CD_COMPANY AND FT.NO_SO = SL.NO_SO AND FT.NO_SOLINE = SL.SEQ_SO
	LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO,
			   		  ISNULL(SUM(GL.QT_GIR), 0) AS QT_GIR,
			   		  ISNULL(SUM(PL.QT_PACK), 0) AS QT_PACK 
			   FROM SA_SOL SL
			   JOIN CZ_SA_GIRL_PACK GL ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
			   LEFT JOIN (SELECT CD_COMPANY, NO_GIR, SEQ_GIR,
			   				     SUM(QT_PACK) AS QT_PACK 
			   		      FROM CZ_SA_PACKL
			   			  GROUP BY CD_COMPANY, NO_GIR, SEQ_GIR) PL 
			   ON PL.CD_COMPANY = GL.CD_COMPANY AND PL.NO_GIR = GL.NO_GIR AND PL.SEQ_GIR = GL.SEQ_GIR 
			   GROUP BY SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO) PL 
	ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.SEQ_SO = SL.SEQ_SO
	LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE,
					  SUM(SB.QT_STOCK) AS QT_STOCK
			   FROM CZ_SA_STOCK_BOOK SB
			   GROUP BY SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE) SB
	ON SB.CD_COMPANY = SL.CD_COMPANY AND SB.NO_FILE = SL.NO_SO AND SB.NO_LINE = SL.SEQ_SO
	WHERE GL.CD_COMPANY = @P_CD_COMPANY
	AND GL.NO_GIR = @P_KEY
	AND (@P_RET = '' OR GL.RET = @P_RET)
	AND (@P_TP_SO = '' OR SH.TP_SO = @P_TP_SO)
	AND (@P_YN_BOM <> 'N' OR (@P_YN_BOM = 'N' AND QL.TP_BOM <> 'C'))
	AND (@P_STA_SO = ''
	OR (@P_STA_SO = 'Y' AND ISNULL(GL.QT_GIR, 0) = ISNULL(GL.QT_GI, 0)) 
	OR (@P_STA_SO = 'N' AND ISNULL(GL.QT_GIR, 0) > ISNULL(GL.QT_GI, 0)))
	ORDER BY SL.NO_SO, QL.NO_DSP
	END
	ELSE
	BEGIN
	SELECT 'N' AS S,
		   GL.CD_COMPANY,
		   GL.NO_GIR,
		   GL.SEQ_GIR,
		   GL.CD_ITEM,
		   QL.NO_DSP,
		   QL.NM_SUBJECT,
		   QL.CD_ITEM_PARTNER,
		   QL.CD_UNIQUE_PARTNER,
		   QL.NM_ITEM_PARTNER,
		   QL.TP_BOM,
		   QL.YN_DSP_RMK,
		   QL.DC_RMK,
		   MI.NM_ITEM,
		   MI.STND_ITEM,
		   MI.CLS_ITEM,
		   MI.UNIT_WEIGHT,
		   GL.UNIT,
		   GH.STA_GIR,
		   MC3.NM_SYSDEF AS NM_STA_GIR,
		   GH.TP_BUSI,
		   MC.NM_SYSDEF AS NM_BUSI,
		   GL.CD_EXCH,
		   MC2.NM_SYSDEF AS NM_EXCH,
		   GH.CD_PLANT,
		   GL.DT_DUEDATE,
		   ST.NM_SO,
		   SL.NO_SO,
		   SL.SEQ_SO,
		   JT.NM_QTIOTP AS NM_TP_GI,
		   SG.NM_SALEGRP,
		   GL.GI_PARTNER,
		   MP.LN_PARTNER AS GI_LN_PARTNER,
		   ME.NM_KOR,
		   GL.NO_PROJECT,
		   SP.NM_PROJECT,
		   MC1.NM_SYSDEF AS NM_RETURN,
		   MS.NM_SL,
		   SH.FG_TRANSPORT,
		   MP1.CD_PARTNER_GRP,
		   MC4.NM_SYSDEF AS NM_PARTNER_GRP,
		   GL.DC_RMK AS L_DC_RMK,
		   ISNULL(FT.QT_TAX, 0) AS QT_TAX,
		   MH.NO_HULL,
		   MH.NM_VESSEL,
		   SH.NO_PO_PARTNER,
		   OL.DT_IO,
		   WD.DT_COMPLETE,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(SL.QT_SO, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(SL.QT_SO, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_SO,
		   (ISNULL(SL.QT_PO, 0) + ISNULL(SB.QT_STOCK, 0)) AS QT_PO,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GIR,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -ISNULL(GL.QT_GIR_IM, 0) 
										 ELSE ISNULL(GL.QT_GIR_IM, 0) END) AS QT_GIR_IM,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR_STOCK, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GIR_STOCK, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GIR_STOCK,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1)) 
										 ELSE (ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1)) END) AS QT_GI,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) 
										 ELSE (ISNULL(GL.QT_GIR, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) END) AS WEIGHT,
		   (CASE WHEN GH.YN_RETURN = 'Y' THEN -(ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) 
										 ELSE (ISNULL(GL.QT_GI, 0) * ISNULL(QL.QT_BOM, 1) * ISNULL(MI.WEIGHT, 0)) END) AS QT_GI_WEIGHT,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE ISNULL(SL.UM_EX_Q, 0) END) AS UM_EX_Q,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -ISNULL(GL.UM, 0) 
																		 ELSE ISNULL(GL.UM, 0) END) END) AS UM_EX,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 1), 2) 
																		 ELSE ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 1), 2) END) END) AS UM,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (ISNULL(SL.UM_EX_Q, 0) * ISNULL(GL.QT_GIR, 0)) END) AS AM_EX_Q,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE ISNULL(SL.RT_DC, 0) END) AS RT_DC,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE -ROUND((ISNULL(SL.UM_EX_Q, 0) - ISNULL(SL.UM_EX_S, 0)) * ISNULL(GL.QT_GIR, 0), 2) END) AS AM_DC,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -GL.AM_GIR 
																		 ELSE GL.AM_GIR END) END) AS AM_GIR,
		   (CASE WHEN QL.TP_BOM = 'C' THEN 0 
									  ELSE (CASE WHEN GH.YN_RETURN = 'Y' THEN -GL.AM_GIRAMT 
																	     ELSE GL.AM_GIRAMT END) END) AS AM_GIRAMT,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NM_SUPPLIER, '') = '' THEN 'STOCK' 
																																	  ELSE 'STOCK,' + QL.NM_SUPPLIER END) 
													 ELSE (CASE WHEN QL.TP_BOM = 'P' THEN 'BOM' 
																					 ELSE QL.NM_SUPPLIER END) END) AS NM_SUPPLIER,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NM_SUPPLIER, '') = '' THEN 'STOCK (' + GL.CD_ITEM + ')' 
																																	  ELSE 'STOCK,' + QL.NM_SUPPLIER + ' (' + GL.CD_ITEM + ')' END) 
													 ELSE (CASE WHEN QL.TP_BOM = 'P' THEN 'BOM' 
																					 ELSE QL.NM_SUPPLIER END) END) AS NM_SUPPLIER_RPT,
		   (CASE WHEN ISNULL(GL.QT_GIR_STOCK, 0) > 0 THEN (CASE WHEN (GL.QT_GIR_STOCK = GL.QT_GIR) OR ISNULL(QL.NO_LOCATION, '') = '' THEN MI.CD_ZONE 
																																	  ELSE MI.CD_ZONE + ',' + QL.NO_LOCATION END) 
													 ELSE QL.NO_LOCATION END) AS NO_LOCATION,
		   (CASE WHEN PL.QT_PACK > 0 THEN 'Y' 
									 ELSE (CASE WHEN PL.QT_GIR > 0 THEN 'P' 
																   ELSE 'N' END) END) AS STA_PACK,
		   (CASE WHEN (ISNULL(SL.QT_SO, 0) - ISNULL(SL.QT_GI, 0)) > ISNULL(GL.QT_GIR, 0) THEN 'Y' ELSE 'N' END) AS YN_PARTIAL,
		   GL.YN_ADD_STOCK,
		   QL.GRP_ITEM,
		   IG.NM_ITEMGRP,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(SL.UM_EX_Q, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								     FROM MA_EXCHANGE EX 
																								     WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								     AND EX.YYMMDD = SH.DT_SO 
																								     AND EX.CURR_SOUR = '001' 
																								     AND EX.CURR_DEST = '000'
																								     AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD_Q,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), -ROUND((ISNULL(SL.UM_EX_Q, 0) - ISNULL(SL.UM_EX_S, 0)) / (SELECT ISNULL(RATE_BASE, 1) 
																																FROM MA_EXCHANGE EX 
																																WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																																AND EX.YYMMDD = SH.DT_SO 
																																AND EX.CURR_SOUR = '001' 
																																AND EX.CURR_DEST = '000'
																																AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD_DC,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(GL.UM, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								FROM MA_EXCHANGE EX 
																								WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								AND EX.YYMMDD = SH.DT_SO 
																								AND EX.CURR_SOUR = '001' 
																								AND EX.CURR_DEST = '000'
																								AND EX.NO_SEQ = 1), 2)) ELSE NULL END) AS UM_USD,
		   (CASE WHEN GL.CD_EXCH = '000' THEN CONVERT(NUMERIC(17, 2), ROUND(ISNULL(GL.UM, 0) / (SELECT ISNULL(RATE_BASE, 1) 
																								FROM MA_EXCHANGE EX 
																								WHERE EX.CD_COMPANY = SH.CD_COMPANY 
																								AND EX.YYMMDD = SH.DT_SO 
																								AND EX.CURR_SOUR = '001' 
																								AND EX.CURR_DEST = '000'
																								AND EX.NO_SEQ = 1), 2) * ISNULL(GL.QT_GIR, 0)) ELSE NULL END) AS AM_USD,
		   (GL.NO_GIR + '-' + GL.NO_SO) AS NO_KEY1,
		   '' AS CD_QR,
		   'PACK' AS CD_QR_RCT,
		   'PACK' AS CD_QR_CI,
		   'PACK' AS CD_QR_PL,
		   FT.MODEL,
	       FT.UNIT_IMP,
	       FT.HSCODE,
	       FT.ORIGIN,
		   FT.CUSTOMS,
		   (CASE WHEN EXISTS (SELECT 1 
		                      FROM PU_POL PL
			                  WHERE PL.CD_COMPANY = SL.CD_COMPANY
			                  AND PL.NO_SO = SL.NO_SO
			                  AND PL.NO_SOLINE = SL.SEQ_SO
			                  AND PL.YN_BL = 'Y') THEN 'Y' ELSE 'N' END) AS YN_BL
	FROM CZ_SA_GIRL_PACK GL
	LEFT JOIN CZ_SA_GIRH_PACK GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
	LEFT JOIN CZ_SA_GIRH_PACK_DETAIL WD ON WD.CD_COMPANY = GL.CD_COMPANY AND WD.NO_GIR = GL.NO_GIR
	LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = GL.CD_COMPANY AND SL.NO_SO = ISNULL(GL.NO_SO, GL.NO_SO_MGMT) AND SL.SEQ_SO = (CASE WHEN GL.SEQ_SO = 0 THEN GL.NO_SOLINE_MGMT ELSE GL.SEQ_SO END)
	LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = SL.CD_COMPANY AND SH.NO_SO = SL.NO_SO
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE,
					  MAX(OH.DT_IO) AS DT_IO
			   FROM MM_QTIO OL
			   JOIN MM_QTIOH OH ON OH.CD_COMPANY = OL.CD_COMPANY AND OH.NO_IO = OL.NO_IO
			   GROUP BY OL.CD_COMPANY, OL.NO_ISURCV, OL.NO_ISURCVLINE) OL 
	ON OL.CD_COMPANY = GL.CD_COMPANY AND OL.NO_ISURCV = GL.NO_GIR AND OL.NO_ISURCVLINE = GL.SEQ_GIR
	LEFT JOIN CZ_MA_HULL MH ON MH.NO_IMO = WD.NO_IMO
	LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = GL.CD_COMPANY AND MI.CD_PLANT = GH.CD_PLANT AND MI.CD_ITEM = GL.CD_ITEM
	LEFT JOIN MM_EJTP JT ON JT.CD_COMPANY = GL.CD_COMPANY AND JT.CD_QTIOTP = GL.TP_GI
	LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = GL.CD_COMPANY AND SG.CD_SALEGRP = GL.CD_SALEGRP
	LEFT JOIN SA_PROJECTH SP ON SP.CD_COMPANY = GL.CD_COMPANY AND SP.NO_PROJECT = GL.NO_PROJECT
	LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = GL.CD_COMPANY AND MP.CD_PARTNER = GL.GI_PARTNER
	LEFT JOIN MA_PARTNER MP1 ON MP1.CD_COMPANY = GH.CD_COMPANY AND MP1.CD_PARTNER = GH.CD_PARTNER 
	LEFT JOIN MA_SL MS ON MS.CD_COMPANY = GL.CD_COMPANY AND MS.CD_PLANT = GH.CD_PLANT AND MS.CD_SL = GL.CD_SL
	LEFT JOIN SA_TPSO ST ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.TP_SO = SH.TP_SO
	LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = SH.CD_COMPANY AND ME.NO_EMP = SH.NO_EMP
	LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = GH.CD_COMPANY AND MC.CD_FIELD = 'PU_C000016' AND MC.CD_SYSDEF = GH.TP_BUSI
	LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = GH.CD_COMPANY AND MC1.CD_FIELD = 'PU_C000027' AND MC1.CD_SYSDEF = GH.YN_RETURN
	LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = GL.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000005' AND MC2.CD_SYSDEF = GL.CD_EXCH
	LEFT JOIN MA_CODEDTL MC3 ON MC3.CD_COMPANY = GH.CD_COMPANY AND MC3.CD_FIELD = 'CZ_SA00030' AND MC3.CD_SYSDEF = GH.STA_GIR
	LEFT JOIN MA_CODEDTL MC4 ON MC4.CD_COMPANY = MP1.CD_COMPANY AND MC4.CD_FIELD = 'MA_B000065' AND MC4.CD_SYSDEF = MP1.CD_PARTNER_GRP
	LEFT JOIN (SELECT QC.CD_COMPANY, QC.NO_FILE, QC.NO_LINE, QC.NO_LINE_PARENT, QC.NO_DSP, QC.NM_SUBJECT, QC.CD_ITEM_PARTNER, QC.CD_UNIQUE_PARTNER, QC.NM_ITEM_PARTNER, QC.TP_BOM, QC.YN_DSP_RMK, QC.DC_RMK,
					  QC.GRP_ITEM,
					  (QC.QT / (CASE WHEN QP.QT = 0 THEN 1 ELSE QP.QT END)) AS QT_BOM,
					  STUFF((SELECT DISTINCT ',' + MP.LN_PARTNER
							 FROM PU_POL PL
							 JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
							 LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = PH.CD_COMPANY AND MP.CD_PARTNER = PH.CD_PARTNER
							 WHERE PL.CD_COMPANY = QC.CD_COMPANY
							 AND PL.NO_SO = QC.NO_FILE
							 AND PL.NO_LINE = QC.NO_LINE 
							 FOR XML PATH('')),1,1,'') AS NM_SUPPLIER,
					  STUFF((SELECT DISTINCT ',' + LC.CD_LOCATION
							 FROM MM_QTIO OL
							 JOIN MM_QTIO_LOCATION LC ON LC.CD_COMPANY = OL.CD_COMPANY AND LC.NO_IO = OL.NO_IO AND LC.NO_IOLINE = OL.NO_IOLINE
							 WHERE OL.FG_PS = '1'
							 AND OL.CD_COMPANY = QC.CD_COMPANY
							 AND OL.CD_PJT = QC.NO_FILE
							 AND OL.NO_PSOLINE_MGMT = QC.NO_LINE
							 FOR XML PATH('')),1,1,'') AS NO_LOCATION  
			   FROM CZ_SA_QTNL QC
			   LEFT JOIN CZ_SA_QTNL QP ON QP.CD_COMPANY = QC.CD_COMPANY AND QP.NO_FILE = QC.NO_FILE AND QP.NO_LINE = QC.NO_LINE_PARENT) QL 
	ON QL.CD_COMPANY = SL.CD_COMPANY AND QL.NO_FILE = SL.NO_SO AND (QL.NO_LINE = SL.SEQ_SO OR QL.NO_LINE_PARENT = SL.SEQ_SO)
	LEFT JOIN MA_ITEMGRP IG ON IG.CD_COMPANY = QL.CD_COMPANY AND IG.CD_ITEMGRP = QL.GRP_ITEM
	LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_SO, IL.NO_SOLINE, 
					  SUM(IL.QT_TAX) AS QT_TAX,
			   	      MAX(DL.MODEL) AS MODEL,
			   	      MAX(DL.UNIT) AS UNIT_IMP,
			   	      MAX(DL.HSCODE) AS HSCODE,
			   	      LEFT(MAX(DL.ORIGIN), 2) AS ORIGIN,
					  SUM(DL.CUSTOMS) AS CUSTOMS
			   FROM CZ_FI_IMP_PMTL IL
			   LEFT JOIN CZ_PU_IMPORT_DECLARATIONL DL ON DL.CD_COMPANY = IL.CD_COMPANY AND REPLACE(DL.NO_IMPORT, '-', '') = IL.NO_IMPORT AND DL.SEQ = IL.SEQ_IMPORT
			   LEFT JOIN CZ_PU_IMPORT_DECLARATIONH DH ON DH.CD_COMPANY = DL.CD_COMPANY AND DH.NO_IMPORT = DL.NO_IMPORT
			   GROUP BY IL.CD_COMPANY, IL.NO_SO, IL.NO_SOLINE) FT
	ON FT.CD_COMPANY = SL.CD_COMPANY AND FT.NO_SO = SL.NO_SO AND FT.NO_SOLINE = SL.SEQ_SO
	LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO,
			   		  ISNULL(SUM(GL.QT_GIR), 0) AS QT_GIR,
			   		  ISNULL(SUM(PL.QT_PACK), 0) AS QT_PACK 
			   FROM SA_SOL SL
			   JOIN CZ_SA_GIRL_PACK GL ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
			   LEFT JOIN (SELECT CD_COMPANY, NO_GIR, SEQ_GIR,
			   				     SUM(QT_PACK) AS QT_PACK 
			   		      FROM CZ_SA_PACKL
			   			  GROUP BY CD_COMPANY, NO_GIR, SEQ_GIR) PL 
			   ON PL.CD_COMPANY = GL.CD_COMPANY AND PL.NO_GIR = GL.NO_GIR AND PL.SEQ_GIR = GL.SEQ_GIR 
			   GROUP BY SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO) PL 
	ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.SEQ_SO = SL.SEQ_SO
	LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE,
					  SUM(SB.QT_STOCK) AS QT_STOCK
			   FROM CZ_SA_STOCK_BOOK SB
			   GROUP BY SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE) SB
	ON SB.CD_COMPANY = SL.CD_COMPANY AND SB.NO_FILE = SL.NO_SO AND SB.NO_LINE = SL.SEQ_SO
	WHERE GL.CD_COMPANY = @P_CD_COMPANY
	AND GL.NO_GIR = @P_KEY
	AND (@P_RET = '' OR GL.RET = @P_RET)
	AND (@P_TP_SO = '' OR SH.TP_SO = @P_TP_SO)
	AND (@P_YN_BOM <> 'N' OR (@P_YN_BOM = 'N' AND QL.TP_BOM <> 'C'))
	AND (@P_STA_SO = ''
	OR (@P_STA_SO = 'Y' AND ISNULL(GL.QT_GIR, 0) = ISNULL(GL.QT_GI, 0)) 
	OR (@P_STA_SO = 'N' AND ISNULL(GL.QT_GIR, 0) > ISNULL(GL.QT_GI, 0)))
	ORDER BY SL.NO_SO, QL.NO_DSP
END

GO