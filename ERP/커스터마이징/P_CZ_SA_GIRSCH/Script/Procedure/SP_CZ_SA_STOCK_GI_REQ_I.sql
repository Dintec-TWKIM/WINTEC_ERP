USE [NEOE]
GO
/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_STOCK_GI_REQ_I]    Script Date: 2017-01-19 오후 4:50:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- EXEC SP_CZ_SA_STOCK_GI_REQ_I 'K100', 'WO18030470', '', '001', 'SL02', 'SL03', 'SYSTEM', 'Y'
ALTER PROCEDURE [NEOE].[SP_CZ_SA_STOCK_GI_REQ_I]    
(    
    @P_CD_COMPANY       NVARCHAR(7),
    @P_NO_GIR           NVARCHAR(20),
	@P_NO_GIREQ			NVARCHAR(20),
	@P_CD_TYPE			NVARCHAR(3),
	@P_CD_SL			NVARCHAR(7),
	@P_CD_GRSL			NVARCHAR(7),
	@P_ID_INSERT        NVARCHAR(15),
	@P_YN_RECOVERY		NVARCHAR(1) = 'N'
)    
AS

DECLARE @V_NO_GIREQ NVARCHAR(20)
DECLARE @V_YYYYMM NVARCHAR(6)
DECLARE @V_ERRMSG NVARCHAR(255)   -- ERROR 메시지

BEGIN TRAN SP_CZ_SA_STOCK_GI_REQ_I
BEGIN TRY

IF ISNULL(@P_NO_GIREQ, '') <> ''
BEGIN
	INSERT INTO MM_GIREQH
	(
		CD_COMPANY,
		NO_GIREQ,
		NO_PR_PACK,
		CD_PLANT,
		CD_PARTNER,
		DT_GIREQ,
		FG_GIREQ,
		FG_GI,
		CD_DEPT,
		NO_EMP,
		FG_MODULE,
		YN_APP,
		ST_STAT
	)
	SELECT GH.CD_COMPANY,
		   @P_NO_GIREQ,
		   @P_NO_GIR,
		   GH.CD_PLANT,
		   GH.CD_PARTNER,
		   CONVERT(CHAR(8), GETDATE(), 112) AS DT_GIREQ,
		   '500',
		   '',
		   ME.CD_DEPT,
		   GH.NO_EMP,
		   'PU',
		   'N',
		   'N' 
	FROM SA_GIRH GH
	LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = GH.CD_COMPANY AND ME.NO_EMP = GH.NO_EMP
	WHERE GH.CD_COMPANY = @P_CD_COMPANY
	AND GH.NO_GIR = @P_NO_GIR

	INSERT INTO MM_GIREQL
	(
		CD_COMPANY,
		CD_PLANT,
		NO_GIREQ,
		NO_LINE,
		CD_ITEM,
		DT_DELIVERY,
		CD_SL,
		QT_GIREQ,
		CD_GRSL,
		NO_PO,
		NO_PO_LINE,
		YN_APPEND,
		QT_PO_MM,
		CD_EXCH,
		RT_EXCH,
		UM_EX,
		UM,
		CD_PJT,
		NO_SO,
		SEQ_SO,
		QT_MGREQ,
		FG_POST,
		GI_PARTNER,
		ID_INSERT,
		DTS_INSERT
	)
	SELECT GL.CD_COMPANY,
		   GH.CD_PLANT,
		   @P_NO_GIREQ AS NO_GIREQ,
		   ROW_NUMBER() OVER (ORDER BY GL.SEQ_GIR) AS NO_LINE,
		   GL.CD_ITEM,
		   WD.DT_COMPLETE AS DT_DELIVERY,
		   @P_CD_SL AS CD_SL,
		   ISNULL(GL.QT_GIR_STOCK, 0) AS QT_GIREQ,
		   @P_CD_GRSL AS CD_GRSL,
		   GL.NO_GIR,
		   GL.SEQ_GIR,
		   'N' AS YN_APPEND,
		   ISNULL(GL.QT_GIR_STOCK, 0) AS QT_PO_MM,
		   GL.CD_EXCH,
		   ISNULL(GL.RT_EXCH, 0),
		   ISNULL(GL.UM, 0),
		   ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 0), (CASE WHEN @P_CD_COMPANY = 'S100' THEN 2 ELSE 0 END)),
		   GL.NO_PROJECT AS CD_PJT,
		   GL.NO_SO,
		   GL.SEQ_SO,
		   ISNULL(GL.QT_GIR_STOCK, 0) AS QT_MGREQ,
		   'O' AS FG_POST,
		   GL.GI_PARTNER,
		   @P_ID_INSERT AS ID_INSERT,
		   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
	FROM SA_GIRL GL
	LEFT JOIN SA_GIRH GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
	LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GH.CD_COMPANY AND WD.NO_GIR = GH.NO_GIR
	WHERE GL.CD_COMPANY = @P_CD_COMPANY
	AND GL.NO_GIR = @P_NO_GIR
	AND ISNULL(GL.QT_GIR_STOCK, 0) > 0
END
ELSE IF @P_CD_TYPE = '001'
BEGIN
	PRINT('SA_GIRL UPDATE')
	UPDATE SA_GIRL
	SET YN_GI_STOCK = 'P',
		ID_GI_STOCK = (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 'RECOVERY' ELSE @P_ID_INSERT END),
		DTS_GI_STOCK = NEOE.SF_SYSDATE(GETDATE())
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND NO_GIR = @P_NO_GIR
	AND ISNULL(QT_GIR_STOCK, 0) > 0

	PRINT('확인')
	IF EXISTS (SELECT 1 
			   FROM SA_GIRL GL
			   JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = GL.CD_COMPANY AND SB.NO_FILE = GL.NO_SO AND SB.NO_LINE = GL.SEQ_SO
			   LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			   			  		 SUM(QT_GIREQ) AS QT_GIREQ 
			   			  FROM MM_GIREQL QL
			   			  WHERE CD_SL = 'SL02'
			   			  AND CD_GRSL = 'SL03'
			   			  GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL
			   ON QL.CD_COMPANY = GL.CD_COMPANY AND QL.NO_SO = GL.NO_SO AND QL.SEQ_SO = GL.SEQ_SO
			   LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			   					 (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 0 ELSE SUM(QT_GIREQ) END) AS QT_GIREQ 
			   			  FROM MM_GIREQL QL
			   			  WHERE CD_SL = 'SL03'
			   			  AND CD_GRSL = 'SL01'
			   			  GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL1
			   ON QL1.CD_COMPANY = GL.CD_COMPANY AND QL1.NO_SO = GL.NO_SO AND QL1.SEQ_SO = GL.SEQ_SO
			   WHERE GL.CD_COMPANY = @P_CD_COMPANY
			   AND GL.NO_GIR = @P_NO_GIR
			   AND ISNULL(GL.QT_GIR_STOCK, 0) > 0
			   AND (CASE WHEN ISNULL(GL.YN_ADD_STOCK, 'N') = 'Y' THEN (CASE WHEN (ISNULL(GL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GIREQ, 0)) > ISNULL(SB.QT_STOCK, 0) THEN (ISNULL(SB.QT_STOCK, 0) - ISNULL(QL.QT_GIREQ, 0))
																																						        ELSE ISNULL(GL.QT_GIR_STOCK, 0) END)
																 ELSE (ISNULL(GL.QT_GIR_STOCK, 0) - (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL1.QT_GIREQ, 0))) END) > 0
			   AND ISNULL(SB.QT_STOCK, 0) > ISNULL(QL1.QT_GIREQ, 0))
	BEGIN
		PRINT('번호생성')
		SET @V_YYYYMM = SUBSTRING(CONVERT(CHAR(8), GETDATE(), 112), 1, 6)
		EXEC CP_GETNO @P_CD_COMPANY, 'PU', '08', @V_YYYYMM, @V_NO_GIREQ OUTPUT

		IF ISNULL(@V_NO_GIREQ, '') <> ''
		BEGIN
			PRINT(@V_NO_GIREQ)

			UPDATE CZ_SA_GIRH_WORK_DETAIL
			SET NO_GIREQ = @V_NO_GIREQ
			WHERE CD_COMPANY = @P_CD_COMPANY
			AND NO_GIR = @P_NO_GIR

			INSERT INTO MM_GIREQH
			(
				CD_COMPANY,
				NO_GIREQ,
				NO_PR_PACK,
				CD_PLANT,
				CD_PARTNER,
				DT_GIREQ,
				FG_GIREQ,
				FG_GI,
				CD_DEPT,
				NO_EMP,
				FG_MODULE,
				YN_APP,
				ST_STAT
			)
			SELECT GH.CD_COMPANY,
				   @V_NO_GIREQ,
				   @P_NO_GIR,
				   GH.CD_PLANT,
				   GH.CD_PARTNER,
				   GH.DT_GIR,
				   '500',
				   '',
				   ME.CD_DEPT,
				   GH.NO_EMP,
				   'PU',
				   'N',
				   'N' 
			FROM SA_GIRH GH
			LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = GH.CD_COMPANY AND ME.NO_EMP = GH.NO_EMP
			WHERE GH.CD_COMPANY = @P_CD_COMPANY
			AND GH.NO_GIR = @P_NO_GIR

			INSERT INTO MM_GIREQL
			(
				CD_COMPANY,
				CD_PLANT,
				NO_GIREQ,
				NO_LINE,
				CD_ITEM,
				DT_DELIVERY,
				CD_SL,
				QT_GIREQ,
				CD_GRSL,
				NO_PO,
				NO_PO_LINE,
				YN_APPEND,
				QT_PO_MM,
				CD_EXCH,
				RT_EXCH,
				UM_EX,
				UM,
				CD_PJT,
				NO_SO,
				SEQ_SO,
				QT_MGREQ,
				FG_POST,
				GI_PARTNER,
				ID_INSERT,
				DTS_INSERT
			)
			SELECT GL.CD_COMPANY,
				   GH.CD_PLANT,
				   @V_NO_GIREQ AS NO_GIREQ,
				   ROW_NUMBER() OVER(ORDER BY GL.SEQ_GIR) AS NO_LINE,
				   GL.CD_ITEM,
				   WD.DT_COMPLETE AS DT_DELIVERY,
				   @P_CD_SL AS CD_SL,
				   GL.QT_GIREQ,
				   @P_CD_GRSL AS CD_GRSL,
				   GL.NO_GIR,
				   GL.SEQ_GIR,
				   'N' AS YN_APPEND,
				   GL.QT_GIREQ AS QT_PO_MM,
				   GL.CD_EXCH,
				   GL.RT_EXCH,
				   GL.UM_EX,
				   GL.UM,
				   GL.CD_PJT,
				   GL.NO_SO,
				   GL.SEQ_SO,
				   GL.QT_GIREQ AS QT_MGREQ,
				   'O' AS FG_POST,
				   GL.GI_PARTNER,
				   (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 'RECOVERY' ELSE @P_ID_INSERT END) AS ID_INSERT,
				   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
			FROM (SELECT GL.CD_COMPANY,
						 GL.NO_GIR,
						 GL.SEQ_GIR,
						 GL.CD_ITEM,
						 (CASE WHEN ISNULL(GL.YN_ADD_STOCK, 'N') = 'Y' THEN (CASE WHEN (ISNULL(GL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GIREQ, 0)) > ISNULL(SB.QT_STOCK, 0) THEN (ISNULL(SB.QT_STOCK, 0) - ISNULL(QL.QT_GIREQ, 0))
				   																																		              ELSE ISNULL(GL.QT_GIR_STOCK, 0) END)
				   													   ELSE (ISNULL(GL.QT_GIR_STOCK, 0) - (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL1.QT_GIREQ, 0))) END) AS QT_GIREQ,
						 (CASE WHEN @P_CD_SL = 'SL01' THEN NULL ELSE GL.CD_EXCH END) AS CD_EXCH,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ISNULL(GL.RT_EXCH, 0) END) AS RT_EXCH,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ISNULL(GL.UM, 0) END) AS UM_EX,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 0), (CASE WHEN @P_CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) END) AS UM,
						 GL.NO_PROJECT AS CD_PJT,
						 GL.NO_SO, 
						 GL.SEQ_SO,
						 GL.GI_PARTNER
			      FROM SA_GIRL GL
			      JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = GL.CD_COMPANY AND SB.NO_FILE = GL.NO_SO AND SB.NO_LINE = GL.SEQ_SO
			      LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			      			  		SUM(QT_GIREQ) AS QT_GIREQ 
			      			 FROM MM_GIREQL QL
			      			 WHERE CD_SL = 'SL02'
			      			 AND CD_GRSL = 'SL03'
			      			 GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL
			      ON QL.CD_COMPANY = GL.CD_COMPANY AND QL.NO_SO = GL.NO_SO AND QL.SEQ_SO = GL.SEQ_SO
			      LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			      					(CASE WHEN @P_YN_RECOVERY = 'Y' THEN 0 ELSE SUM(QT_GIREQ) END) AS QT_GIREQ 
			      			 FROM MM_GIREQL QL
			      			 WHERE CD_SL = 'SL03'
			      			 AND CD_GRSL = 'SL01'
			      			 GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL1
			      ON QL1.CD_COMPANY = GL.CD_COMPANY AND QL1.NO_SO = GL.NO_SO AND QL1.SEQ_SO = GL.SEQ_SO
			      WHERE GL.CD_COMPANY = @P_CD_COMPANY
			      AND GL.NO_GIR = @P_NO_GIR
			      AND ISNULL(GL.QT_GIR_STOCK, 0) > 0
			      AND ISNULL(SB.QT_STOCK, 0) > ISNULL(QL1.QT_GIREQ, 0)) GL
			LEFT JOIN SA_GIRH GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
			LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GH.CD_COMPANY AND WD.NO_GIR = GH.NO_GIR
			WHERE GL.QT_GIREQ > 0
		END
	END
END
ELSE IF @P_CD_TYPE = '002'
BEGIN
	PRINT('CZ_SA_GIRL_PACK UPDATE')
	UPDATE GL
	SET GL.YN_GI_STOCK = 'P',
		GL.ID_GI_STOCK = (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 'RECOVERY' ELSE @P_ID_INSERT END),
		GL.DTS_GI_STOCK = NEOE.SF_SYSDATE(GETDATE())
	FROM CZ_SA_GIRL_PACK GL
	LEFT JOIN CZ_SA_GIRH_PACK_DETAIL GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
	WHERE GH.CD_COMPANY = @P_CD_COMPANY
	AND GH.NO_GIR = @P_NO_GIR
	AND GH.CD_PACK_CATEGORY = '001'
	AND ISNULL(GL.QT_GIR_STOCK, 0) > 0

	PRINT('확인')
	IF EXISTS (SELECT 1 
			   FROM CZ_SA_GIRL_PACK PL
			   JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = PL.CD_COMPANY AND SB.NO_FILE = PL.NO_SO AND SB.NO_LINE = PL.SEQ_SO
			   LEFT JOIN CZ_SA_GIRH_PACK_DETAIL PD ON PD.CD_COMPANY = PL.CD_COMPANY AND PD.NO_GIR = PL.NO_GIR
			   LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			   					 SUM(QT_GIREQ) AS QT_GIREQ 
			   			  FROM MM_GIREQL QL
			   			  WHERE CD_SL = 'SL02'
			   			  AND CD_GRSL = 'SL03'
			   			  GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL
			   ON QL.CD_COMPANY = PL.CD_COMPANY AND QL.NO_SO = PL.NO_SO AND QL.SEQ_SO = PL.SEQ_SO
			   LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			   					 (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 0 ELSE SUM(QT_GIREQ) END) AS QT_GIREQ 
			   			  FROM MM_GIREQL QL
			   			  WHERE CD_SL = 'SL03'
			   			  AND CD_GRSL = 'SL01'
			   			  GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL1
			   ON QL1.CD_COMPANY = PL.CD_COMPANY AND QL1.NO_SO = PL.NO_SO AND QL1.SEQ_SO = PL.SEQ_SO
			   WHERE PL.CD_COMPANY = @P_CD_COMPANY 
			   AND PL.NO_GIR = @P_NO_GIR
			   AND PD.CD_PACK_CATEGORY = '001' 
			   AND ISNULL(PL.QT_GIR_STOCK, 0) > 0
			   AND (CASE WHEN ISNULL(PL.YN_ADD_STOCK, 'N') = 'Y' THEN (CASE WHEN (ISNULL(PL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GIREQ, 0)) > ISNULL(SB.QT_STOCK, 0) THEN (ISNULL(SB.QT_STOCK, 0) - ISNULL(QL.QT_GIREQ, 0))
																																						        ELSE ISNULL(PL.QT_GIR_STOCK, 0) END)
																 ELSE (ISNULL(PL.QT_GIR_STOCK, 0) - (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL1.QT_GIREQ, 0))) END) > 0
			   AND ISNULL(SB.QT_STOCK, 0) > ISNULL(QL1.QT_GIREQ, 0))
	BEGIN
		PRINT('번호생성')
		SET @V_YYYYMM = SUBSTRING(CONVERT(CHAR(8), GETDATE(), 112), 1, 6)
		EXEC CP_GETNO @P_CD_COMPANY, 'PU', '08', @V_YYYYMM, @V_NO_GIREQ OUTPUT

		IF ISNULL(@V_NO_GIREQ, '') <> ''
		BEGIN
			PRINT(@V_NO_GIREQ)
			UPDATE CZ_SA_GIRH_PACK_DETAIL
			SET NO_GIREQ = @V_NO_GIREQ
			WHERE CD_COMPANY = @P_CD_COMPANY
			AND NO_GIR = @P_NO_GIR

			INSERT INTO MM_GIREQH
			(
				CD_COMPANY,
				NO_GIREQ,
				NO_PR_PACK,
				CD_PLANT,
				CD_PARTNER,
				DT_GIREQ,
				FG_GIREQ,
				FG_GI,
				CD_DEPT,
				NO_EMP,
				FG_MODULE,
				YN_APP,
				ST_STAT
			)
			SELECT GH.CD_COMPANY,
				   @V_NO_GIREQ,
				   @P_NO_GIR,
				   GH.CD_PLANT,
				   GH.CD_PARTNER,
				   GH.DT_GIR,
				   '500',
				   '',
				   ME.CD_DEPT,
				   GH.NO_EMP,
				   'PU',
				   'N',
				   'N' 
			FROM CZ_SA_GIRH_PACK GH
			LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = GH.CD_COMPANY AND ME.NO_EMP = GH.NO_EMP
			WHERE GH.CD_COMPANY = @P_CD_COMPANY
			AND GH.NO_GIR = @P_NO_GIR

			INSERT INTO MM_GIREQL
			(
				CD_COMPANY,
				CD_PLANT,
				NO_GIREQ,
				NO_LINE,
				CD_ITEM,
				DT_DELIVERY,
				CD_SL,
				QT_GIREQ,
				CD_GRSL,
				NO_PO,
				NO_PO_LINE,
				YN_APPEND,
				QT_PO_MM,
				CD_EXCH,
				RT_EXCH,
				UM_EX,
				UM,
				CD_PJT,
				NO_SO,
				SEQ_SO,
				QT_MGREQ,
				FG_POST,
				GI_PARTNER,
				ID_INSERT,
				DTS_INSERT
			)
			SELECT GL.CD_COMPANY,
				   GH.CD_PLANT,
				   @V_NO_GIREQ AS NO_GIREQ,
				   ROW_NUMBER() OVER(ORDER BY GL.SEQ_GIR) AS NO_LINE,
				   GL.CD_ITEM,
				   PD.DT_COMPLETE AS DT_DELIVERY,
				   @P_CD_SL AS CD_SL,
				   GL.QT_GIREQ,
				   @P_CD_GRSL AS CD_GRSL,
				   GL.NO_GIR,
				   GL.SEQ_GIR,
				   'N' AS YN_APPEND,
				   GL.QT_GIREQ AS QT_PO_MM,
				   GL.CD_EXCH,
				   GL.RT_EXCH,
				   GL.UM_EX,
				   GL.UM,
				   GL.CD_PJT,
				   GL.NO_SO,
				   GL.SEQ_SO,
				   GL.QT_GIREQ AS QT_MGREQ,
				   'O' AS FG_POST,
				   GL.GI_PARTNER,
				   (CASE WHEN @P_YN_RECOVERY = 'Y' THEN 'RECOVERY' ELSE @P_ID_INSERT END) AS ID_INSERT,
				   NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
			FROM (SELECT GL.CD_COMPANY,
						 GL.NO_GIR,
						 GL.SEQ_GIR,
						 GL.CD_ITEM,
						 (CASE WHEN ISNULL(GL.YN_ADD_STOCK, 'N') = 'Y' THEN (CASE WHEN (ISNULL(GL.QT_GIR_STOCK, 0) + ISNULL(QL.QT_GIREQ, 0)) > ISNULL(SB.QT_STOCK, 0) THEN (ISNULL(SB.QT_STOCK, 0) - ISNULL(QL.QT_GIREQ, 0))
				   																																		              ELSE ISNULL(GL.QT_GIR_STOCK, 0) END)
				   													   ELSE (ISNULL(GL.QT_GIR_STOCK, 0) - (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL1.QT_GIREQ, 0))) END) AS QT_GIREQ,
						 (CASE WHEN @P_CD_SL = 'SL01' THEN NULL ELSE GL.CD_EXCH END) AS CD_EXCH,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ISNULL(GL.RT_EXCH, 0) END) AS RT_EXCH,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ISNULL(GL.UM, 0) END) AS UM_EX,
				         (CASE WHEN @P_CD_SL = 'SL01' THEN 0 ELSE ROUND(ISNULL(GL.UM, 0) * ISNULL(GL.RT_EXCH, 0), (CASE WHEN @P_CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) END) AS UM,
						 GL.NO_PROJECT AS CD_PJT,
						 GL.NO_SO, 
						 GL.SEQ_SO,
						 GL.GI_PARTNER
			      FROM CZ_SA_GIRL_PACK GL
			      JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = GL.CD_COMPANY AND SB.NO_FILE = GL.NO_SO AND SB.NO_LINE = GL.SEQ_SO
			      LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			      			  		SUM(QT_GIREQ) AS QT_GIREQ 
			      			 FROM MM_GIREQL QL
			      			 WHERE CD_SL = 'SL02'
			      			 AND CD_GRSL = 'SL03'
			      			 GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL
			      ON QL.CD_COMPANY = GL.CD_COMPANY AND QL.NO_SO = GL.NO_SO AND QL.SEQ_SO = GL.SEQ_SO
			      LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
			      					(CASE WHEN @P_YN_RECOVERY = 'Y' THEN 0 ELSE SUM(QT_GIREQ) END) AS QT_GIREQ 
			      			 FROM MM_GIREQL QL
			      			 WHERE CD_SL = 'SL03'
			      			 AND CD_GRSL = 'SL01'
			      			 GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) QL1
			      ON QL1.CD_COMPANY = GL.CD_COMPANY AND QL1.NO_SO = GL.NO_SO AND QL1.SEQ_SO = GL.SEQ_SO
			      WHERE GL.CD_COMPANY = @P_CD_COMPANY
			      AND GL.NO_GIR = @P_NO_GIR
			      AND ISNULL(GL.QT_GIR_STOCK, 0) > 0
			      AND ISNULL(SB.QT_STOCK, 0) > ISNULL(QL1.QT_GIREQ, 0)) GL
			LEFT JOIN CZ_SA_GIRH_PACK GH ON GH.CD_COMPANY = GL.CD_COMPANY AND GH.NO_GIR = GL.NO_GIR
			LEFT JOIN CZ_SA_GIRH_PACK_DETAIL PD ON PD.CD_COMPANY = GH.CD_COMPANY AND PD.NO_GIR = GH.NO_GIR
			WHERE GL.QT_GIREQ > 0
		END
	END
END

COMMIT TRAN SP_CZ_SA_STOCK_GI_REQ_I

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_SA_STOCK_GI_REQ_I
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_SA_STOCK_GI_REQ_I

GO
