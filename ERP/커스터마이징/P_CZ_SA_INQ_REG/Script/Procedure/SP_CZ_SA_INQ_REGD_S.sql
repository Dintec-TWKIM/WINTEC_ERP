USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_INQ_REGD_S]    Script Date: 2015-07-03 오전 11:04:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_SA_INQ_REGD_S]
(
	@P_CD_COMPANY       NVARCHAR(7),
	@P_ID_USER			NVARCHAR(15)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @ID_TYPIST TABLE (ID_USER NVARCHAR(20) PRIMARY KEY)
DECLARE @ID_TYPIST_DEF TABLE (ID_USER NVARCHAR(20) PRIMARY KEY)
DECLARE @ID_TYPIST_AUTO TABLE (ID_USER NVARCHAR(20) PRIMARY KEY)
DECLARE @ID_TYPIST_MAPS TABLE (ID_USER NVARCHAR(20) PRIMARY KEY)

DECLARE @V_ID_TYPIST	   NVARCHAR(100)
DECLARE @V_ID_TYPIST_DEF   NVARCHAR(100)
DECLARE @V_ID_TYPIST_AUTO  NVARCHAR(100)
DECLARE @V_ID_TYPIST_MAPS  NVARCHAR(100)

SELECT @V_ID_TYPIST = SU.ID_TYPIST,
	   @V_ID_TYPIST_DEF = SU.ID_TYPIST_DEF,
	   @V_ID_TYPIST_AUTO = SU.ID_TYPIST_AUTO,
	   @V_ID_TYPIST_MAPS = SU.ID_TYPIST_MAPS
FROM CZ_SA_USER SU 
WHERE SU.CD_COMPANY = @P_CD_COMPANY 
AND SU.ID_USER = @P_ID_USER

INSERT INTO @ID_TYPIST SELECT CD_STR FROM GETTABLEFROMSPLIT(@V_ID_TYPIST)
INSERT INTO @ID_TYPIST_DEF SELECT CD_STR FROM GETTABLEFROMSPLIT(@V_ID_TYPIST_DEF)
INSERT INTO @ID_TYPIST_AUTO SELECT CD_STR FROM GETTABLEFROMSPLIT(@V_ID_TYPIST_AUTO)
INSERT INTO @ID_TYPIST_MAPS SELECT CD_STR FROM GETTABLEFROMSPLIT(@V_ID_TYPIST_MAPS)

CREATE TABLE #CZ_MA_WORKFLOWH
(
	CD_COMPANY      NVARCHAR(7),
	ID_TYPIST       NVARCHAR(20),
	QT_ALL			INT,
	QT_DONE			INT,
	QT_DONE_DAY	    INT,
	QT_PROGRESS	    INT
)

INSERT INTO #CZ_MA_WORKFLOWH
SELECT WH.CD_COMPANY,
	   WH.ID_TYPIST,
	   SUM(1) AS QT_ALL,
	   SUM(CASE WHEN WH.YN_DONE = 'Y' THEN 1 ELSE 0 END) AS QT_DONE,
	   SUM(CASE WHEN WH.YN_DONE = 'Y' AND SUBSTRING(WH.DTS_DONE, 0, 9) = CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_DONE_DAY,
	   SUM(CASE WHEN WH.YN_DONE IS NULL OR WH.YN_DONE = 'N' THEN 1 ELSE 0 END) AS QT_PROGRESS
FROM CZ_MA_WORKFLOWH WH
WHERE WH.CD_COMPANY = @P_CD_COMPANY
AND WH.TP_STEP = '01'
AND EXISTS (SELECT 1 
			FROM @ID_TYPIST IT
			WHERE IT.ID_USER = WH.ID_TYPIST)
AND NOT EXISTS (SELECT 1 
		        FROM CZ_SA_QTNH
		        WHERE CD_COMPANY = WH.CD_COMPANY
		        AND NO_FILE = WH.NO_KEY
		        AND YN_CLOSE = 'Y')
GROUP BY WH.CD_COMPANY, WH.ID_TYPIST

SELECT MU.ID_USER,
	   MU.NM_USER,
	   HW.CD_WCODE,
	   HC.NM_WCODE,
	   WH.QT_ALL,
	   WH.QT_DONE,
	   WH.QT_DONE_DAY,
	   WH.QT_PROGRESS,
	   (CASE WHEN EXISTS (SELECT 1 
		                  FROM @ID_TYPIST_DEF TD
			              WHERE TD.ID_USER = MU.ID_USER) THEN 'Y' ELSE 'N' END) AS YN_DEFAULT,
	   (CASE WHEN EXISTS (SELECT 1 
		                  FROM @ID_TYPIST_AUTO TA
			              WHERE TA.ID_USER = MU.ID_USER) THEN 'Y' ELSE 'N' END) AS YN_AUTO,
	   (CASE WHEN EXISTS (SELECT 1 
		                  FROM @ID_TYPIST_MAPS TM
			              WHERE TM.ID_USER = MU.ID_USER) THEN 'Y' ELSE 'N' END) AS YN_MAPS,
	   (CASE WHEN EXISTS (SELECT 1 
						  FROM CZ_SA_USER SU
			              WHERE SU.CD_COMPANY = MU.CD_COMPANY
			              AND SU.ID_USER = MU.ID_USER
						  AND SU.YN_EXPECT = 'Y') THEN 'Y' ELSE 'N' END) AS YN_EXPECT
FROM MA_USER MU
LEFT JOIN #CZ_MA_WORKFLOWH WH ON WH.CD_COMPANY = MU.CD_COMPANY AND WH.ID_TYPIST = MU.ID_USER
LEFT JOIN HR_WTMCALC HW ON HW.CD_COMPANY = MU.CD_COMPANY AND HW.NO_EMP = MU.NO_EMP AND HW.DT_WORK = (CASE WHEN DATEPART(HOUR, GETDATE()) <= 18 THEN CONVERT(CHAR(8), GETDATE(), 112) ELSE CONVERT(CHAR(8), DATEADD(DAY, 1, GETDATE()), 112) END)
LEFT JOIN HR_WCODE HC ON HC.CD_COMPANY = HW.CD_COMPANY AND HC.CD_WCODE = HW.CD_WCODE
WHERE MU.CD_COMPANY = @P_CD_COMPANY
AND EXISTS (SELECT 1 
			FROM @ID_TYPIST IT
			WHERE IT.ID_USER = MU.ID_USER)
AND EXISTS (SELECT 1 
			FROM MA_EMP ME
			WHERE ME.CD_COMPANY = MU.CD_COMPANY
			AND ME.NO_EMP = MU.NO_EMP
			AND ISNULL(ME.DT_RETIRE, '00000000') = '00000000')
ORDER BY MU.NM_USER

DROP TABLE #CZ_MA_WORKFLOWH

GO