USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_WOODEN_PACK_RPT_S]    Script Date: 2018-11-26 오후 3:09:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_SA_WOODEN_PACK_RPT_S]
(
    @P_CD_COMPANY	NVARCHAR(7),
	@P_DT_FROM		NVARCHAR(8),
	@P_DT_TO		NVARCHAR(8),
	@P_NO_GIR		NVARCHAR(20),
	@P_NO_SO		NVARCHAR(20)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH A AS
(
	SELECT PH.CD_COMPANY,
		   MC.NM_COMPANY,
		   PH.NO_GIR,
		   PH.NO_PACK,
		   PH.DT_PACK,
		   PH.QT_WIDTH,
		   PH.QT_HEIGHT,
		   PH.QT_LENGTH,
		   (PH.QT_WIDTH * 0.001) AS QT_WIDTH_M,
		   (PH.QT_HEIGHT * 0.001) AS QT_HEIGHT_M,
		   (PH.QT_LENGTH * 0.001) AS QT_LENGTH_M,
		   PH.QT_NET_WEIGHT,
		   PH.QT_GROSS_WEIGHT,
		   PH.NO_WOODEN,
		   PF.NM_FILE,
		   PF.DC_FILE,
		   (CASE WHEN EXISTS (SELECT 1 
							  FROM CZ_SA_PACKL PL
							  WHERE PL.CD_COMPANY = PH.CD_COMPANY
				              AND PL.NO_GIR = PH.NO_GIR
				              AND PL.NO_PACK = PH.NO_PACK) THEN 'Y' ELSE 'N' END) AS YN_EXISTS_LINE
	FROM CZ_SA_PACKH PH
	LEFT JOIN (SELECT PF.CD_COMPANY, 
			   	      PF.NO_GIR, 
			   	      PF.NO_PACK,
					  PF.NM_FILE,
			   	      PF.DC_FILE 
			   FROM (SELECT *,
			   	  	        ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, NO_GIR, NO_PACK ORDER BY SEQ DESC) AS IDX
			   	     FROM CZ_SA_PACKH_FILE) PF
			   WHERE PF.IDX = 1) PF
	ON PF.CD_COMPANY = PH.CD_COMPANY AND PF.NO_GIR = PH.NO_GIR AND PF.NO_PACK = PH.NO_PACK
	LEFT JOIN MA_COMPANY MC ON MC.CD_COMPANY = PH.CD_COMPANY
	WHERE PH.CD_TYPE = '003'
	AND PH.YN_OUTSOURCING = 'Y'
	AND PH.DT_PACK BETWEEN @P_DT_FROM AND @P_DT_TO
	AND (ISNULL(@P_CD_COMPANY, '') = '' OR PH.CD_COMPANY = @P_CD_COMPANY)
	AND (ISNULL(@P_NO_GIR, '') = '' OR PH.NO_GIR LIKE @P_NO_GIR + '%')
	AND (ISNULL(@P_NO_SO, '') = '' OR EXISTS (SELECT 1 
											  FROM CZ_SA_PACKL PL
											  WHERE PL.CD_COMPANY = PH.CD_COMPANY
											  AND PL.NO_GIR = PH.NO_GIR
											  AND PL.NO_PACK = PH.NO_PACK
											  AND PL.NO_FILE LIKE @P_NO_SO + '%'))

),
B AS
(
	SELECT A.CD_COMPANY,
		   A.NM_COMPANY,
		   A.NO_GIR,
		   A.NO_PACK,
		   A.DT_PACK,
		   A.QT_WIDTH,
		   A.QT_HEIGHT,
		   A.QT_LENGTH,
		   A.QT_NET_WEIGHT,
		   A.QT_GROSS_WEIGHT,
		   A.NO_WOODEN,
		   A.NM_FILE,
		   A.DC_FILE,
		   A.YN_EXISTS_LINE,
	       CONVERT(NUMERIC(17, 2), (A.QT_WIDTH_M * A.QT_HEIGHT_M * A.QT_LENGTH_M)) AS QT_CBM,
		   STUFF((SELECT DISTINCT ',' + PL.NO_FILE
				  FROM CZ_SA_PACKL PL
				  WHERE PL.CD_COMPANY = A.CD_COMPANY
				  AND PL.NO_GIR = A.NO_GIR
				  AND PL.NO_PACK = (CASE WHEN A.YN_EXISTS_LINE = 'Y' THEN A.NO_PACK ELSE 1 END)
				  FOR XML PATH('')),1,1,'') AS NO_FILE
	FROM A
)
SELECT 'N' AS S,
	   B.CD_COMPANY,
	   B.NM_COMPANY,
	   B.NO_GIR,
	   B.NO_FILE,
	   B.NO_PACK,
	   B.DT_PACK,
	   B.QT_WIDTH,
	   B.QT_HEIGHT,
	   B.QT_LENGTH,
	   B.QT_NET_WEIGHT,
	   B.QT_GROSS_WEIGHT,
	   B.NO_WOODEN,
	   B.NM_FILE,
	   B.DC_FILE,
	   B.QT_CBM,
	   MC.NM_CC,
	   (CASE WHEN B.QT_CBM >= 1 THEN B.QT_CBM * TC.UM ELSE TC.UM END) AS AM,
	   FT.CD_PC,
	   FT.NO_DOCU,
	   FT.AM_DOCU,
	   FT.AM_BAN
FROM B
LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_GIR, PL.NO_PACK, PL.NO_FILE,
		 	      ROW_NUMBER() OVER (PARTITION BY PL.CD_COMPANY, PL.NO_GIR, PL.NO_PACK ORDER BY PL.AM_SO DESC) AS IDX
		   FROM (SELECT PL.CD_COMPANY, PL.NO_GIR, PL.NO_PACK, PL.NO_FILE,
		 	            SUM(SL.AM_WONAMT) AS AM_SO
		         FROM CZ_SA_PACKL PL
		         LEFT JOIN SA_SOL SL ON SL.CD_COMPANY = PL.CD_COMPANY AND SL.NO_SO = PL.NO_FILE AND SL.SEQ_SO = PL.NO_QTLINE
		         GROUP BY PL.CD_COMPANY, PL.NO_GIR, PL.NO_PACK, PL.NO_FILE) PL) PL
ON PL.CD_COMPANY = B.CD_COMPANY AND PL.NO_GIR = B.NO_GIR AND PL.NO_PACK = (CASE WHEN B.YN_EXISTS_LINE = 'Y' THEN B.NO_PACK ELSE 1 END) AND PL.IDX = 1
LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = PL.CD_COMPANY AND SH.NO_SO = PL.NO_FILE
LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
LEFT JOIN MA_CC MC ON MC.CD_COMPANY = SG.CD_COMPANY AND MC.CD_CC = SG.CD_CC
LEFT JOIN (SELECT TH.CD_COMPANY,
	  	          TL.SIZE,
	  	          TL.UM 
	  	   FROM CZ_MA_TARIFF_CBM_H TH
	  	   JOIN CZ_MA_TARIFF_CBM_L TL ON TL.CD_COMPANY = TH.CD_COMPANY AND TL.CD_PARTNER = TH.CD_PARTNER
	  	   WHERE ISNULL(TH.YN_USE, 'N') = 'Y'
	  	   AND CONVERT(NVARCHAR(8), GETDATE(), 112) BETWEEN TL.DT_START AND TL.DT_END) TC
ON TC.CD_COMPANY = B.CD_COMPANY AND TC.SIZE = (CASE WHEN B.QT_CBM >= 1 THEN 1 ELSE B.QT_CBM END)
LEFT JOIN (SELECT FD.CD_COMPANY,
			      FD.NO_MDOCU,
				  FD.NO_DOCU, 
				  FD.CD_PC,
				  SUM(BH.AM_DOCU) AS AM_DOCU,
				  SUM(BH.AM_BAN) AS AM_BAN 
		   FROM FI_DOCU FD
		   LEFT JOIN FI_BANH BH ON BH.CD_COMPANY = FD.CD_COMPANY AND BH.NO_DOCU = FD.NO_DOCU AND BH.NO_DOLINE = FD.NO_DOLINE
		   GROUP BY FD.CD_COMPANY, FD.NO_MDOCU, FD.NO_DOCU, FD.CD_PC) FT 
ON FT.CD_COMPANY = B.CD_COMPANY AND FT.NO_MDOCU = B.NO_WOODEN

GO
