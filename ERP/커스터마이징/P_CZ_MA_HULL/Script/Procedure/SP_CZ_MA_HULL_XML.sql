USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MA_HULL_XML]    Script Date: 2015-10-26 오후 7:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_MA_HULL_XML] 
(
	@P_XML			XML, 
	@P_ID_USER		NVARCHAR(10), 
    @DOC			INT = NULL
) 
AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

EXEC SP_XML_PREPAREDOCUMENT @DOC OUTPUT, @P_XML 

-- ================================================== DELETE
DELETE A 
FROM CZ_MA_HULL A 
JOIN OPENXML (@DOC, '/XML/D', 2) 
        WITH (NO_IMO NVARCHAR(10)) B 
ON A.NO_IMO = B.NO_IMO
-- ================================================== INSERT
INSERT INTO CZ_MA_HULL 
(
	NO_IMO,
	NO_HULL,		
	CALL_SIGN,		
	NM_VESSEL,			
	NM_CERT,				
	NM_SHIP_OWNER,		
	DT_SHIP_DLV,
	TP_SHIP_YARD,
	TP_SHIP,				
	YN_NEWSHIP,			
	CD_PARTNER,			
	PURIFIER,				
	BOILER,				
	INCINERATOR,			
	PUMP,					
	REF_SYS,				
	ER_MACH,				
	DECK_MACH,			
	PRE_MACH,				
	DC_RMK,			
	PROPELLER_SERIAL,		
	STERNPOST_SERIAL,		
	INVOICE_COMPANY,		
	INVOICE_ADDRESS,
	INVOICE_TEL,		
	INVOICE_EMAIL,		
	INVOICE_RMK,
	TP_VAT,
	CD_NATION,
	QT_DEAD_WEIGHT,
	YN_DOM,	
	YN_SCRUBBER,
	DC_BWTS,
	DC_SHIPBUILDER,
	ID_INSERT,
	DTS_INSERT
)
SELECT NO_IMO,
	   NO_HULL,		
	   CALL_SIGN,		
	   NM_VESSEL,			
	   NM_CERT,				
	   NM_SHIP_OWNER,		
	   DT_SHIP_DLV,
	   TP_SHIP_YARD,
	   TP_SHIP,				
	   YN_NEWSHIP,			
	   CD_PARTNER,			
	   PURIFIER,				
	   BOILER,				
	   INCINERATOR,			
	   PUMP,					
	   REF_SYS,				
	   ER_MACH,				
	   DECK_MACH,			
	   PRE_MACH,				
	   REPLACE(DC_RMK, CHAR(10), CHAR(13) + CHAR(10)),		
	   PROPELLER_SERIAL,		
	   STERNPOST_SERIAL,		
	   REPLACE(INVOICE_COMPANY, CHAR(10), CHAR(13) + CHAR(10)), 		
	   REPLACE(INVOICE_ADDRESS, CHAR(10), CHAR(13) + CHAR(10)), 
	   REPLACE(INVOICE_TEL, CHAR(10), CHAR(13) + CHAR(10)), 		
	   REPLACE(INVOICE_EMAIL, CHAR(10), CHAR(13) + CHAR(10)), 		
	   REPLACE(INVOICE_RMK, CHAR(10), CHAR(13) + CHAR(10)),
	   TP_VAT,
	   CD_NATION, 
	   QT_DEAD_WEIGHT,
	   YN_DOM,
	   YN_SCRUBBER,
	   DC_BWTS,
	   DC_SHIPBUILDER,
       @P_ID_USER, 
       NEOE.SF_SYSDATE(GETDATE()) 
  FROM OPENXML (@DOC, '/XML/I', 2) 
          WITH (NO_IMO				NVARCHAR(10), 
				NO_HULL				NVARCHAR(20),
				CALL_SIGN			NVARCHAR(20),
				NM_VESSEL			NVARCHAR(50), 
				NM_CERT				NVARCHAR(50), 
				NM_SHIP_OWNER		NVARCHAR(80), 
				DT_SHIP_DLV			NVARCHAR(6),
				TP_SHIP_YARD		NVARCHAR(5),
				TP_SHIP				NVARCHAR(3),
				YN_NEWSHIP			NVARCHAR(1), 
				CD_PARTNER			NVARCHAR(20),
				PURIFIER			NVARCHAR(30), 
				BOILER				NVARCHAR(30), 
				INCINERATOR			NVARCHAR(30), 
				PUMP				NVARCHAR(30), 
				REF_SYS				NVARCHAR(30), 
				ER_MACH				NVARCHAR(30), 
				DECK_MACH			NVARCHAR(30), 
				PRE_MACH			NVARCHAR(30),
				DC_RMK				NVARCHAR(500),
				PROPELLER_SERIAL	NVARCHAR(20), 
				STERNPOST_SERIAL	NVARCHAR(20), 
				INVOICE_COMPANY		NVARCHAR(MAX), 
				INVOICE_ADDRESS		NVARCHAR(MAX),
				INVOICE_TEL			NVARCHAR(MAX),
				INVOICE_EMAIL		NVARCHAR(MAX),
				INVOICE_RMK			NVARCHAR(MAX),
				TP_VAT				NVARCHAR(3),
				CD_NATION			NVARCHAR(3),
				QT_DEAD_WEIGHT		NUMERIC(18, 0),
				YN_DOM				NVARCHAR(1),
			    YN_SCRUBBER			NVARCHAR(1),
				DC_BWTS				NVARCHAR(100),
				DC_SHIPBUILDER	    NVARCHAR(100)) 
-- ================================================== UPDATE    
UPDATE A 
   SET A.NO_HULL = B.NO_HULL, 
	   A.CALL_SIGN = B.CALL_SIGN,
	   A.NM_VESSEL = B.NM_VESSEL, 
	   A.NM_CERT = B.NM_CERT, 
	   A.NM_SHIP_OWNER = B.NM_SHIP_OWNER, 
	   A.DT_SHIP_DLV = B.DT_SHIP_DLV, 
	   A.TP_SHIP_YARD = B.TP_SHIP_YARD, 
	   A.TP_SHIP = B.TP_SHIP, 
	   A.YN_NEWSHIP = B.YN_NEWSHIP, 
	   A.CD_PARTNER = B.CD_PARTNER, 
	   A.PURIFIER = B.PURIFIER, 
	   A.BOILER = B.BOILER, 
	   A.INCINERATOR = B.INCINERATOR, 
	   A.PUMP = B.PUMP, 
	   A.REF_SYS = B.REF_SYS, 
	   A.ER_MACH = B.ER_MACH, 
	   A.DECK_MACH = B.DECK_MACH, 
	   A.PRE_MACH = B.PRE_MACH, 
	   A.DC_RMK = REPLACE(B.DC_RMK, CHAR(10), CHAR(13) + CHAR(10)),
	   A.PROPELLER_SERIAL = B.PROPELLER_SERIAL, 
	   A.STERNPOST_SERIAL = B.STERNPOST_SERIAL, 
	   A.INVOICE_COMPANY = REPLACE(B.INVOICE_COMPANY, CHAR(10), CHAR(13) + CHAR(10)), 
	   A.INVOICE_ADDRESS = REPLACE(B.INVOICE_ADDRESS, CHAR(10), CHAR(13) + CHAR(10)), 
	   A.INVOICE_TEL = REPLACE(B.INVOICE_TEL, CHAR(10), CHAR(13) + CHAR(10)), 
	   A.INVOICE_EMAIL = REPLACE(B.INVOICE_EMAIL, CHAR(10), CHAR(13) + CHAR(10)), 
	   A.INVOICE_RMK = REPLACE(B.INVOICE_RMK, CHAR(10), CHAR(13) + CHAR(10)),
	   A.TP_VAT = B.TP_VAT,
	   A.CD_NATION = B.CD_NATION,
	   A.QT_DEAD_WEIGHT = B.QT_DEAD_WEIGHT, 
	   A.YN_DOM = B.YN_DOM,
	   A.YN_SCRUBBER = B.YN_SCRUBBER,
	   A.DC_BWTS = B.DC_BWTS,
	   A.DC_SHIPBUILDER = B.DC_SHIPBUILDER,
	   A.ID_UPDATE = @P_ID_USER, 
	   A.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE())
  FROM CZ_MA_HULL A 
  JOIN OPENXML (@DOC, '/XML/U', 2) 
          WITH (NO_IMO				NVARCHAR(10), 
				NO_HULL				NVARCHAR(20),
				CALL_SIGN			NVARCHAR(20),
				NM_VESSEL			NVARCHAR(50), 
				NM_CERT				NVARCHAR(50), 
				NM_SHIP_OWNER		NVARCHAR(80), 
				DT_SHIP_DLV			NVARCHAR(6),
				TP_SHIP_YARD		NVARCHAR(5),
				TP_SHIP				NVARCHAR(3),
				YN_NEWSHIP			NVARCHAR(1), 
				CD_PARTNER			NVARCHAR(20),
				PURIFIER			NVARCHAR(30), 
				BOILER				NVARCHAR(30), 
				INCINERATOR			NVARCHAR(30), 
				PUMP				NVARCHAR(30), 
				REF_SYS				NVARCHAR(30), 
				ER_MACH				NVARCHAR(30), 
				DECK_MACH			NVARCHAR(30), 
				PRE_MACH			NVARCHAR(30),
				DC_RMK				NVARCHAR(500),
				PROPELLER_SERIAL	NVARCHAR(20), 
				STERNPOST_SERIAL	NVARCHAR(20), 
				INVOICE_COMPANY		NVARCHAR(MAX), 
				INVOICE_ADDRESS		NVARCHAR(MAX),
				INVOICE_TEL			NVARCHAR(MAX),
				INVOICE_EMAIL		NVARCHAR(MAX),
				INVOICE_RMK			NVARCHAR(MAX),
				TP_VAT				NVARCHAR(3),
				CD_NATION			NVARCHAR(3),
				QT_DEAD_WEIGHT		NUMERIC(18, 0),
				YN_DOM				NVARCHAR(1),
				YN_SCRUBBER			NVARCHAR(1),
				DC_BWTS				NVARCHAR(100),
				DC_SHIPBUILDER	    NVARCHAR(100)) B 
  ON A.NO_IMO = B.NO_IMO 

EXEC SP_XML_REMOVEDOCUMENT @DOC 

GO