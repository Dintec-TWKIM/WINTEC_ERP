USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MA_HULL_VENDOR_ITEM_EXCEL]    Script Date: 2019-01-16 오전 10:57:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






ALTER PROCEDURE [NEOE].[SP_CZ_MA_HULL_VENDOR_ITEM_EXCEL] 
(
	@P_XML			XML, 
	@P_ID_USER		NVARCHAR(10)
) 
AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_DOC INT

EXEC SP_XML_PREPAREDOCUMENT @V_DOC OUTPUT, @P_XML 

SELECT * INTO #XML
FROM OPENXML (@V_DOC, '/XML/ROW', 2) WITH 
(
    NO_IMO				NVARCHAR(10),
	CD_VENDOR		NVARCHAR(20),
	NO_TYPE			INT,
	NO_ITEM			INT,
	QT_ITEM			NUMERIC(11, 0),
	CD_ITEM			NVARCHAR(20),
	NO_PART			NVARCHAR(100),
	NM_PART			NVARCHAR(500),
	DC_MODEL			NVARCHAR(100),
	NO_POS				NVARCHAR(100),
	UCODE				NVARCHAR(100),
	UCODE2			NVARCHAR(100),
	NO_DRAWING		NVARCHAR(100),
	NO_DRAWING2	NVARCHAR(100),
	UNIT					NVARCHAR(4),
	DC_RMK				NVARCHAR(500),
	DC_RMK1			NVARCHAR(500),
	DC_RMK2			NVARCHAR(500),
	DC_RMK3			NVARCHAR(500),
	DC_RMK4			NVARCHAR(500),
	DC_RMK5			NVARCHAR(500),
	DC_RMK6			NVARCHAR(500),
	DC_RMK7			NVARCHAR(500),
	DC_RMK8			NVARCHAR(500),
	DC_RMK9			NVARCHAR(500),
	DC_RMK10			NVARCHAR(500),
	YN_DELETE			NVARCHAR(1)
)

EXEC SP_XML_REMOVEDOCUMENT @V_DOC 

-- ================================================== DELETE
DELETE A
FROM CZ_MA_HULL_VENDOR_ITEM A
JOIN #XML B ON B.NO_IMO = A.NO_IMO AND B.CD_VENDOR = A.CD_VENDOR AND B.NO_TYPE = A.NO_TYPE AND B.NO_ITEM = A.NO_ITEM
WHERE B.YN_DELETE = 'Y';

-- ================================================== INSERT, UPDATE
WITH A AS
(
	SELECT A.NO_IMO,
		   A.CD_VENDOR,
		   A.NO_TYPE,
	       ISNULL(B.NO_ITEM, 0) + ROW_NUMBER() OVER (PARTITION BY A.NO_IMO, A.CD_VENDOR, A.NO_TYPE ORDER BY A.NO_IMO, A.CD_VENDOR, A.NO_TYPE) AS NO_ITEM,
		   A.QT_ITEM,
		   A.CD_ITEM,
		   A.NO_PART,
		   A.NM_PART,
		   A.DC_MODEL,
		   A.NO_POS,
		   A.UCODE,
		   A.UCODE2,
		   A.NO_DRAWING,
		   A.NO_DRAWING2,
		   A.UNIT,
		   A.DC_RMK,
		   A.DC_RMK1,
		   A.DC_RMK2,
		   A.DC_RMK3,
		   A.DC_RMK4,
		   A.DC_RMK5,
		   A.DC_RMK6,
		   A.DC_RMK7,
		   A.DC_RMK8,
		   A.DC_RMK9,
		   A.DC_RMK10,
		   '   ' + REPLACE(NEOE.FN_CZ_SINGLE_SPACE(CONCAT(A.NO_PART, ' ' + A.NM_PART, ' ' + A.DC_MODEL, ' ' + A.NO_POS, ' ' + A.UCODE, ' ' + A.UCODE2, ' ' + A.NO_DRAWING, ' ' + A.NO_DRAWING2, ' ' + A.DC_RMK1, ' ' + A.DC_RMK2, ' ' + A.DC_RMK3, ' ' + A.DC_RMK4, ' ' + A.DC_RMK5, ' ' + A.DC_RMK6, ' ' + A.DC_RMK7, ' ' + A.DC_RMK8, ' ' + A.DC_RMK9, ' ' + A.DC_RMK10)), ' ', '   ') + '   ' AS DXDESC,
		   @P_ID_USER AS ID_INSERT,
	       NEOE.SF_SYSDATE(GETDATE()) AS DTS_INSERT
    FROM #XML A
	LEFT JOIN (SELECT NO_IMO, CD_VENDOR, NO_TYPE,
					  MAX(NO_ITEM) AS NO_ITEM
			   FROM CZ_MA_HULL_VENDOR_ITEM 
			   GROUP BY NO_IMO, CD_VENDOR, NO_TYPE) B
	ON B.NO_IMO = A.NO_IMO AND B.CD_VENDOR = A.CD_VENDOR AND B.NO_TYPE = A.NO_TYPE
	WHERE A.NO_ITEM IS NULL
    AND ISNULL(A.YN_DELETE, 'N') = 'N'
)
INSERT INTO CZ_MA_HULL_VENDOR_ITEM
(
	NO_IMO,
	CD_VENDOR,
	NO_TYPE,
	NO_ITEM,
	QT_ITEM,
	CD_ITEM,
	NO_PART,
	NM_PART,
	DC_MODEL,
	NO_POS,
	UCODE,
	UCODE2,
	NO_DRAWING,
	NO_DRAWING2,
	UNIT,
	DC_RMK,
	DC_RMK1,
	DC_RMK2,
	DC_RMK3,
	DC_RMK4,
	DC_RMK5,
	DC_RMK6,
	DC_RMK7,
	DC_RMK8,
	DC_RMK9,
	DC_RMK10,
	DXDESC,
	ID_INSERT,
	DTS_INSERT
)
SELECT NO_IMO,
	   CD_VENDOR,
	   NO_TYPE,
	   NO_ITEM,
	   QT_ITEM,
	   CD_ITEM,
	   NO_PART,
	   NM_PART,
	   DC_MODEL,
	   NO_POS,
	   UCODE,
	   UCODE2,
	   NO_DRAWING,
	   NO_DRAWING2,
	   UNIT,
	   DC_RMK,
	   DC_RMK1,
	   DC_RMK2,
	   DC_RMK3,
	   DC_RMK4,
	   DC_RMK5,
	   DC_RMK6,
	   DC_RMK7,
	   DC_RMK8,
	   DC_RMK9,
	   DC_RMK10,
	   DXDESC,
	   ID_INSERT,
	   DTS_INSERT
FROM A;

-- UPDATE
MERGE INTO CZ_MA_HULL_VENDOR_ITEM AS T
	  USING (SELECT NO_IMO,
					CD_VENDOR,
					NO_TYPE,
					NO_ITEM,
					QT_ITEM,
					CD_ITEM,
					NO_PART,
					NM_PART,
					DC_MODEL,
					NO_POS,
					UCODE,
					UCODE2,
					NO_DRAWING,
					NO_DRAWING2,
					UNIT,
					DC_RMK,
					DC_RMK1,
					DC_RMK2,
					DC_RMK3,
					DC_RMK4,
					DC_RMK5,
					DC_RMK6,
					DC_RMK7,
					DC_RMK8,
					DC_RMK9,
					DC_RMK10,
					'   ' + REPLACE(NEOE.FN_CZ_SINGLE_SPACE(CONCAT(NO_PART, ' ' + NM_PART, ' ' + DC_MODEL, ' ' + NO_POS, ' ' + UCODE, ' ' + UCODE2, ' ' + NO_DRAWING, ' ' + NO_DRAWING2, ' ' + DC_RMK1, ' ' + DC_RMK2, ' ' + DC_RMK3, ' ' + DC_RMK4, ' ' + DC_RMK5, ' ' + DC_RMK6, ' ' + DC_RMK7, ' ' + DC_RMK8, ' ' + DC_RMK9, ' ' + DC_RMK10)), ' ', '   ') + '   ' AS DXDESC
	         FROM #XML
			 WHERE NO_ITEM IS NOT NULL
			 AND ISNULL(YN_DELETE, 'N') = 'N') AS S
	  ON T.NO_IMO = S.NO_IMO
	  AND T.CD_VENDOR = S.CD_VENDOR
	  AND T.NO_TYPE = S.NO_TYPE
	  AND T.NO_ITEM = S.NO_ITEM
	  WHEN MATCHED THEN
		UPDATE SET T.QT_ITEM = S.QT_ITEM,
				   T.CD_ITEM = S.CD_ITEM,
				   T.NO_PART = S.NO_PART,
				   T.NM_PART = S.NM_PART,
				   T.DC_MODEL = S.DC_MODEL,
				   T.NO_POS = S.NO_POS,
				   T.UCODE = S.UCODE,
				   T.UCODE2 = S.UCODE2,
				   T.NO_DRAWING = S.NO_DRAWING,
				   T.NO_DRAWING2 = S.NO_DRAWING2,
				   T.UNIT = S.UNIT,
				   T.DC_RMK = S.DC_RMK,
				   T.DC_RMK1 = S.DC_RMK1,
				   T.DC_RMK2 = S.DC_RMK2,
				   T.DC_RMK3 = S.DC_RMK3,
				   T.DC_RMK4 = S.DC_RMK4,
				   T.DC_RMK5 = S.DC_RMK5,
				   T.DC_RMK6 = S.DC_RMK6,
				   T.DC_RMK7 = S.DC_RMK7,
				   T.DC_RMK8 = S.DC_RMK8,
				   T.DC_RMK9 = S.DC_RMK9,
				   T.DC_RMK10 = S.DC_RMK10,
				   T.DXDESC = S.DXDESC,
				   T.ID_UPDATE = @P_ID_USER,
				   T.DTS_UPDATE = NEOE.SF_SYSDATE(GETDATE());

DROP TABLE #XML

GO