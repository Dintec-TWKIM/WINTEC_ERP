USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_HSD_STOCK_RPT_S]    Script Date: 2015-06-16 오후 3:36:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_PU_HSD_STOCK_RPT_S] 
(
	@P_CD_COMPANY    NVARCHAR(7),
    @P_DT_FROM       NVARCHAR(8),
    @P_DT_TO         NVARCHAR(8),
    @P_YN_CANCEL     NVARCHAR(1),
    @P_YN_SUPPLIER   NVARCHAR(1) = 'N',
    @P_YN_EX_ADD     NVARCHAR(1) = 'N'
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #발주품목
(
    CD_COMPANY   NVARCHAR(7),
    CD_ITEM	     NVARCHAR(20),
    DC1          NVARCHAR(200)
)

CREATE NONCLUSTERED INDEX 발주품목 ON #발주품목 (CD_COMPANY, CD_ITEM)
CREATE NONCLUSTERED INDEX 발주품목1 ON #발주품목 (CD_COMPANY, DC1)

CREATE TABLE #입고
(
    DC1         NVARCHAR(200),
    NO_ORDER    NVARCHAR(200),
    CD_ITEM	    NVARCHAR(20),
    DT_IO	    NVARCHAR(8),
    QT_IO	    NUMERIC(17, 4),
    IDX         INT,
    QT_SUM	    NUMERIC(17, 4),
    YN_HSD      NVARCHAR(1)
)

CREATE NONCLUSTERED INDEX 입고 ON #입고 (CD_ITEM)

CREATE TABLE #재고사용
(
    CD_COMPANY  NVARCHAR(7),
    NO_FILE     NVARCHAR(20),
    NO_LINE	    NUMERIC(5, 0),
    CD_ITEM	    NVARCHAR(20),
    QT_BOOK	    NUMERIC(15, 4),
    QT_SUM	    NUMERIC(15, 4),
)

CREATE NONCLUSTERED INDEX 재고사용 ON #재고사용 (CD_ITEM)

CREATE TABLE #계정대체
(
     CD_COMPANY      NVARCHAR(7),
     NO_PO           NVARCHAR(20),
     NO_LINE         NUMERIC(5, 0),
     NO_IO           NVARCHAR(20),
     NO_IOLINE       NUMERIC(5, 0),
     CD_ITEM_FROM    NVARCHAR(20),
     CD_ITEM_TO      NVARCHAR(20),
     QT_IO_FROM      NUMERIC(17, 4),
     QT_IO_TO        NUMERIC(17, 4),
     DTS_INSERT      NVARCHAR(14),
     DC1             NVARCHAR(200)
)

CREATE NONCLUSTERED INDEX 계정대체 ON #계정대체 (CD_COMPANY, NO_PO, NO_LINE)

SELECT * INTO #LAMELLA 
FROM (VALUES ('DC50049'),
             ('DC60059'),
             ('DC70048'),
             ('DC98051'),
             ('DE50001'),
             ('DE60493'),
             ('DE80080'),
             ('DE90131'),
             ('DE95026')) AS A(CD_ITEM)

INSERT INTO #발주품목
SELECT PL.CD_COMPANY, 
       PL.CD_ITEM, 
       PL.DC1 
FROM (SELECT PL.CD_COMPANY, 
             PL.CD_ITEM,
             PL.DC1
      FROM PU_POH PH
      JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
      WHERE PH.CD_COMPANY = @P_CD_COMPANY
      AND PH.CD_PARTNER = '01340'
      AND ISNULL(PL.DC1, '') LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9]'
      AND NOT EXISTS (SELECT 1 
                      FROM CZ_PU_POL_HSD PL1
                      WHERE PL1.CD_COMPANY = PL.CD_COMPANY
                      AND PL1.NO_PO = PL.NO_PO
                      AND PL1.NO_LINE = PL.NO_LINE)
      UNION ALL
      SELECT PL.CD_COMPANY,
             PL.CD_ITEM,
             PL.DC1
      FROM CZ_PU_POL_HSD PL) PL
GROUP BY PL.CD_COMPANY, PL.CD_ITEM, PL.DC1

INSERT INTO #계정대체
SELECT OL.CD_COMPANY,
       PL.NO_PO,
       PL.NO_LINE,
       OL.NO_IO,
       OL.NO_IOLINE,
       OL.CD_ITEM AS CD_ITEM_FROM,
       IL.CD_ITEM AS CD_ITEM_TO,
       (CASE WHEN OL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(OL.QT_IO / 3, 0) ELSE OL.QT_IO END) AS QT_IO_FROM,
       (CASE WHEN IL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(IL.QT_IO / 3, 0) ELSE IL.QT_IO END) AS QT_IO_TO,
       OL.DTS_INSERT,
       PL.DC1
FROM MM_QTIO OL
JOIN MM_QTIO IL ON IL.CD_COMPANY = OL.CD_COMPANY AND IL.NO_IO_MGMT = OL.NO_IO AND IL.NO_IOLINE_MGMT = OL.NO_IOLINE
LEFT JOIN MM_QTIO IL1 ON IL1.CD_COMPANY = OL.CD_COMPANY AND IL1.NO_IO = OL.NO_IO_MGMT AND IL1.NO_IOLINE = OL.NO_IOLINE_MGMT
LEFT JOIN PU_POL PL ON PL.CD_COMPANY = IL1.CD_COMPANY AND PL.NO_PO = IL1.NO_PSO_MGMT AND PL.NO_LINE = IL1.NO_PSOLINE_MGMT
WHERE OL.CD_COMPANY = @P_CD_COMPANY
AND OL.FG_PS = '2'
AND OL.CD_SL = 'SL02'
AND OL.CD_QTIOTP  = '420'

;WITH A AS
(
    SELECT PH.NO_ORDER,
           PL.DC1,
           PL.CD_ITEM,
           MAX(LEFT(PL.DTS_INSERT, 8)) AS DT_IO,
           SUM(PL.QT_PO_HSD) AS QT_IO
    FROM PU_POH PH
    JOIN (SELECT PL.*,
                 (CASE WHEN PL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(PL.QT_PO / 3, 0) ELSE PL.QT_PO END) AS QT_PO_HSD
          FROM PU_POL PL) PL 
    ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
    WHERE PH.CD_COMPANY = @P_CD_COMPANY
    AND PH.NO_PO LIKE 'DT%'
    AND PL.FG_RCV IN ('160', '170', '180', '190')
    AND NOT EXISTS (SELECT 1 
                    FROM CZ_PU_POL_HSD PL1
                    WHERE PL1.CD_COMPANY = PL.CD_COMPANY
                    AND PL1.NO_PO = PL.NO_PO
                    AND PL1.NO_LINE = PL.NO_LINE)
    AND NOT EXISTS (SELECT 1 
                    FROM #계정대체 OL
                    WHERE OL.CD_COMPANY = PL.CD_COMPANY
                    AND OL.NO_PO = PL.NO_PO
                    AND OL.NO_LINE = PL.NO_LINE)
    AND EXISTS (SELECT 1 
                FROM #발주품목 A
                WHERE A.CD_COMPANY = PL.CD_COMPANY
                AND A.CD_ITEM = PL.CD_ITEM)
    GROUP BY PH.NO_ORDER, PL.DC1, PL.CD_ITEM
    HAVING SUM(PL.QT_PO_HSD) > 0
    UNION ALL
    SELECT PL.NO_ORDER,
           PL.DC1,
           PL.CD_ITEM,
           MAX(LEFT(PL.DTS_INSERT, 8)) AS DT_IO,
           SUM(PL.QT_PO) AS QT_IO 
    FROM CZ_PU_POL_HSD PL
    GROUP BY PL.NO_ORDER, PL.DC1, PL.CD_ITEM
    HAVING SUM(PL.QT_PO) > 0
    UNION ALL
    SELECT NULL AS NO_ORDER,
           NULL AS DC1,
           GL.CD_ITEM,
           LEFT(GL.DTS_INSERT, 8) AS DT_GIR,
           SUM(GL.QT_GIR_HSD) AS QT_GIR_STOCK
    FROM SA_GIRH GH
    JOIN (SELECT GL.*,
                 (CASE WHEN GL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(GL.QT_GIR_STOCK / 3, 0) ELSE GL.QT_GIR_STOCK END) AS QT_GIR_HSD
          FROM SA_GIRL GL) GL
    ON GL.CD_COMPANY = GH.CD_COMPANY AND GL.NO_GIR = GH.NO_GIR
    WHERE GL.CD_COMPANY = @P_CD_COMPANY
    AND GL.YN_GI_STOCK = 'Y'
    AND EXISTS (SELECT 1 
                FROM MM_QTIO OL
                WHERE OL.CD_COMPANY = GL.CD_COMPANY
                AND OL.NO_ISURCV = GL.NO_GIR
                AND OL.NO_ISURCVLINE = GL.SEQ_GIR)
    AND EXISTS (SELECT 1 
                FROM #발주품목 A
                WHERE A.CD_COMPANY = GL.CD_COMPANY
                AND A.CD_ITEM = GL.CD_ITEM)
    GROUP BY GL.CD_ITEM, LEFT(GL.DTS_INSERT, 8)
    UNION ALL
    SELECT PH.NO_ORDER,
           PL.DC1,
           PL.CD_ITEM_TO AS CD_ITEM,
           MAX(LEFT(PL.DTS_INSERT, 8)) AS DT_IO,
           SUM(ISNULL(PL.QT_IO_TO, 0)) AS QT_IO  
    FROM PU_POH PH
    JOIN #계정대체 PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
    WHERE EXISTS (SELECT 1 
                  FROM PU_POL PL1
                  WHERE PL1.CD_COMPANY = PL.CD_COMPANY
                  AND PL1.NO_PO = PL.NO_PO
                  AND PL1.NO_LINE = PL.NO_LINE)
    GROUP BY PH.NO_ORDER, PL.DC1, PL.CD_ITEM_TO
    UNION ALL
    SELECT PH.NO_ORDER,
           PL.DC1,
           PL.CD_ITEM AS CD_ITEM,
           MAX(LEFT(PL.DTS_INSERT, 8)) AS DT_IO,
           SUM(ISNULL(PL.QT_PO_HSD, 0) - ISNULL(PL1.QT_IO_TO, 0)) AS QT_PO  
    FROM PU_POH PH
    JOIN (SELECT PL.*,
                 (CASE WHEN PL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(PL.QT_PO / 3, 0) ELSE PL.QT_PO END) AS QT_PO_HSD
          FROM PU_POL PL) PL
    ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
    JOIN #계정대체 PL1 ON PL1.CD_COMPANY = PL.CD_COMPANY AND PL1.NO_PO = PL.NO_PO AND PL1.NO_LINE = PL.NO_LINE
    WHERE PL.QT_PO_HSD > PL1.QT_IO_TO
    GROUP BY PH.NO_ORDER, PL.DC1, PL.CD_ITEM
    UNION ALL
    SELECT NULL AS NO_ORDER,
           NULL AS DC1,
           PL.CD_ITEM_TO AS CD_ITEM,
           MAX(LEFT(PL.DTS_INSERT, 8)) AS DT_IO,
           SUM(ISNULL(PL.QT_IO_TO, 0)) AS QT_PO
    FROM #계정대체 PL
    WHERE PL.NO_PO IS NULL
    GROUP BY PL.CD_ITEM_TO    
)
INSERT INTO #입고
SELECT A.DC1,
       A.NO_ORDER,
       A.CD_ITEM,
       A.DT_IO,
       A.QT_IO,
       ROW_NUMBER() OVER (PARTITION BY A.CD_ITEM ORDER BY A.DT_IO, A.DC1, A.NO_ORDER) AS IDX,
       SUM(A.QT_IO) OVER (PARTITION BY A.CD_ITEM ORDER BY A.DT_IO, A.DC1, A.NO_ORDER) AS QT_SUM,
       (CASE WHEN ISNULL(A.DC1, '') LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9]' THEN 'Y' ELSE 'N' END) AS YN_HSD
FROM A

;WITH A AS
(
    SELECT SB.CD_COMPANY,
           SB.NO_FILE,
           SB.NO_LINE,
           SB.CD_ITEM,
           SB.DTS_INSERT,
           SH.NO_PO_PARTNER,
           SB.QT_STOCK_HSD AS QT_STOCK,
           SUM(SB.QT_STOCK_HSD) OVER (PARTITION BY SB.CD_ITEM, SH.NO_PO_PARTNER ORDER BY SB.CD_ITEM, SH.NO_PO_PARTNER, SH.NO_SO, SB.NO_LINE) AS QT_STOCK_SUM
    FROM (SELECT SB.*,
                 (CASE WHEN SB.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND((ISNULL(SB.QT_BOOK, 0) + ISNULL(SB.QT_HOLD, 0)) / 3, 0) 
                                                                   ELSE (ISNULL(SB.QT_BOOK, 0) + ISNULL(SB.QT_HOLD, 0)) END) AS QT_STOCK_HSD
          FROM CZ_SA_STOCK_BOOK SB) SB
    LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = SB.CD_COMPANY AND SH.NO_SO = SB.NO_FILE
    WHERE SB.CD_COMPANY = @P_CD_COMPANY
    AND EXISTS (SELECT 1 
                FROM #발주품목 A
                WHERE A.CD_COMPANY = SB.CD_COMPANY
                AND A.CD_ITEM = SB.CD_ITEM)
),
B AS
(
    SELECT A.CD_COMPANY,
           A.NO_FILE,
           A.NO_LINE,
           A.CD_ITEM,
           A.DTS_INSERT,
           A.QT_STOCK AS QT_BOOK
    FROM A
),
C AS
(
    SELECT B.CD_COMPANY,
           B.NO_FILE,
           B.NO_LINE,
           B.CD_ITEM,
           B.QT_BOOK,
           B.DTS_INSERT 
    FROM B
    WHERE B.QT_BOOK > 0
    UNION ALL
    SELECT OL.CD_COMPANY,
           OL.NO_IO,
           OL.NO_IOLINE,
           OL.CD_ITEM,
           ISNULL(OL.QT_IO_HSD, 0) AS QT_IO,
           OL.DTS_INSERT
    FROM (SELECT OL.*,
                 (CASE WHEN OL.CD_ITEM IN (SELECT * FROM #LAMELLA) THEN ROUND(OL.QT_IO / 3, 0) ELSE OL.QT_IO END) AS QT_IO_HSD
          FROM MM_QTIO OL) OL
    WHERE OL.CD_COMPANY = @P_CD_COMPANY
    AND OL.CD_QTIOTP = '500' AND OL.CD_SL_REF IN ('SCRAP', 'LOSS')
    AND EXISTS (SELECT 1 
                FROM #발주품목 PL
                WHERE PL.CD_ITEM = OL.CD_ITEM)
    UNION ALL
    SELECT CD_COMPANY,
           NO_IO,
           NO_IOLINE,
           CD_ITEM_FROM,
           QT_IO_FROM,
           DTS_INSERT
    FROM #계정대체
    WHERE NO_PO IS NULL
)
INSERT INTO #재고사용
SELECT C.CD_COMPANY,
       C.NO_FILE,
       C.NO_LINE,
       C.CD_ITEM,
       C.QT_BOOK,
       SUM(C.QT_BOOK) OVER (PARTITION BY C.CD_ITEM ORDER BY C.NO_FILE, C.NO_LINE, C.DTS_INSERT) AS QT_SUM 
FROM C

;WITH L AS
(
    SELECT B.NO_FILE,
           B.NO_LINE,
           A.QT_SUM,
           B.QT_SUM AS QT_SUM1,
           (A.QT_SUM - B.QT_SUM) AS QT_MINUS,
           A.IDX,
           ROW_NUMBER() OVER (PARTITION BY B.NO_FILE, B.NO_LINE ORDER BY A.QT_SUM) AS IDX1 
    FROM #입고 A
    JOIN #재고사용 B ON B.CD_ITEM = A.CD_ITEM
    WHERE (A.QT_SUM - B.QT_SUM) >= 0 
),
L1 AS 
(
    SELECT B.CD_COMPANY,
           B.QT_BOOK,
           A.QT_IO,
           B.QT_SUM AS QT_SUM1,
           A.QT_SUM AS QT_SUM2,
           (B.QT_SUM - B.QT_BOOK) AS QT_BEFORE1,
           (A.QT_SUM - A.QT_IO) AS QT_BEFORE2,
           B.NO_FILE,
           B.NO_LINE,
           B.CD_ITEM,
           A.DC1,
           A.NO_ORDER,
           A.YN_HSD
    FROM #입고 A 
    LEFT JOIN #재고사용 B ON B.CD_ITEM = A.CD_ITEM
    LEFT JOIN L ON L.NO_FILE = B.NO_FILE AND L.NO_LINE = B.NO_LINE AND L.IDX1 = 1
    WHERE A.QT_SUM > (B.QT_SUM - B.QT_BOOK)
    AND A.IDX <= L.IDX
),
L2 AS
(
    SELECT L1.CD_COMPANY,
           L1.NO_FILE,
           L1.NO_LINE,
           L1.CD_ITEM,
           L1.DC1,
           L1.NO_ORDER,
           L1.YN_HSD,
           (CASE WHEN L1.QT_SUM1 > L1.QT_SUM2 THEN (CASE WHEN L1.QT_BEFORE1 >= L1.QT_BEFORE2 THEN L1.QT_SUM2 - L1.QT_BEFORE1 
                                                                                             ELSE L1.QT_SUM2 - L1.QT_BEFORE2 END)
                                              ELSE (CASE WHEN L1.QT_BEFORE1 >= L1.QT_BEFORE2 THEN L1.QT_SUM1 - L1.QT_BEFORE1 
                                                                                             ELSE L1.QT_SUM1 - L1.QT_BEFORE2 END) END) AS QT_BOOK
    FROM L1
),
L3 AS
(
    SELECT L2.CD_COMPANY,
           ROW_NUMBER() OVER (PARTITION BY L2.DC1, SH.NO_PO_PARTNER ORDER BY L2.QT_BOOK DESC) AS IDX,
           SUM(L2.QT_BOOK) OVER (PARTITION BY L2.DC1, SH.NO_PO_PARTNER ORDER BY L2.QT_BOOK) AS QT_BOOK_SUM,
           L2.NO_FILE,
           L2.NO_LINE,
           L2.CD_ITEM,
           ISNULL(SH.DT_SO, OL.DT_IO) AS DT_SO,
           ISNULL(SH1.NO_PO_PARTNER, SH.NO_PO_PARTNER) AS NO_PO_PARTNER,
           ISNULL(SH1.CD_PARTNER, SH.CD_PARTNER) AS CD_PARTNER,
           MP.LN_PARTNER,
    	   (CASE WHEN ISNULL(SH1.NO_IMO, SH.NO_IMO) = '0000000' THEN NULL ELSE ISNULL(SH1.NO_IMO, SH.NO_IMO) END) AS NO_IMO,
           L2.DC1,
           L2.NO_ORDER,
           L2.YN_HSD,
           OL.CD_SL_REF,
           (CASE WHEN SH.NO_SO IS NULL THEN 'Y' ELSE NULL END) AS YN_LOSS,
           (CASE WHEN MP.FG_PARTNER NOT IN ('100', '300') THEN 'Y' ELSE 'N' END) AS YN_SUPPLIER
    FROM L2
    LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = L2.CD_COMPANY AND SH.NO_SO = L2.NO_FILE
    LEFT JOIN SA_SOH SH1 ON SH1.CD_COMPANY = 'K100' AND SH1.NO_SO = SH.NO_PO_PARTNER
    LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = (CASE WHEN SH1.CD_PARTNER IS NULL THEN L2.CD_COMPANY ELSE 'K100' END) AND MP.CD_PARTNER = ISNULL(SH1.CD_PARTNER, SH.CD_PARTNER)
    LEFT JOIN MM_QTIO OL ON OL.CD_COMPANY = L2.CD_COMPANY AND OL.NO_IO = L2.NO_FILE AND OL.NO_IOLINE = L2.NO_LINE
),
L4 AS
(
    SELECT L3.IDX,
           L3.QT_BOOK_SUM,
           L3.NO_FILE,
           L3.NO_LINE,
           L3.CD_ITEM,
           (CASE WHEN ISNULL(HS.DT_SO, '') = '' THEN L3.DT_SO ELSE HS.DT_SO END) AS DT_SO,
           (CASE WHEN ISNULL(HS.NO_PO_PARTNER, '') = '' THEN L3.NO_PO_PARTNER ELSE HS.NO_PO_PARTNER END) AS NO_PO_PARTNER,
           ISNULL(NULLIF(HS.NM_PARTNER, ''), MC.NM_SYSDEF) AS NM_PARTNER,
           (CASE WHEN ISNULL(HS.NM_VESSEL, '') = '' THEN MH.NM_VESSEL ELSE HS.NM_VESSEL END) AS NM_VESSEL,
           (CASE WHEN ISNULL(HS.NM_MODEL, '') = '' THEN (SELECT MAX(HE.NM_MODEL) AS NM_MODEL
		                                                 FROM CZ_MA_HULL_ENGINE HE
		                                                 WHERE HE.NO_IMO = L3.NO_IMO
		                                                 AND HE.CLS_L = (CASE WHEN L3.CD_ITEM LIKE 'HB%' THEN 'AE' ELSE 'ME' END)) ELSE HS.NM_MODEL END) AS NM_MODEL,
           L3.DC1,
           L3.NO_ORDER,
           L3.YN_LOSS,
           L3.YN_SUPPLIER,
           (CASE WHEN L3.CD_SL_REF = 'SCRAP' THEN '파손'
                 WHEN L3.CD_SL_REF = 'LOSS'  THEN '분실'
                 WHEN ISNULL(MC.NM_SYSDEF, '') = '' AND ISNULL(HS.NM_PARTNER, '') = '' AND L3.YN_SUPPLIER = 'N' THEN L3.LN_PARTNER
                 ELSE NULL END) AS DC_RMK,
           L3.YN_HSD 
    FROM L3
    LEFT JOIN CZ_MA_HULL MH ON MH.NO_IMO = L3.NO_IMO
    LEFT JOIN CZ_MA_CODEDTL MC ON MC.CD_COMPANY = L3.CD_COMPANY AND MC.CD_FIELD = 'CZ_SA00051' AND MC.CD_SYSDEF = L3.CD_PARTNER
    LEFT JOIN CZ_PU_HSD_STOCK_RPT HS ON HS.CD_COMPANY = L3.CD_COMPANY AND HS.NO_FILE = L3.NO_FILE AND HS.NO_LINE = L3.NO_LINE
),
L5 AS
(
    SELECT L4.DC1,
           L4.NO_ORDER,
           L4.DT_SO,
           CONVERT(INT, ISNULL(L4.QT_BOOK_SUM, 0)) AS QT_SO,
           L4.NM_PARTNER,
           L4.NM_VESSEL,
           L4.NM_MODEL,
           L4.NO_PO_PARTNER,
           L4.YN_LOSS,
           L4.DC_RMK,
           L4.CD_ITEM,
           L4.NO_FILE,
           L4.NO_LINE,
           L4.YN_SUPPLIER,
           ROW_NUMBER() OVER (PARTITION BY L4.DC1, L4.NO_PO_PARTNER, L4.DT_SO, CONVERT(INT, ISNULL(L4.QT_BOOK_SUM, 0)) ORDER BY L4.DC1, L4.NO_PO_PARTNER, L4.DT_SO, CONVERT(INT, ISNULL(L4.QT_BOOK_SUM, 0))) AS IDX
    FROM L4
    WHERE L4.IDX = 1
    AND L4.YN_HSD = 'Y'
    AND L4.DT_SO BETWEEN @P_DT_FROM AND @P_DT_TO
    AND (@P_YN_SUPPLIER = 'N' OR L4.YN_SUPPLIER = @P_YN_SUPPLIER)
)
SELECT L5.DC1,
       L5.NO_ORDER,
       L5.DT_SO,
       L5.QT_SO,
       L5.NM_PARTNER,
       L5.NM_VESSEL,
       L5.NM_MODEL,
       L5.NO_PO_PARTNER,
       L5.YN_LOSS,
       L5.DC_RMK,
       L5.CD_ITEM,
       L5.NO_FILE,
       L5.NO_LINE,
       L5.YN_SUPPLIER
FROM L5
LEFT JOIN (SELECT NO_ORDER, NO_PO_PARTNER, REPLACE(DT_SO, '-', '') AS DT_SO, QT_SO,
                  ROW_NUMBER() OVER (PARTITION BY NO_ORDER, NO_PO_PARTNER, REPLACE(DT_SO, '-', ''), QT_SO ORDER BY NO_ORDER, NO_PO_PARTNER, REPLACE(DT_SO, '-', ''), QT_SO) AS IDX
           FROM CZ_SA_HSD_DATA_LOG) HD
ON HD.NO_ORDER = L5.DC1 AND HD.NO_PO_PARTNER = L5.NO_PO_PARTNER AND HD.DT_SO = L5.DT_SO AND HD.QT_SO = L5.QT_SO AND HD.IDX = L5.IDX
WHERE (@P_YN_EX_ADD = 'N' OR HD.NO_ORDER IS NULL)

DROP TABLE #발주품목
DROP TABLE #입고
DROP TABLE #재고사용
DROP TABLE #계정대체
DROP TABLE #LAMELLA

GO