USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_EALRY_WARNING_SYSTEML_S]    Script Date: 2019-06-14 오후 4:19:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_SA_EALRY_WARNING_SYSTEML_S]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_CD_PARTNER		NVARCHAR(20)
) 
AS
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_DT_PROCESS NVARCHAR(8)

CREATE TABLE #날짜
(
	DT_TODAY NVARCHAR(8)
)

CREATE NONCLUSTERED INDEX 날짜 ON #날짜 (DT_TODAY)

SELECT @V_DT_PROCESS = MIN(DT_PROCESS) 
FROM SA_IVH
WHERE CD_COMPANY = @P_CD_COMPANY
AND CD_PARTNER = @P_CD_PARTNER

INSERT INTO #날짜
SELECT CONVERT(CHAR(8), DATEADD(MONTH, NUMBER, @V_DT_PROCESS), 112) AS DT_TODAY 
FROM MASTER..SPT_VALUES WITH(NOLOCK)
WHERE TYPE = 'P'
AND CONVERT(CHAR(8), DATEADD(MONTH, NUMBER,  @V_DT_PROCESS), 112) BETWEEN CONVERT(CHAR(8), DATEADD(MONTH, -8, GETDATE()), 112) AND CONVERT(CHAR(8), DATEADD(MONTH, 3, GETDATE()), 112);

WITH A AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   IH.NO_IV,
		   IH.DT_PROCESS,
		   (SELECT RH.DT_RCP 
			FROM SA_RCPH RH
			WHERE RH.CD_COMPANY = IH.CD_COMPANY
			AND RH.NO_RCP = IH.NO_BAN) AS DT_RCP,
		   IH.CD_EXCH,
		   IH.RT_EXCH,
		   IH.AM_EX,
		   IH.AM_BAN_EX,
		   (ISNULL(IH.AM_K, 0) + ISNULL(IH.VAT_TAX, 0)) AS AM_CLS,
		   ISNULL(IH.AM_BAN, 0) AS AM_BAN
	FROM SA_IVH IH
	WHERE IH.CD_COMPANY = @P_CD_COMPANY
	AND IH.CD_PARTNER = @P_CD_PARTNER
),
B AS
(
	SELECT A.CD_COMPANY,
		   A.CD_PARTNER,
		   A.NO_IV,
		   A.DT_PROCESS,
		   CONVERT(CHAR(8), DATEADD(DAY, MP.DT_RCP_PREARRANGED, A.DT_PROCESS), 112) AS DT_END,
		   (CASE WHEN A.AM_BAN <> 0 AND A.DT_RCP IS NULL THEN A.DT_PROCESS ELSE A.DT_RCP END) AS DT_RCP,
		   MC.NM_SYSDEF AS NM_EXCH,
		   A.RT_EXCH,
		   A.AM_EX,
		   A.AM_BAN_EX,
		   A.AM_CLS,
		   A.AM_BAN,
		   (ISNULL(A.AM_CLS, 0) - ISNULL(A.AM_BAN, 0)) AS AM_REMAIN
	FROM A
	JOIN MA_PARTNER MP ON MP.CD_COMPANY = A.CD_COMPANY AND MP.CD_PARTNER = A.CD_PARTNER
	LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = A.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = A.CD_EXCH
)
SELECT B.CD_PARTNER,
	   B.NO_IV,
	   B.DT_PROCESS,
	   B.DT_END,
	   B.DT_RCP,
	   (CASE WHEN B.AM_REMAIN <> 0 THEN DATEDIFF(DAY, B.DT_END, GETDATE()) ELSE NULL END) AS DT_END_DAY,
	   (CASE WHEN B.AM_REMAIN <> 0 THEN DATEDIFF(MONTH, B.DT_END, GETDATE()) ELSE NULL END) AS DT_END_MONTH,
	   (CASE WHEN B.AM_REMAIN = 0 AND B.DT_PROCESS < B.DT_RCP THEN DATEDIFF(DAY, B.DT_PROCESS, B.DT_RCP) ELSE NULL END) AS DT_RCP_DAY,
	   (CASE WHEN B.AM_REMAIN = 0 AND B.DT_PROCESS < B.DT_RCP THEN DATEDIFF(MONTH, B.DT_PROCESS, B.DT_RCP) ELSE NULL END) AS DT_RCP_MONTH,
	   B.NM_EXCH,
	   B.RT_EXCH,
	   B.AM_EX,
	   B.AM_BAN_EX,
	   B.AM_CLS,
	   B.AM_BAN,
	   (CASE WHEN B.DT_END <= CONVERT(CHAR(8), GETDATE(), 112) THEN B.AM_REMAIN ELSE NULL END) AS AM_END,
	   (CASE WHEN B.DT_END > CONVERT(CHAR(8), GETDATE(), 112) THEN B.AM_REMAIN ELSE NULL END) AS AM_REMAIN,
	   B.AM_REMAIN AS AM_REMAIN_TOTAL,
	   STUFF((SELECT DISTINCT ',' + IL.NO_SO
			  FROM SA_IVL IL
			  WHERE IL.CD_COMPANY = B.CD_COMPANY
			  AND IL.NO_IV = B.NO_IV
			  FOR XML PATH('')),1,1,'') AS NO_SO
FROM B;

WITH A AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   IH.DT_PROCESS,
		   (SELECT RH.DT_RCP 
			FROM SA_RCPH RH
			WHERE RH.CD_COMPANY = IH.CD_COMPANY
			AND RH.NO_RCP = IH.NO_BAN) AS DT_RCP,
		   (ISNULL(IH.AM_K, 0) + ISNULL(IH.VAT_TAX, 0)) AS AM_CLS,
		   ISNULL(IH.AM_BAN, 0) AS AM_BAN
	FROM SA_IVH IH
	WHERE IH.CD_COMPANY = @P_CD_COMPANY
	AND IH.CD_PARTNER = @P_CD_PARTNER
),
B AS
(
	SELECT A.DT_PROCESS,
		   CONVERT(CHAR(8), DATEADD(DAY, MP.DT_RCP_PREARRANGED, A.DT_PROCESS), 112) AS DT_END,
		   (CASE WHEN A.AM_BAN <> 0 AND A.DT_RCP IS NULL THEN A.DT_PROCESS ELSE A.DT_RCP END) AS DT_RCP,
		   A.AM_CLS
	FROM A
	JOIN MA_PARTNER MP ON MP.CD_COMPANY = A.CD_COMPANY AND MP.CD_PARTNER = A.CD_PARTNER
)
SELECT IH.DT_TODAY,
	   (SELECT SUM(B.AM_CLS) 
	    FROM B
	    WHERE B.DT_PROCESS BETWEEN CONVERT(CHAR(8), DATEADD(MONTH, -1, IH.DT_TODAY), 112) AND IH.DT_TODAY) AS AM_CLS,
	   (SELECT SUM(B.AM_CLS)
	    FROM B
	    WHERE B.DT_PROCESS <= IH.DT_TODAY
		AND B.DT_END >= IH.DT_TODAY
		AND (B.DT_RCP IS NULL OR B.DT_RCP > IH.DT_TODAY)) AS AM_REMAIN,
	   (SELECT SUM(B.AM_CLS) 
	    FROM B
	    WHERE B.DT_PROCESS <= IH.DT_TODAY
		AND B.DT_END < IH.DT_TODAY
		AND (B.DT_RCP IS NULL OR B.DT_RCP > IH.DT_TODAY)) AS AM_END
FROM #날짜 IH
ORDER BY IH.DT_TODAY

DROP TABLE #날짜

GO