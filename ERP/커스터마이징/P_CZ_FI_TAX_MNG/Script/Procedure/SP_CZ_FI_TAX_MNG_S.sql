USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_FI_VAT_MNG_S]    Script Date: 2015-08-12 오후 3:03:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_FI_TAX_MNG_S] 
(
	@P_CD_COMPANY		NVARCHAR(7) = '',
	@P_ST_VAT			NVARCHAR(1) = '',
	@P_ST_DOCU			NVARCHAR(1) = '',
	@P_TP_EXPORT		NVARCHAR(3) = '',
	@P_DT_PROCESS_FROM	NVARCHAR(8) = '',
	@P_DT_PROCESS_TO	NVARCHAR(8) = '',
	@P_DT_VAT_FROM		NVARCHAR(8) = '',
	@P_DT_VAT_TO		NVARCHAR(8) = '',
	@P_DT_LOADING_FROM	NVARCHAR(8) = '',
	@P_DT_LOADING_TO	NVARCHAR(8) = '',
	@P_DT_TO_FROM		NVARCHAR(8) = '',
	@P_DT_TO_TO			NVARCHAR(8) = '',
	@P_DT_SHIPPING_FROM	NVARCHAR(8) = '',
	@P_DT_SHIPPING_TO	NVARCHAR(8) = ''
) 
AS

SELECT 'N' AS S,
	   IH.NO_IV,
	   IH.DT_PROCESS,
	   IL.NO_IO,
	   IL.NO_SO,
	   IL.NO_GIR,
	   IL.DT_GIR,
	   SH.TP_SO,
	   ST.NM_SO,
	   MH.NM_VESSEL,
	   MP1.LN_PARTNER AS NM_PARTNER,
	   SH.NO_PO_PARTNER,
	   MC2.NM_SYSDEF AS NM_EXCH,
	   ISNULL(IL.AM_CLS, 0) AS AM_CLS,
	   ISNULL(IL.AM_EX, 0) AS AM_IV_EX,
	   ISNULL(IL.AM, 0) AS AM_IV,
	   (CASE WHEN FT.AM_TAX_EX IS NULL THEN ISNULL(IL.AM_EX, 0) ELSE FT.AM_TAX_EX END) AS AM_EX,
	   (CASE WHEN FT.AM_TAX IS NULL THEN ISNULL(IL.AM, 0) ELSE FT.AM_TAX END) AS AM,
	   IH.RT_EXCH AS RT_DELIVERY,
	   FT.DT_LOADING,
	   FT.DT_VAT,
	   FT.TP_EXPORT,
	   FT.DT_TO,
	   FT.NO_TO,
	   FT.DT_SHIPPING,
	   FT.DC_RMK,
	   MP.NM_PARTNER_GRP AS NM_TRANS_PARTNER,
	   MC.NM_SYSDEF AS NM_MAIN_CATEGORY,
	   MC1.NM_SYSDEF AS NM_SUB_CATEGORY,
	   MF.FILE_PATH_MNG,
	   MF1.FILE_PATH_MNG AS FILE_PATH_MNG1,
	   FD.NO_DOCU
FROM SA_IVH IH
JOIN (SELECT CD_COMPANY, NO_MDOCU, MAX(NO_DOCU) AS NO_DOCU
	  FROM FI_DOCU
	  WHERE (@P_ST_DOCU = 'A' OR ST_DOCU = @P_ST_DOCU)
	  GROUP BY CD_COMPANY, NO_MDOCU) FD 
ON FD.CD_COMPANY = IH.CD_COMPANY AND FD.NO_MDOCU = IH.NO_IV
LEFT JOIN (SELECT IL.CD_COMPANY,
				  IL.NO_IV,
				  IL.NO_IO,
				  GH.NO_GIR,
				  GH.DT_GIR,
				  GD.CD_DELIVERY_TO,
				  GD.CD_MAIN_CATEGORY,
				  GD.CD_SUB_CATEGORY,
				  GD.DT_LOADING, 
				  IL.NO_SO,
				  SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -(IL.AM_EX_CLS) ELSE IL.AM_EX_CLS END) AS AM_EX,
				  SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -(IL.AM_CLS) ELSE IL.AM_CLS END) AS AM, 
				  SUM(CASE WHEN IL.CD_ITEM LIKE 'SD%' THEN (CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -(IL.AM_CLS + IL.VAT) 
																									  ELSE (IL.AM_CLS + IL.VAT) END) 
													  ELSE 0 END) AS AM_CLS 
		   FROM SA_IVL IL
		   LEFT JOIN MM_QTIO QO ON QO.CD_COMPANY = IL.CD_COMPANY AND QO.NO_IO = IL.NO_IO AND QO.NO_IOLINE = IL.NO_IOLINE
		   LEFT JOIN SA_GIRH GH ON GH.CD_COMPANY = QO.CD_COMPANY AND GH.NO_GIR = QO.NO_ISURCV
		   LEFT JOIN CZ_SA_GIRH_WORK_DETAIL GD ON GD.CD_COMPANY = GH.CD_COMPANY AND GD.NO_GIR = GH.NO_GIR
		   GROUP BY IL.CD_COMPANY, IL.NO_IV, IL.NO_IO, GH.NO_GIR, GH.DT_GIR, GD.CD_DELIVERY_TO, GD.CD_MAIN_CATEGORY, GD.CD_SUB_CATEGORY, GD.DT_LOADING, IL.NO_SO) IL
ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IV = IH.NO_IV
LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = IL.CD_COMPANY AND SH.NO_SO = IL.NO_SO
LEFT JOIN SA_TPSO ST ON ST.CD_COMPANY = SH.CD_COMPANY AND ST.TP_SO = SH.TP_SO
LEFT JOIN CZ_MA_HULL MH ON MH.NO_IMO = SH.NO_IMO
LEFT JOIN CZ_FI_TAX FT ON FT.CD_COMPANY = IL.CD_COMPANY AND FT.NO_IV = IL.NO_IV AND FT.NO_IO = IL.NO_IO AND FT.NO_SO = IL.NO_SO
LEFT JOIN CZ_MA_DELIVERY MP ON MP.CD_COMPANY = IL.CD_COMPANY AND MP.CD_PARTNER = IL.CD_DELIVERY_TO
LEFT JOIN MA_PARTNER MP1 ON MP1.CD_COMPANY = SH.CD_COMPANY AND MP1.CD_PARTNER = SH.CD_PARTNER
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IL.CD_COMPANY AND MC.CD_FIELD = 'CZ_SA00006' AND MC.CD_SYSDEF = IL.CD_MAIN_CATEGORY
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = IL.CD_COMPANY AND MC1.CD_FIELD = MC.CD_FLAG1 AND MC1.CD_SYSDEF = IL.CD_SUB_CATEGORY
LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = SH.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000005' AND MC2.CD_SYSDEF = SH.CD_EXCH
LEFT JOIN (SELECT CD_COMPANY,
				  CD_MODULE,
				  ID_MENU,
				  CD_FILE,
				  MAX(FILE_NAME) + '(' + CONVERT(VARCHAR(3), COUNT(1)) + ')' AS FILE_PATH_MNG
		   FROM MA_FILEINFO
		   GROUP BY CD_COMPANY, CD_MODULE, ID_MENU, CD_FILE) MF 
ON MF.CD_COMPANY = IL.CD_COMPANY AND MF.CD_MODULE = 'SA' AND MF.ID_MENU = 'P_CZ_SA_GIM_REG' AND MF.CD_FILE = IL.NO_GIR + '_' + IL.CD_COMPANY
LEFT JOIN (SELECT CD_COMPANY, 
				  CD_MODULE, 
				  ID_MENU, 
				  CD_FILE,
				  MAX(FILE_NAME) + '(' + CONVERT(VARCHAR, COUNT(1)) + ')' AS FILE_PATH_MNG
		   FROM MA_FILEINFO
		   GROUP BY CD_COMPANY, CD_MODULE, ID_MENU, CD_FILE) MF1 
ON MF1.CD_COMPANY = IL.CD_COMPANY AND MF1.CD_MODULE = 'SA' AND MF1.ID_MENU = 'P_CZ_SA_GIM_REG' AND MF1.CD_FILE = IL.NO_GIR + '_' + IL.CD_COMPANY + '_ETC' 
WHERE IH.CD_COMPANY = @P_CD_COMPANY
AND IH.FG_TRANS <> '001'
AND IH.DT_PROCESS BETWEEN @P_DT_PROCESS_FROM AND @P_DT_PROCESS_TO
AND ((@P_ST_VAT = 'A') OR (@P_ST_VAT = 'S' AND ISNULL(FT.DT_VAT, '') <> '') OR (@P_ST_VAT = 'M' AND ISNULL(FT.DT_VAT, '') = ''))
AND (@P_TP_EXPORT = '' OR FT.TP_EXPORT = @P_TP_EXPORT)
AND ((@P_DT_VAT_FROM = '' AND @P_DT_VAT_TO = '') OR (FT.DT_VAT BETWEEN @P_DT_VAT_FROM AND @P_DT_VAT_TO))
AND ((@P_DT_LOADING_FROM = '' AND @P_DT_LOADING_TO = '') OR (FT.DT_LOADING BETWEEN @P_DT_LOADING_FROM AND @P_DT_LOADING_TO))
AND ((@P_DT_TO_FROM = '' AND @P_DT_TO_TO = '') OR (FT.DT_TO BETWEEN @P_DT_TO_FROM AND @P_DT_TO_TO))
AND ((@P_DT_SHIPPING_FROM = '' AND @P_DT_SHIPPING_TO = '') OR (FT.DT_SHIPPING BETWEEN @P_DT_SHIPPING_FROM AND @P_DT_SHIPPING_TO))

DROP TABLE #CZ_MA_DELIVERY

GO