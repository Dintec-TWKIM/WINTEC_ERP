USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_BI_INQ_INPUT_TIME_CHART_S2]    Script Date: 2018-08-30 오후 1:02:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_BI_INQ_INPUT_TIME_CHART_S2]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_DT_MONTH			NVARCHAR(6)
)
AS
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH WH AS
(
	SELECT WH.CD_COMPANY, WH.NO_KEY,
		   WH.ID_TYPIST,
		   (CASE WHEN EXISTS (SELECT 1 
							  FROM CZ_MA_WORKFLOWL WL
							  WHERE WL.CD_COMPANY = WH.CD_COMPANY
							  AND WL.NO_KEY = WH.NO_KEY
							  AND WL.TP_STEP = '01'
							  AND WL.YN_PARSING = 'Y') THEN 'Y' ELSE 'N' END) AS YN_PARSING,
		   CONVERT(DATETIME, (CASE WHEN MC.FG1_HOLIDAY = 'H' THEN (SELECT TOP 1 DT_CAL 
																   FROM MA_CALENDAR
																   WHERE CD_COMPANY = WH.CD_COMPANY
																   AND FG1_HOLIDAY = 'W'
																   AND DT_CAL > LEFT(WH.DTS_INSERT, 8)) + ' 09:00'
								   WHEN SUBSTRING(WH.DTS_INSERT, 9, 4) < 0900 THEN LEFT(WH.DTS_INSERT, 8) + ' 09:00'
								   WHEN SUBSTRING(WH.DTS_INSERT, 9, 4) > 1800 THEN LEFT(WH.DTS_INSERT, 8) + ' 18:00'
								   ELSE LEFT(WH.DTS_INSERT, 8) + ' ' + SUBSTRING(WH.DTS_INSERT, 9, 2) + ':' + SUBSTRING(WH.DTS_INSERT, 11, 2) END)) AS DTS_INSERT,
		   CONVERT(DATETIME, (CASE WHEN MC1.FG1_HOLIDAY = 'H' THEN (SELECT TOP 1 DT_CAL 
																	FROM MA_CALENDAR
																	WHERE CD_COMPANY = WH.CD_COMPANY
																	AND FG1_HOLIDAY = 'W'
																	AND DT_CAL > LEFT(WH1.DTS_INSERT, 8)) + ' 09:00'
								   WHEN SUBSTRING(WH1.DTS_INSERT, 9, 4) < 0900 THEN LEFT(WH1.DTS_INSERT, 8) + ' 09:00'
								   WHEN SUBSTRING(WH1.DTS_INSERT, 9, 4) > 1800 THEN LEFT(WH1.DTS_INSERT, 8) + ' 18:00'
								   ELSE LEFT(WH1.DTS_INSERT, 8) + ' ' + SUBSTRING(WH1.DTS_INSERT, 9, 2) + ':' + SUBSTRING(WH1.DTS_INSERT, 11, 2) END)) AS DTS_DONE
	FROM CZ_MA_WORKFLOWH WH
	JOIN CZ_MA_WORKFLOWH WH1 ON WH1.CD_COMPANY = WH.CD_COMPANY AND WH1.TP_STEP = '03' AND WH1.NO_KEY = WH.NO_KEY
	LEFT JOIN MA_CALENDAR MC ON MC.TP_CAL = '001' AND MC.DT_CAL = LEFT(WH.DTS_INSERT, 8) AND MC.CD_COMPANY = WH.CD_COMPANY
	LEFT JOIN MA_CALENDAR MC1 ON MC1.TP_CAL = '001' AND MC1.DT_CAL = LEFT(WH1.DTS_INSERT, 8) AND MC1.CD_COMPANY = WH.CD_COMPANY
	WHERE WH.CD_COMPANY = @P_CD_COMPANY
	AND WH.TP_STEP = '01'
	AND WH.DTS_INSERT BETWEEN @P_DT_MONTH + '00000000' AND @P_DT_MONTH + '99999999'
	AND WH1.DTS_INSERT IS NOT NULL
	AND (WH.NO_KEY LIKE 'FB________' OR 
		 WH.NO_KEY LIKE 'DB________' OR
		 WH.NO_KEY LIKE 'SB________' OR
		 WH.NO_KEY LIKE 'NB________' OR
		 WH.NO_KEY LIKE 'NS________' OR
		 WH.NO_KEY LIKE 'DS________' OR
		 WH.NO_KEY LIKE 'A-________' OR
		 WH.NO_KEY LIKE 'D-________' OR
		 WH.NO_KEY LIKE 'N-________')
	AND EXISTS (SELECT 1 
				FROM MA_CODEDTL
				WHERE CD_COMPANY = WH.CD_COMPANY
				AND CD_FIELD = 'CZ_BI00001'
				AND CD_FLAG1 = WH.ID_TYPIST
				AND (ISNULL(CD_FLAG2, '') = '' OR (WH.DTS_INSERT < CD_FLAG2 + '00000000')))
),
WH1 AS
(
	SELECT WH.CD_COMPANY,
		   WH.NO_KEY,
		   WH.ID_TYPIST,
		   WH.YN_PARSING,
		   WH.DTS_INSERT,
		   WH.DTS_DONE,
		   (DATEDIFF(DAY, WH.DTS_INSERT, WH.DTS_DONE) - ISNULL((SELECT SUM(1) 
													            FROM MA_CALENDAR
														        WHERE CD_COMPANY = WH.CD_COMPANY
														        AND FG1_HOLIDAY = 'H'
														        AND DT_CAL BETWEEN CONVERT(CHAR(8), WH.DTS_INSERT, 112) AND CONVERT(CHAR(8), WH.DTS_DONE, 112)), 0)) AS DT_DIFF 
	FROM WH WH
),
WH2 AS
(
	SELECT WH.CD_COMPANY,
		   QH.NM_SALEORG,
		   QH.CD_CC,
		   SUM(1.0) AS QT_FILE,
		   SUM(QL.QT_ITEM) AS QT_ITEM,
		   SUM(CASE WHEN WH.YN_PARSING = 'Y' THEN 1.0 ELSE 0 END) AS QT_FILE_PARSING,
		   SUM(CASE WHEN WH.YN_PARSING = 'Y' THEN QL.QT_ITEM ELSE 0 END) AS QT_ITEM_PARSING,
		   SUM(CASE WHEN WH.YN_PARSING = 'Y' AND QH.YN_SALES = 'Y' THEN 1.0 ELSE 0 END) AS QT_FILE_SALES,
		   SUM(CASE WHEN WH.YN_PARSING = 'Y' AND QH.YN_SALES = 'Y' THEN QL.QT_ITEM ELSE 0 END) AS QT_ITEM_SALES,
		   SUM(CASE WHEN WH.DT_DIFF BETWEEN 0 AND 1 THEN 1 ELSE 0 END) AS QT_TIME,
		   SUM(CASE WHEN WH.DT_DIFF = 0 THEN DATEDIFF(MINUTE, WH.DTS_INSERT, WH.DTS_DONE) 
					WHEN WH.DT_DIFF = 1 THEN DATEDIFF(MINUTE, WH.DTS_INSERT, CONVERT(NVARCHAR(8), WH.DTS_INSERT, 112) + ' 18:00') + 
										     DATEDIFF(MINUTE, CONVERT(NVARCHAR(8), WH.DTS_DONE, 112) + ' 09:00', WH.DTS_DONE) 
					ELSE 0 END) AS TM_MINUTE
	FROM WH1 WH
	JOIN (SELECT QH.CD_COMPANY, QH.NO_FILE,
				 SO.NM_SALEORG,
				 SG.CD_CC,
				 (CASE WHEN EXISTS (SELECT 1 
									FROM MA_CODEDTL
									WHERE CD_COMPANY = QH.CD_COMPANY
									AND CD_FIELD = 'CZ_BI00001'
									AND CD_FLAG1 = QH.ID_INSERT
									AND (ISNULL(CD_FLAG2, '') = '' OR (QH.DTS_INSERT < CD_FLAG2 + '00000000'))) THEN 'N' ELSE 'Y' END) AS YN_SALES
		  FROM CZ_SA_QTNH QH
		  LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = QH.CD_COMPANY AND SG.CD_SALEGRP = QH.CD_SALEGRP
		  LEFT JOIN MA_SALEORG SO ON SO.CD_COMPANY = SG.CD_COMPANY AND SO.CD_SALEORG = SG.CD_SALEORG
		  WHERE SO.CD_SALEORG IN ('010301', '020200')) QH
	ON QH.CD_COMPANY = WH.CD_COMPANY AND QH.NO_FILE = WH.NO_KEY
	JOIN (SELECT QL.CD_COMPANY, QL.NO_FILE,
				 SUM(1.0) AS QT_ITEM 
		  FROM CZ_SA_QTNL QL
		  GROUP BY QL.CD_COMPANY, QL.NO_FILE) QL
	ON QL.CD_COMPANY = WH.CD_COMPANY AND QL.NO_FILE = WH.NO_KEY
	GROUP BY WH.CD_COMPANY, QH.NM_SALEORG, QH.CD_CC
)
SELECT WH.NM_SALEORG,
	   MC.NM_CC,
	   WH.QT_FILE,
	   WH.QT_ITEM,
	   WH.QT_FILE_PARSING,
	   WH.QT_ITEM_PARSING,
	   WH.QT_FILE_SALES,
	   WH.QT_ITEM_SALES,
	   WH.QT_TIME,
	   WH.TM_MINUTE
FROM WH2 WH
LEFT JOIN MA_CC MC ON MC.CD_COMPANY = WH.CD_COMPANY AND MC.CD_CC = WH.CD_CC
ORDER BY WH.NM_SALEORG, MC.NM_CC

GO

