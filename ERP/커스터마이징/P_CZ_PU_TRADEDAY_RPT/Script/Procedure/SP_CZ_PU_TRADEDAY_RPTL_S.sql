USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_TRADEDAY_RPTL_S]    Script Date: 2015-05-04 오전 10:36:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_PU_TRADEDAY_RPTL_S]      
(      
	 @P_CD_PLANT	 NVARCHAR(7),      
	 @P_CD_COMPANY   NVARCHAR(7),
	 @P_LANGUAGE     NVARCHAR(5) = 'KR',      
	 @P_CD_ITEM		 NVARCHAR(20),      
	 @P_MULTI_CD_SL  VARCHAR(8000),      --@CD_SL   NVARCHAR(7),      
	 @P_DT_FROM		 NVARCHAR(8),      
	 @P_DT_TO		 NVARCHAR(8),      
	 @P_SL_CHECK	 NVARCHAR(1)  ,
	 @P_CD_PJT		 NVARCHAR(20) = NULL,
	 @P_YN_SL_SUM	 NVARCHAR(1) = NULL,
	 @P_YN_PJT_SUM	 NVARCHAR(1) = NULL,
	 @P_CD_ITEMGRP   NVARCHAR(20) = NULL
)      
AS
   
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_YN_PJT           NVARCHAR(1),    
        @V_YN_UNIT          NVARCHAR(1)             

EXEC UP_SF_GET_MA_ENV @P_CD_COMPANY, '',  @V_YN_PJT OUTPUT, @V_YN_UNIT OUTPUT

BEGIN      
SELECT TR.CD_ITEM,
	   TR.DT_IO, 
	   TR.FG_TRANS, 
	   TR.CD_QTIOTP, 
	   TR.YN_AM, 
	   ISNULL(TR.QT_OPEN, 0) AS QT_OPEN, 
	   TR.UM_OPEN, 
	   TR.FG_PS, 
	   TR.YN_RETURN,
	   ISNULL(TR.UM_STOCK, 0) AS UM_STOCK, 
	   TR.QT_IN, 
	   TR.QT_OUT, 
	   TR.QT_GOOD_INV, 
	   TR.QT_REJECT_INV, 
	   TR.QT_TRANS_INV, 
	   TR.QT_INSP_INV,
	   TR.NM_QTIOTP, 
	   TR.NM_YNAM, 
	   TR.NM_FGTRANS, 
	   TR.NO_IO,       
       TR.CD_PARTNER, 
	   TR.GI_PARTNER, 
	   TR.CD_SL, 
	   B.LN_PARTNER, 
	   C.LN_PARTNER AS NM_GI_PARTNER, 
	   S.NM_SL,      
       MP.NM_ITEM, 
	   MP.STND_ITEM, 
	   MP.UNIT_IM,
       SUBSTRING(TR.DT_IO,1,6) AS DT_IO_MONTH,
       0 AS ITEM_NO,     
       ISNULL(TR.CD_PJT,'') AS CD_PJT, --2011.07.18 프로젝트 코드 이장원
       PH.NM_PROJECT,
       TR.UM_IN,
	   TR.UM_OUT,
       TR.AM,
	   MJ.FG_IO, 
	   TR.NO_BL,
	   DC_RMK_LINE,
       (CASE WHEN (CASE WHEN TR.FG_PS = '1' THEN TR.QT_IN ELSE TR.QT_OUT END) = TR.QT_CLS THEN '002' ELSE '001' END) AS FG_CLS,  --마감여부
       ISNULL(TR.SEQ_PROJECT,0) SEQ_PROJECT,
       PTI.CD_ITEM AS CD_PJT_ITEM,
       PTI.NM_ITEM AS NM_PJT_ITEM,
       PTI.STND_ITEM AS PJT_ITEM_STND,        
       BIZ.NM_BIZAREA,
	   (SELECT (CASE @P_LANGUAGE WHEN 'KR' THEN NM_SYSDEF
								 WHEN 'US' THEN NM_SYSDEF_E
								 WHEN 'JP' THEN NM_SYSDEF_JP
								 WHEN 'CH' THEN NM_SYSDEF_CH END)
	    FROM MA_CODEDTL
	    WHERE CD_COMPANY = MP.CD_COMPANY
	    AND CD_FIELD = 'MA_B000010'
	    AND CD_SYSDEF = MP.CLS_ITEM) AS NM_CLS_ITEM,
       COM.NM_COMPANY,
       -- 한수 XML
       B.NO_COMPANY,
       ISNULL(B.DC_ADS1_H,'') + '' + ISNULL(B.DC_ADS1_D,'') AS DC_ADS,
       B.NO_TEL1,
       MP.NM_USERDEF1,
       MP.NM_USERDEF2,
       MP.NM_USERDEF3,
       MP.NM_USERDEF4,
       MP.NM_USERDEF5,
       MP.NO_DESIGN
INTO #T_MAIN  
FROM (SELECT A.CD_ITEM,
			 '00000000' AS DT_IO,
			 '' AS FG_TRANS,
			 '' AS CD_QTIOTP,
			 '' AS YN_AM,       
	  	     (SUM(A.QT_GOOD_INV) + SUM(A.QT_REJECT_INV) + SUM(A.QT_INSP_INV) + SUM(A.QT_TRANS_INV)) AS QT_OPEN,
			 MAX(A.UM_INV) AS UM_OPEN,     
	  	     '' AS FG_PS,
			 '' AS YN_RETURN,
			 0.0 AS UM_STOCK,
			 0.0 AS QT_IN,
			 0.0 AS QT_OUT,     
	  	     SUM(A.QT_GOOD_INV) AS QT_GOOD_INV,
			 SUM(A.QT_REJECT_INV) AS QT_REJECT_INV,      
	  	     SUM(A.QT_TRANS_INV) AS QT_TRANS_INV,
			 SUM(A.QT_INSP_INV) AS QT_INSP_INV,
			 '' AS NM_QTIOTP,
			 CONVERT(NVARCHAR(10),'') AS NM_YNAM,
			 '' AS NM_FGTRANS,       
	  	     '' AS NO_IO,
			 '' AS CD_PARTNER,
			 '' AS GI_PARTNER, 
	  	     (CASE WHEN @P_YN_SL_SUM = 'Y' THEN '' ELSE A.CD_SL END) AS CD_SL,
	  	     (CASE WHEN @P_YN_PJT_SUM = 'N' THEN ISNULL(A.CD_PJT,'') ELSE '' END) AS CD_PJT,
	  	     '' AS NM_PROJECT,
	  	     MAX(A.UM_IN) AS UM_IN,
			 MAX(A.UM_OUT) AS UM_OUT,
			 SUM(A.AM) AS AM,
			 '' AS NO_BL,
			 0 AS QT_CLS,
			 '' AS DC_RMK_LINE, 
	  	     (CASE WHEN @P_YN_PJT_SUM = 'N' AND @V_YN_UNIT = 'Y' THEN ISNULL(A.SEQ_PROJECT,0) ELSE 0 END) AS SEQ_PROJECT
	  FROM (SELECT @P_CD_ITEM AS CD_ITEM,
				   0.0 AS QT_GOOD_INV,
				   0.0 AS QT_REJECT_INV,
				   0.0 AS QT_TRANS_INV,
				   0.0 AS QT_INSP_INV,
				   0.0 AS UM_INV,
	  			   '' AS NO_IO,
				   '' AS CD_PARTNER,
				   '' AS GI_PARTNER,
				   '' AS CD_SL,
				   0.0 AS UM_IN,
				   0.0 AS UM_OUT,
				   0.0 AS AM,
	  			   '' AS CD_PJT,
				   '' AS NM_PROJECT,
				   0 AS SEQ_PROJECT
	  		UNION ALL   
	  		SELECT QT.CD_ITEM,
				   QT.QT_GOOD_INV,
				   QT.QT_REJECT_INV,
				   QT.QT_TRANS_INV,
				   QT.QT_INSP_INV,
				   AM.UM_INV,
	  			   '' AS NO_IO,
				   '' AS CD_PARTNER,
				   '' AS GI_PARTNER,
				   QT.CD_SL AS CD_SL,
				   0.0 AS UM_IN,
				   0.0 AS UM_OUT,
				   0.0 AS AM,
	  			   QT.CD_PJT AS CD_PJT,
				   '' AS NM_PROJECT,
				   ISNULL(QT.SEQ_PROJECT,0) AS SEQ_PROJECT
	  		FROM MM_OPENQTL QT     
	  		LEFT JOIN MM_AMINVL AM ON AM.CD_COMPANY = QT.CD_COMPANY AND AM.CD_ITEM = QT.CD_ITEM AND AM.YM_STANDARD = QT.YM_STANDARD AND AM.CD_PLANT = QT.CD_PLANT
	  		WHERE QT.CD_ITEM = @P_CD_ITEM
	  		AND (CD_SL IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_MULTI_CD_SL)) OR @P_MULTI_CD_SL = '' OR @P_MULTI_CD_SL IS NULL)            
	  		AND QT.CD_PLANT = @P_CD_PLANT      
	  		AND QT.CD_COMPANY = @P_CD_COMPANY      
	  		AND QT.YM_STANDARD =SUBSTRING(@P_DT_FROM,1,4) + '00'            
	  		AND (ISNULL(@P_CD_PJT, '') = '' OR QT.CD_PJT = @P_CD_PJT)
	  		UNION ALL      
	  		SELECT CD_ITEM,
				   SUM(QT_GOOD_GR -QT_GOOD_GI) AS QT_GOOD_INV,
				   SUM(QT_REJECT_GR -QT_REJECT_GI) AS QT_REJECT_INV,
	  			   SUM(QT_TRANS_GR - QT_TRANS_GI) AS QT_TRANS_INV,
				   SUM(QT_INSP_GR -QT_INSP_GI) AS QT_INSP_INV,
				   0.0 AS UM_INV,
	  			   '' AS NO_IO,
				   '' AS CD_PARTNER,
				   '' AS GI_PARTNER,
				   CD_SL AS CD_SL,
				   0.0 AS UM_IN,
				   0.0 AS UM_OUT,
				   0.0 AS AM, 
	  			   CD_PJT AS CD_PJT,
				   '' AS NM_PROJECT,
				   ISNULL(SEQ_PROJECT,0) AS SEQ_PROJECT
	  		FROM MM_OHSLINVM M
	  		LEFT JOIN MM_EJTP E ON E.CD_QTIOTP = M.CD_QTIOTP AND E.CD_COMPANY = M.CD_COMPANY        
	  		WHERE CD_ITEM = @P_CD_ITEM
	  		AND (CD_SL IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_MULTI_CD_SL)) OR @P_MULTI_CD_SL = '' OR @P_MULTI_CD_SL IS NULL)            
	  		AND CD_PLANT = @P_CD_PLANT      
	  	    AND M.CD_COMPANY = @P_CD_COMPANY      
	  		AND YM_IO >=SUBSTRING(@P_DT_FROM,1,4) + '01'      
	  		AND YM_IO < SUBSTRING(@P_DT_FROM,1,6) 
	  		AND ((@P_SL_CHECK = 'Y' AND E.FG_IO <> '022') OR (@P_SL_CHECK = 'N')) 
	  		AND (CD_PJT = @P_CD_PJT OR @P_CD_PJT = '' OR @P_CD_PJT IS NULL)	
	  		GROUP BY CD_ITEM  , CD_PJT , CD_SL, SEQ_PROJECT  
	  		UNION ALL      
	  		SELECT L.CD_ITEM,       
	  			   SUM(CASE WHEN (H.YN_RETURN ='Y' AND L.FG_PS ='1') OR (H.YN_RETURN ='N' AND L.FG_PS ='2') THEN 0 - L.QT_GOOD_INV ELSE L.QT_GOOD_INV END) AS QT_GOOD_INV,      
	  			   SUM(CASE WHEN (H.YN_RETURN ='Y' AND L.FG_PS ='1') OR (H.YN_RETURN ='N' AND L.FG_PS ='2') THEN 0 - L.QT_REJECT_INV ELSE L.QT_REJECT_INV END) AS QT_REJECT_INV,      
	  			   SUM(CASE WHEN (H.YN_RETURN ='Y' AND L.FG_PS ='1') OR (H.YN_RETURN ='N' AND L.FG_PS ='2') THEN 0 - L.QT_TRANS_INV ELSE L.QT_TRANS_INV END) AS QT_TRANS_INV,      
	  			   SUM(CASE WHEN (H.YN_RETURN ='Y' AND L.FG_PS ='1') OR (H.YN_RETURN ='N' AND L.FG_PS ='2') THEN 0 - L.QT_INSP_INV ELSE L.QT_INSP_INV END) AS QT_INSP_INV,
				   0.0 UM_INV,
	  			   H.NO_IO,
				   L.CD_PARTNER,
				   L.GI_PARTNER,
				   L.CD_SL,  --2011.07.18 프로젝트 코드 이장원
	  			   MAX(CASE WHEN L.FG_PS = '1' THEN L.UM ELSE 0.0 END) AS UM_IN,
	  			   MAX(CASE WHEN L.FG_PS = '2' THEN L.UM ELSE 0.0 END) AS UM_OUT,
	  			   SUM(CASE WHEN L.FG_PS = '1' THEN L.AM ELSE 0.0 END) AS AM,
	  			   L.CD_PJT,
				   PH.NM_PROJECT, --프로젝트명 추가   
	  			   ISNULL(SEQ_PROJECT,0) AS SEQ_PROJECT
	  		FROM MM_QTIO L 
	  		JOIN MM_QTIOH H ON H.NO_IO = L.NO_IO AND H.CD_COMPANY = L.CD_COMPANY
	  		LEFT JOIN SA_PROJECTH PH ON L.CD_COMPANY = PH.CD_COMPANY AND L.CD_PJT = PH.NO_PROJECT --2011.07.18 프로젝트명 이장원
	  		WHERE L.CD_COMPANY = @P_CD_COMPANY
	  		AND (ISNULL(@P_MULTI_CD_SL, '') = '' OR CD_SL IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_MULTI_CD_SL)))            
	  		AND (ISNULL(@P_CD_PJT, '') = '' OR L.CD_PJT = @P_CD_PJT)
			AND L.CD_PLANT = @P_CD_PLANT      
	  		AND L.CD_ITEM = @P_CD_ITEM                           
	  		AND L.DT_IO >= SUBSTRING(@P_DT_FROM,1,6) + '01'                     
	  		AND L.DT_IO < @P_DT_FROM    
	  		AND ((@P_SL_CHECK = 'Y' AND L.FG_IO <> '022') OR (@P_SL_CHECK = 'N')) 
	  		GROUP BY L.CD_ITEM, H.NO_IO, L.CD_PARTNER, L.GI_PARTNER, L.CD_SL, L.CD_PJT, PH.NM_PROJECT, L.SEQ_PROJECT --2011.07.18 프로젝트명 추가 이장원   
	  ) A      
	  WHERE (A.QT_GOOD_INV <> 0 OR A.QT_REJECT_INV <> 0 OR A.QT_TRANS_INV <> 0 OR A.QT_INSP_INV <> 0)      
	  GROUP BY A.CD_ITEM, CASE WHEN @P_YN_SL_SUM = 'Y' THEN '' ELSE A.CD_SL END,
						  CASE WHEN @P_YN_PJT_SUM = 'N' THEN ISNULL(A.CD_PJT,'') ELSE '' END,
	  					  CASE WHEN @P_YN_PJT_SUM = 'N' AND @V_YN_UNIT = 'Y' THEN ISNULL(A.SEQ_PROJECT,0) ELSE 0 END 
	  UNION ALL     
	  SELECT QT.CD_ITEM,
			 QT.DT_IO,
			 QT.FG_TRANS,
			 QT.CD_QTIOTP,
			 QT.YN_AM,
			 QT.QT_OPEN,
			 0.0 AS UM_OPEN,
			 QT.FG_PS,
			 QT.YN_RETURN,       
	  		 QT.UM_STOCK,
			 QT_IN, 
			 QT_OUT, 
			 QT_GOOD_INV, 
			 QT_REJECT_INV, 
			 QT_TRANS_INV, 
			 QT_INSP_INV,
	  		 EJ.NM_QTIOTP, 
			 CONVERT(NVARCHAR(10),'') AS NM_YNAM,
			 (SELECT (CASE @P_LANGUAGE WHEN 'KR' THEN NM_SYSDEF
			  						   WHEN 'US' THEN NM_SYSDEF_E
			  						   WHEN 'JP' THEN NM_SYSDEF_JP
			  						   WHEN 'CH' THEN NM_SYSDEF_CH END)
			  FROM MA_CODEDTL
			  WHERE CD_COMPANY = @P_CD_COMPANY
			  AND CD_FIELD = 'PU_C000016'
			  AND CD_SYSDEF = QT.FG_TRANS) AS NM_FGTRANS,
			 NO_IO, 
			 CD_PARTNER, 
			 GI_PARTNER, 
	  		 QT.CD_SL,
	  		 QT.CD_PJT, 
			 QT.NM_PROJECT,
	  		 QT.UM_IN, 
			 QT.UM_OUT,
			 QT.AM,
			 QT.NO_BL,
			 QT.QT_CLS,
			 QT.DC_RMK_LINE,
			 ISNULL(QT.SEQ_PROJECT,0) AS SEQ_PROJECT
	  FROM (SELECT LD.CD_ITEM,
				   LD.DT_IO, 
				   LD.FG_TRANS, 
				   LD.CD_QTIOTP, 
				   LD.YN_AM, 
				   NULL AS QT_OPEN, 
				   LD.FG_PS, 
				   HD.YN_RETURN,
				   MAX(QD.UM_STOCK) AS UM_STOCK,   
	  			   SUM(CASE WHEN LD.FG_PS = '1' THEN CASE WHEN HD.YN_RETURN ='Y' THEN 0 - LD.QT_IO ELSE LD.QT_IO END ELSE 0 END) AS QT_IN,      
	  			   SUM(CASE WHEN LD.FG_PS = '2' THEN CASE WHEN HD.YN_RETURN ='Y' THEN 0 - LD.QT_IO ELSE LD.QT_IO END ELSE 0 END) AS QT_OUT,  
	  			   SUM(CASE WHEN (HD.YN_RETURN ='Y' AND LD.FG_PS ='1') OR (HD.YN_RETURN ='N' AND LD.FG_PS ='2') THEN 0 -  LD.QT_GOOD_INV ELSE LD.QT_GOOD_INV END) AS QT_GOOD_INV,    
	  			   SUM(CASE WHEN (HD.YN_RETURN ='Y' AND LD.FG_PS ='1') OR (HD.YN_RETURN ='N' AND LD.FG_PS ='2') THEN 0 -  LD.QT_REJECT_INV ELSE LD.QT_REJECT_INV END) AS QT_REJECT_INV,
	  			   SUM(CASE WHEN (HD.YN_RETURN ='Y' AND LD.FG_PS ='1') OR (HD.YN_RETURN ='N' AND LD.FG_PS ='2') THEN 0 -  LD.QT_TRANS_INV ELSE LD.QT_TRANS_INV END) AS QT_TRANS_INV,
	  			   SUM(CASE WHEN (HD.YN_RETURN ='Y' AND LD.FG_PS ='1') OR (HD.YN_RETURN ='N' AND LD.FG_PS ='2') THEN 0 -  LD.QT_INSP_INV ELSE LD.QT_INSP_INV END) AS QT_INSP_INV,  
	  			   HD.NO_IO, 
				   LD.CD_PARTNER, 
				   LD.GI_PARTNER,
	  			   CASE WHEN @P_YN_SL_SUM = 'Y' THEN '' ELSE LD.CD_SL END AS CD_SL,     --2011.07.18 프로젝트코드,명추가 이장원 
	  			   MAX(CASE WHEN LD.FG_PS = '1' THEN LD.UM ELSE 0.0 END) AS UM_IN,
	  			   MAX(CASE WHEN LD.FG_PS = '2' THEN LD.UM ELSE 0.0 END) AS UM_OUT,
	  			   SUM(CASE WHEN LD.FG_PS = '1' THEN LD.AM ELSE 0.0 END) AS AM,
	  			   TTI.NO_BL,
	  			   SUM(LD.QT_CLS) AS QT_CLS,
	  			   MAX(LD.DC_RMK) AS DC_RMK_LINE,		  
	  			   (CASE WHEN @P_YN_PJT_SUM = 'N' THEN ISNULL(LD.CD_PJT,'') ELSE '' END) AS CD_PJT,
	  			   (CASE WHEN @P_YN_PJT_SUM = 'N' THEN PH.NM_PROJECT ELSE '' END) AS NM_PROJECT,
	  			   (CASE WHEN @P_YN_PJT_SUM = 'N' AND @V_YN_UNIT = 'Y' THEN ISNULL(LD.SEQ_PROJECT,0) ELSE 0 END) AS SEQ_PROJECT
	  	  FROM MM_QTIO LD      
	  	  JOIN MM_QTIOH HD ON HD.CD_COMPANY = LD.CD_COMPANY AND HD.NO_IO = LD.NO_IO
		  LEFT JOIN CZ_MM_QTIO_DETAIL QD ON QD.CD_COMPANY = LD.CD_COMPANY AND QD.NO_IO = LD.NO_IO AND QD.NO_IOLINE = LD.NO_IOLINE    
	  	  LEFT JOIN SA_PROJECTH PH  ON LD.CD_COMPANY = PH.CD_COMPANY   AND LD.CD_PJT = PH.NO_PROJECT --2011.07.18 프로젝트명 추가 이장원
	  	  LEFT JOIN PU_RCVL A  ON A.CD_COMPANY = LD.CD_COMPANY AND A.NO_RCV = LD.NO_ISURCV AND A.NO_LINE = LD.NO_ISURCVLINE          
	  	  LEFT JOIN TR_TO_IML TTI ON A.NO_TO = TTI.NO_TO AND A.NO_TO_LINE = TTI.NO_LINE AND A.CD_COMPANY = TTI.CD_COMPANY        
	  	  WHERE LD.CD_ITEM = @P_CD_ITEM
	  	  AND (ISNULL(@P_MULTI_CD_SL, '') = '' OR LD.CD_SL IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_MULTI_CD_SL)))            
	  	  AND (ISNULL(@P_CD_PJT, '') = '' OR LD.CD_PJT = @P_CD_PJT)
		  AND LD.CD_PLANT =@P_CD_PLANT      
	  	  AND LD.CD_COMPANY =@P_CD_COMPANY      
	  	  AND LD.DT_IO BETWEEN @P_DT_FROM AND @P_DT_TO 
	  	  AND ((@P_SL_CHECK = 'Y' AND LD.FG_IO <> '022') OR (@P_SL_CHECK = 'N')) 
	  	  GROUP BY LD.CD_ITEM, LD.DT_IO, LD.FG_TRANS, LD.CD_QTIOTP, LD.YN_AM, LD.FG_PS, HD.YN_RETURN, HD.NO_IO, LD.CD_PARTNER, LD.GI_PARTNER, 
	  			  CASE WHEN @P_YN_SL_SUM = 'Y' THEN '' ELSE LD.CD_SL END, TTI.NO_BL,
	  			  CASE WHEN @P_YN_PJT_SUM = 'N' THEN ISNULL(LD.CD_PJT,'') ELSE '' END,
	  			  CASE WHEN @P_YN_PJT_SUM = 'N' THEN PH.NM_PROJECT ELSE '' END,
	  			  CASE WHEN @P_YN_PJT_SUM = 'N' AND @V_YN_UNIT = 'Y' THEN ISNULL(LD.SEQ_PROJECT,0) ELSE 0 END 
	   ) QT      
       LEFT JOIN MM_EJTP EJ ON EJ.CD_COMPANY = @P_CD_COMPANY AND EJ.CD_QTIOTP = QT.CD_QTIOTP 
) TR      
LEFT JOIN MA_PARTNER B ON B.CD_COMPANY = @P_CD_COMPANY AND B.CD_PARTNER = TR.CD_PARTNER            
LEFT JOIN MA_PARTNER C ON C.CD_COMPANY = @P_CD_COMPANY AND C.CD_PARTNER = TR.GI_PARTNER      
LEFT JOIN MA_PLANT P ON P.CD_COMPANY = @P_CD_COMPANY   AND P.CD_PLANT = @P_CD_PLANT      
LEFT JOIN MA_SL S ON S.CD_COMPANY = @P_CD_COMPANY AND S.CD_PLANT = @P_CD_PLANT AND S.CD_BIZAREA = P.CD_BIZAREA  AND S.CD_SL = TR.CD_SL 
LEFT JOIN MA_PITEM MP ON MP.CD_COMPANY = @P_CD_COMPANY AND MP.CD_PLANT = @P_CD_PLANT AND MP.CD_ITEM = TR.CD_ITEM       
LEFT JOIN MM_EJTP MJ ON MJ.CD_COMPANY = @P_CD_COMPANY AND MJ.CD_QTIOTP = TR.CD_QTIOTP
LEFT JOIN SA_PROJECTH PH  ON PH.CD_COMPANY = @P_CD_COMPANY   AND TR.CD_PJT = PH.NO_PROJECT --2011.07.18 프로젝트명 추가 이장원         
LEFT JOIN SA_PROJECTL PL ON PL.CD_COMPANY = @P_CD_COMPANY AND PL.NO_PROJECT = TR.CD_PJT AND PL.SEQ_PROJECT = TR.SEQ_PROJECT
LEFT JOIN MA_PITEM PTI ON PTI.CD_COMPANY = @P_CD_COMPANY AND PTI.CD_PLANT = PL.CD_PLANT AND PTI.CD_ITEM = PL.CD_ITEM
LEFT JOIN MA_BIZAREA BIZ ON BIZ.CD_BIZAREA = P.CD_BIZAREA AND BIZ.CD_COMPANY = P.CD_COMPANY
LEFT JOIN MA_COMPANY COM ON COM.CD_COMPANY = @P_CD_COMPANY
WHERE (MP.GRP_ITEM = @P_CD_ITEMGRP OR @P_CD_ITEMGRP = '' OR @P_CD_ITEMGRP IS NULL)
ORDER BY TR.CD_ITEM, TR.CD_SL,TR.DT_IO,TR.FG_PS ASC, TR.CD_QTIOTP,TR.FG_TRANS,TR.YN_AM,TR.NO_IO ,TR.YN_RETURN,  TR.CD_PARTNER, TR.GI_PARTNER

IF(@V_YN_PJT = 'Y')
	BEGIN
		IF(@V_YN_UNIT = 'Y')
			BEGIN
				SELECT * FROM #T_MAIN TR
						ORDER BY TR.CD_ITEM, TR.CD_SL ,TR.CD_PJT, TR.SEQ_PROJECT ,TR.DT_IO,TR.FG_PS ASC, TR.CD_QTIOTP,TR.FG_TRANS,TR.YN_AM,TR.NO_IO ,TR.YN_RETURN,  TR.CD_PARTNER, TR.GI_PARTNER
			END
		ELSE 
			BEGIN
				SELECT * FROM #T_MAIN TR 
						ORDER BY TR.CD_ITEM, TR.CD_SL ,TR.CD_PJT ,TR.NM_PROJECT ,TR.DT_IO,TR.FG_PS ASC, TR.CD_QTIOTP,TR.FG_TRANS,TR.YN_AM,TR.NO_IO ,TR.YN_RETURN,  TR.CD_PARTNER, TR.GI_PARTNER
			END
	END
ELSE 
	BEGIN
		SELECT * FROM #T_MAIN
	END
END
GO

