USE [NEOE]
GO
/****** Object:  Trigger [NEOE].[TD_CZ_MM_QTIO_DETAIL]    Script Date: 2016-07-08 오후 3:41:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER TRIGGER [NEOE].[TD_CZ_MM_QTIO_DETAIL] ON [NEOE].[MM_QTIO] FOR DELETE AS                  
BEGIN                  
DECLARE                             
	@NUMROWS		INT,                 
	@ERRMSG			NVARCHAR(255),
	@V_CD_COMPANY	NVARCHAR(7),                  
	@V_NO_IO		NVARCHAR(20),
	@V_NO_IOLINE	NUMERIC(5,0),        
	@V_CD_PLANT		NVARCHAR(7),            
	@V_CD_ITEM		NVARCHAR(20),
	@V_QT_CURR		NUMERIC(17, 4),
	@V_UM_STOCK		NUMERIC(15, 4),     
	@V_CD_QTIOTP	NVARCHAR(3)

SELECT @NUMROWS = @@ROWCOUNT                  
IF @NUMROWS = 0 RETURN                  

/********************************************************************************************/                  
DECLARE CUR_TD_CZ_MM_QTIO_DETAIL CURSOR FOR                  
SELECT D.CD_COMPANY, D.NO_IO, D.NO_IOLINE, D.CD_PLANT, D.CD_ITEM, D.CD_QTIOTP
FROM DELETED D
JOIN MA_PITEM MI ON MI.CD_COMPANY = D.CD_COMPANY AND MI.CD_PLANT = D.CD_PLANT AND MI.CD_ITEM = D.CD_ITEM AND MI.CLS_ITEM IN ('005', '009', '013')
OPEN CUR_TD_CZ_MM_QTIO_DETAIL                  
		
FETCH NEXT FROM CUR_TD_CZ_MM_QTIO_DETAIL                   
INTO @V_CD_COMPANY, @V_NO_IO, @V_NO_IOLINE, @V_CD_PLANT, @V_CD_ITEM, @V_CD_QTIOTP
		
WHILE (@@FETCH_STATUS <> -1)                  
BEGIN                  
	IF (@@FETCH_STATUS <> -2)                  
	BEGIN
		IF @V_CD_QTIOTP <> '400' AND @V_CD_QTIOTP <> '410'
		BEGIN
			SET @V_QT_CURR = NEOE.FN_CZ_GET_STOCK_QTY (@V_CD_COMPANY, CONVERT(CHAR(8), GETDATE(), 112), @V_CD_PLANT, @V_CD_ITEM)

			SELECT @V_UM_STOCK = ISNULL((SUM(CASE WHEN A.재고차감 >= 0 THEN A.QT_IO ELSE A.QT_IO + A.재고차감 END * A.UM_IO) / @V_QT_CURR), 0)
			FROM (SELECT A.DT_INPUT,
			 			 A.QT_IO,
			 			 A.UM_IO,
			 			 SUM(A.QT_IO) OVER (ORDER BY A.DT_INPUT DESC) AS 누적합계,
			 			 @V_QT_CURR - SUM(A.QT_IO) OVER (ORDER BY A.DT_INPUT DESC) AS 재고차감
				  FROM (SELECT OH.DT_INPUT + SUBSTRING(OH.DTS_INSERT, 9, 6) AS DT_INPUT, ISNULL(SUM(OL.QT_GOOD_INV), 0) AS QT_IO, ISNULL(MAX(AL.UM_BAS), 0) AS UM_IO 
						FROM MM_OPENQTL OL
					    LEFT JOIN MM_OPENQTH OH ON OH.CD_COMPANY = OL.CD_COMPANY AND OH.CD_PLANT = OL.CD_PLANT AND OH.CD_SL = OL.CD_SL AND OH.YM_STANDARD = OL.YM_STANDARD
					    LEFT JOIN MM_AMINVL AL ON AL.CD_COMPANY = OL.CD_COMPANY AND AL.CD_PLANT = OL.CD_PLANT AND AL.CD_ITEM = OL.CD_ITEM AND AL.YM_STANDARD = OL.YM_STANDARD
					    WHERE OL.CD_COMPANY = @V_CD_COMPANY
					    AND OL.CD_ITEM = @V_CD_ITEM
					    GROUP BY OH.DT_INPUT, OH.DTS_INSERT
					    UNION ALL
					    SELECT QH.DT_IO + SUBSTRING(QH.DTS_INSERT, 9, 6), ISNULL(QL.QT_IO, 0), ISNULL(QL.UM, 0) 
						FROM MM_QTIO QL
					    LEFT JOIN MM_QTIOH QH ON QH.CD_COMPANY = QL.CD_COMPANY AND QH.NO_IO = QL.NO_IO
					    WHERE QL.FG_PS = '1'
					    AND QL.CD_COMPANY = @V_CD_COMPANY
					    AND QL.CD_ITEM = @V_CD_ITEM
					    GROUP BY QH.DT_IO, QH.DTS_INSERT, QL.NO_IO, QL.NO_IOLINE, QL.QT_IO, QL.UM) A) A
			WHERE A.QT_IO + A.재고차감 > 0
			
			IF ISNULL(@V_UM_STOCK, 0) <> 0
				UPDATE MA_PITEM
				SET STAND_PRC = @V_UM_STOCK
				WHERE CD_COMPANY = @V_CD_COMPANY
				AND CD_ITEM = @V_CD_ITEM
		END
		
		DELETE FROM CZ_MM_QTIO_DETAIL
		WHERE CD_COMPANY = @V_CD_COMPANY
		AND NO_IO = @V_NO_IO
		AND NO_IOLINE = @V_NO_IOLINE

		IF (@@ERROR <> 0 )                  
		BEGIN                  
			CLOSE CUR_TD_CZ_MM_QTIO_DETAIL                  
			DEALLOCATE CUR_TD_CZ_MM_QTIO_DETAIL                  
			
			SELECT @ERRMSG = ' CAN NOT DELETE CZ_MM_QTIO_DETAIL '
			GOTO ERROR                  
		END
	END
FETCH NEXT FROM CUR_TD_CZ_MM_QTIO_DETAIL                   
INTO @V_CD_COMPANY, @V_NO_IO, @V_NO_IOLINE, @V_CD_PLANT, @V_CD_ITEM, @V_CD_QTIOTP
END                   
	 
CLOSE CUR_TD_CZ_MM_QTIO_DETAIL              
DEALLOCATE CUR_TD_CZ_MM_QTIO_DETAIL
 
RETURN                  
ERROR: RAISERROR (@ERRMSG, 18, 1)  
END








GO
EXEC sp_settriggerorder @triggername=N'[NEOE].[TD_CZ_MM_QTIO_DETAIL]', @order=N'Last', @stmttype=N'DELETE'