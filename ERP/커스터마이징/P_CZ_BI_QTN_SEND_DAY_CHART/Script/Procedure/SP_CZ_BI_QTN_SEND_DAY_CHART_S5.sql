USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_BI_QTN_SEND_DAY_CHART_S5]    Script Date: 2018-11-08 오전 10:24:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_BI_QTN_SEND_DAY_CHART_S5]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_DT_START			NVARCHAR(8),
	@P_DT_END			NVARCHAR(8),
	@P_TP_QTN			NVARCHAR(3)
)
AS
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH WH AS
(
	SELECT WH.CD_COMPANY, WH.NO_KEY,
		   CONVERT(DATETIME, LEFT(WH.DTS_INSERT, 8) + ' ' + SUBSTRING(WH.DTS_INSERT, 9, 2) + ':' + SUBSTRING(WH.DTS_INSERT, 11, 2) + ':' + SUBSTRING(WH.DTS_INSERT, 13, 2)) AS DTS_INSERT,
		   CONVERT(DATETIME, LEFT(WH1.DTS_DONE, 8) + ' ' + SUBSTRING(WH1.DTS_DONE, 9, 2) + ':' + SUBSTRING(WH1.DTS_DONE, 11, 2) + ':' + SUBSTRING(WH1.DTS_DONE, 13, 2)) AS DTS_DONE,
		   (SELECT COUNT(1) 
			FROM MA_CALENDAR
			WHERE CD_COMPANY = WH.CD_COMPANY
			AND FG1_HOLIDAY = 'H'
			AND DT_CAL BETWEEN LEFT(WH.DTS_INSERT, 8) AND LEFT(WH1.DTS_DONE, 8)) AS QT_HOLIDAY
	FROM CZ_MA_WORKFLOWH WH
	LEFT JOIN (SELECT WH.CD_COMPANY, WH.NO_KEY,
					  (CASE WHEN WL.DTS_INSERT IS NULL THEN NULL
						    WHEN WH1.DTS_INSERT IS NULL THEN WH.DTS_DONE
							ELSE WH1.DTS_DONE END) AS DTS_DONE 
			   FROM CZ_MA_WORKFLOWH WH
			   LEFT JOIN (SELECT CD_COMPANY, NO_KEY,
			   			  	     MIN(DTS_INSERT) AS DTS_INSERT
			   			  FROM CZ_MA_WORKFLOWL
			   			  WHERE TP_STEP = '05'
			   			  GROUP BY CD_COMPANY, NO_KEY) WL
			   ON WL.CD_COMPANY = WH.CD_COMPANY AND WL.NO_KEY = WH.NO_KEY
			   LEFT JOIN CZ_MA_WORKFLOWH WH1 ON WH1.CD_COMPANY = WH.CD_COMPANY AND WH1.NO_KEY = WH.NO_KEY AND WH1.TP_STEP = '06'
			   WHERE WH.TP_STEP = '05') WH1 
	ON WH1.CD_COMPANY = WH.CD_COMPANY AND WH1.NO_KEY = WH.NO_KEY
	WHERE WH.CD_COMPANY = @P_CD_COMPANY
	AND WH.TP_STEP = '01'
	AND WH.DTS_INSERT BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'
	AND (WH.NO_KEY LIKE 'FB________' OR 
		 WH.NO_KEY LIKE 'DB________' OR
		 WH.NO_KEY LIKE 'SB________' OR
		 WH.NO_KEY LIKE 'NB________' OR
		 WH.NO_KEY LIKE 'NS________' OR
		 WH.NO_KEY LIKE 'DS________' OR
		 WH.NO_KEY LIKE 'A-________' OR
		 WH.NO_KEY LIKE 'D-________' OR
		 WH.NO_KEY LIKE 'N-________')	
),
WH1 AS
(
	SELECT WH.CD_COMPANY,
		   WH.NO_KEY,
		   QH.NO_FILE,
		   QH.YN_CLOSE,
		   MP.LN_PARTNER,
		   QH.CD_SALEGRP,
		   WH.DTS_DONE,
		   (ISNULL(DATEDIFF(DAY, WH.DTS_INSERT, WH.DTS_DONE), 0) - WH.QT_HOLIDAY) AS DT_QTN
	FROM WH WH
	LEFT JOIN CZ_SA_QTNH QH ON QH.CD_COMPANY = WH.CD_COMPANY AND QH.NO_FILE = WH.NO_KEY
	LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = QH.CD_COMPANY AND MP.CD_PARTNER = QH.CD_PARTNER
	WHERE (@P_TP_QTN = '000' OR EXISTS (SELECT 1 
										FROM MA_EMP ME
										WHERE ME.CD_COMPANY = QH.CD_COMPANY
										AND ME.NO_EMP = (CASE WHEN @P_TP_QTN = '001' THEN QH.NO_EMP_STK ELSE QH.NO_EMP_QTN END)
										AND ME.CD_DEPT = '010900'))
),
WH2 AS
(
	SELECT WH.CD_COMPANY,
		   WH.NO_KEY,
		   WH.LN_PARTNER,
		   (CASE WHEN WH.DT_QTN < 0 THEN 0.0 ELSE WH.DT_QTN END) AS DT_QTN,
		   QL.QT_ITEM,
		   QL.AM_QTN,
		   SH.NO_SO,
		   (CASE WHEN WH.DTS_DONE IS NULL AND SH.NO_SO IS NULL THEN 'N'
				 WHEN (QL.AM_QTN IS NULL OR QL.AM_QTN = 0) AND SH.NO_SO IS NULL THEN 'N'
				 WHEN WH.YN_CLOSE = 'Y' AND SH.NO_SO IS NULL THEN 'N'
				 ELSE 'Y' END) AS YN_DONE
	FROM WH1 WH
	LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = WH.CD_COMPANY AND SG.CD_SALEGRP = WH.CD_SALEGRP
	LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_FILE,
			   	      SUM(1.0) AS QT_ITEM,
					  SUM(AM_KR_S) AS AM_QTN 
			   FROM CZ_SA_QTNL QL
			   GROUP BY QL.CD_COMPANY, QL.NO_FILE) QL
	ON QL.CD_COMPANY = WH.CD_COMPANY AND QL.NO_FILE = WH.NO_KEY
	LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = WH.CD_COMPANY AND SH.NO_SO = WH.NO_KEY
	WHERE SG.CD_SALEORG IN ('010301', '020200')
),
WH3 AS
(
	SELECT WH.LN_PARTNER,
	       SUM(1.0) AS QT_INQ,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' THEN 1.0 ELSE NULL END) AS QT_DONE,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' AND WH.DT_QTN <= 10 THEN 1.0 ELSE NULL END) AS QT_DONE1,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' THEN WH.QT_ITEM ELSE NULL END) AS QT_ITEM,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' THEN WH.AM_QTN ELSE NULL END) AS AM_QTN,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' AND WH.DT_QTN <= 10 THEN WH.DT_QTN ELSE NULL END) AS DT_QTN,
	       SUM(CASE WHEN WH.YN_DONE = 'Y' AND WH.DT_QTN <= 2 THEN 1.0 ELSE NULL END) AS QT_2DAY,
	       SUM(CASE WHEN WH.NO_SO IS NULL THEN NULL ELSE 1.0 END) AS QT_SO
    FROM WH2 WH
    GROUP BY WH.LN_PARTNER
)
SELECT WH.LN_PARTNER,
       WH.QT_INQ,
	   WH.QT_DONE,
	   WH.QT_DONE1 AS QT_DONE1,
	   WH.QT_ITEM,
	   WH.AM_QTN,
	   WH.DT_QTN AS DT_QTN,
	   WH.QT_2DAY,
	   WH.QT_SO
FROM WH3 WH
ORDER BY WH.LN_PARTNER

GO

