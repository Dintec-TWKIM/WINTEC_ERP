USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_LOG_CHARGE_RPTH_S]    Script Date: 2016-02-12 오후 1:40:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [NEOE].[SP_CZ_SA_LOG_CHARGE_RPTH_S]  
(
    @P_CD_COMPANY		NVARCHAR(7),
	@P_TP_DATE			NVARCHAR(4),
	@P_DT_FROM			NVARCHAR(8),
	@P_DT_TO			NVARCHAR(8),
	@P_NO_SO			NVARCHAR(20),
	@P_NO_GIR			NVARCHAR(20),
	@P_TP_BILL			NVARCHAR(3),
	@P_TP_PACKING		NVARCHAR(4),
	@P_YN_PACK_CHARGE	NVARCHAR(1),
	@P_YN_OVER			NVARCHAR(1)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH A AS
(
	SELECT PH.CD_COMPANY,
	       PH.NO_GIR,
		   PH.NO_PACK,
		   PH.DT_PACK,
		   PH.CD_TYPE,
		   PH.QT_CBM
	FROM (SELECT PH.CD_COMPANY,
		  	     PH.NO_GIR,
		  		 PH.NO_PACK,
				 PH.DT_PACK,
				 PH.CD_TYPE,
		  		 (CASE WHEN PH.CD_TYPE = '003' AND PH.YN_OUTSOURCING = 'Y' THEN CONVERT(NUMERIC(17, 2), ((PH.QT_WIDTH * 0.001) * (PH.QT_HEIGHT * 0.001) * (PH.QT_LENGTH * 0.001))) 
																		   ELSE 0 END) AS QT_CBM
		  FROM CZ_SA_PACKH PH
		  WHERE PH.NO_GIR = PH.NO_GIR_ORG
		  AND PH.NO_PACK = PH.NO_PACK_ORG) PH
	UNION ALL
	SELECT PH.CD_COMPANY,
	       PH.NO_GIR,
		   PH.NO_PACK,
		   PH.DT_PACK,
		   PH.CD_TYPE,
		   PH.QT_CBM
	FROM (SELECT PH.CD_COMPANY,
			     PH.NO_GIR,
				 PH.NO_PACK,
				 PH1.DT_PACK,
				 PH1.CD_TYPE,
				 (CASE WHEN PH1.CD_TYPE = '003' AND PH1.YN_OUTSOURCING = 'Y' THEN CONVERT(NUMERIC(17, 2), ((PH1.QT_WIDTH * 0.001) * (PH1.QT_HEIGHT * 0.001) * (PH1.QT_LENGTH * 0.001))) 
																		     ELSE 0 END) AS QT_CBM
		  FROM CZ_SA_PACKH PH
		  JOIN CZ_SA_PACKH PH1 ON PH1.CD_COMPANY = PH.CD_COMPANY AND PH1.NO_GIR = PH.NO_GIR_ORG AND PH1.NO_PACK = PH.NO_PACK_ORG
		  WHERE (PH.NO_GIR <> PH.NO_GIR_ORG OR PH.NO_PACK <> PH.NO_PACK_ORG)) PH
),
B AS
(
	SELECT A.CD_COMPANY,
		   A.NO_GIR,
		   A.NO_PACK,
		   A.DT_PACK,
		   A.CD_TYPE,
		   (CASE WHEN A.QT_CBM >= 1 THEN A.QT_CBM * (SELECT TL.UM 
	    				 	   				         FROM CZ_MA_TARIFF_CBM_H TH
	  						   				         JOIN CZ_MA_TARIFF_CBM_L TL ON TL.CD_COMPANY = TH.CD_COMPANY AND TL.CD_PARTNER = TH.CD_PARTNER
	    				 	   				         WHERE TH.CD_COMPANY = A.CD_COMPANY
	  						   				         AND ISNULL(TH.YN_USE, 'N') = 'Y'
	    				 	   				         AND TL.SIZE = 1
	  						   				         AND CONVERT(NVARCHAR(8), GETDATE(), 112) BETWEEN TL.DT_START AND TL.DT_END) 
	    				 	        ELSE (SELECT TL.UM 
	    				 	   	          FROM CZ_MA_TARIFF_CBM_H TH
	  						   	          JOIN CZ_MA_TARIFF_CBM_L TL ON TL.CD_COMPANY = TH.CD_COMPANY AND TL.CD_PARTNER = TH.CD_PARTNER
	    				 	   	          WHERE TH.CD_COMPANY = A.CD_COMPANY
	  						   	          AND ISNULL(TH.YN_USE, 'N') = 'Y'
	    				 	   	          AND TL.SIZE = A.QT_CBM
	  						   	          AND CONVERT(NVARCHAR(8), GETDATE(), 112) BETWEEN TL.DT_START AND TL.DT_END) END) AS AM_CBM
	FROM A
)
SELECT GH.CD_COMPANY,
	   GH.NO_GIR,
	   OL.NO_IO,
	   OL.DT_IO,
	   MP.LN_PARTNER AS NM_PARTNER,
	   MP1.LN_PARTNER AS NM_DELIVERY_TO,
	   ME1.NM_KOR AS NM_EMP,
	   ME.NM_KOR AS NM_LOG_EMP,
	   PH.DT_PACK,
	   GL.NM_PACKING,
	   MC.NM_SYSDEF AS NM_TYPE,
	   MC2.NM_SYSDEF AS NM_EXCH,
	   EX.RATE_BASE AS RT_EXCH,
	   GL.AM_PROFIT,
	   PH.AM_CBM,
	   (CASE WHEN EX.RATE_BASE IS NULL THEN PH.AM_CBM ELSE ROUND(PH.AM_CBM / EX.RATE_BASE, 2) END) AS AM_EX_CBM,
	   FL.AM_IV AS AM_FORWARD,
	   (CASE WHEN EX.RATE_BASE IS NULL THEN FL.AM_IV ELSE ROUND(FL.AM_IV / EX.RATE_BASE, 2) END) AS AM_EX_FORWARD,
	   OL.AM_CHARGE1,
	   OL.AM_CHARGE2,
	   OL.AM_AUTO_CHARGE1,
	   OL.AM_AUTO_CHARGE2,
	   WD.DT_LOADING,
	   MC1.NM_SYSDEF AS NM_PARTNER_GRP,
	   GL.DT_WARNING,
	   (CASE WHEN GL.QT_NOT_BILL > 0 THEN 'N' ELSE 'Y' END) AS YN_BILL,
	   STUFF((SELECT DISTINCT ',' + GL.NO_SO
			  FROM SA_GIRL GL
			  WHERE GL.CD_COMPANY = GH.CD_COMPANY
			  AND GL.NO_GIR = GH.NO_GIR
			  FOR XML PATH('')),1,1,'') AS NO_SO,
	   WD.DC_RESULT,
	   GH.DC_RMK1
FROM SA_GIRH GH
LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GH.CD_COMPANY AND WD.NO_GIR = GH.NO_GIR
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = GH.CD_COMPANY AND ME.NO_EMP = GH.NO_EMP
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = GH.CD_COMPANY AND MP.CD_PARTNER = GH.CD_PARTNER
LEFT JOIN CZ_MA_DELIVERY MP1 ON MP1.CD_COMPANY = WD.CD_COMPANY AND MP1.CD_PARTNER = WD.CD_DELIVERY_TO
JOIN (SELECT GL.CD_COMPANY, GL.NO_GIR,
		     MAX(MC.NM_SYSDEF) AS NM_PACKING,
			 MAX(SH.NO_EMP) AS NO_EMP,
			 MAX(SH.CD_PARTNER_GRP) AS CD_PARTNER_GRP,
			 MAX(SH.DT_USERDEF1) AS DT_WARNING,
			 MAX(GL.CD_EXCH) AS CD_EXCH,
			 SUM(CASE WHEN MC.CD_FLAG1 = 'N' THEN 1 ELSE 0 END) AS QT_NOT_BILL, 
		     SUM(ISNULL(SL.AM_SO, 0) - (ISNULL(SL.AM_PO, 0) + ISNULL(SL.AM_STOCK, 0))) AS AM_PROFIT
	  FROM SA_GIRL GL
	  JOIN (SELECT SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO,
	   			   SL.AM_WONAMT AS AM_SO,
	   			   PL.AM_PO,
	   			   (SB.UM_KR * SB.QT_STOCK) AS AM_STOCK
	        FROM SA_SOL SL
	   		LEFT JOIN CZ_SA_STOCK_BOOK SB ON SB.CD_COMPANY = SL.CD_COMPANY AND SB.NO_FILE = SL.NO_SO AND SB.NO_LINE = SL.SEQ_SO
	   		LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE,
	   		 			      SUM(PL.AM) AS AM_PO
	   		 	       FROM PU_POL PL
	   		 	       WHERE PL.CD_ITEM NOT LIKE 'SD%'
	   		 	       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE) PL
	   	    ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
	   	    WHERE SL.CD_ITEM NOT LIKE 'SD%') SL
	  ON SL.CD_COMPANY = GL.CD_COMPANY AND SL.NO_SO = GL.NO_SO AND SL.SEQ_SO = GL.SEQ_SO
	  JOIN (SELECT * 
			FROM SA_SOH SH
			WHERE SH.CD_COMPANY = @P_CD_COMPANY
			AND (@P_TP_DATE <> '002' OR SH.DT_SO BETWEEN @P_DT_FROM AND @P_DT_TO)
			AND (ISNULL(@P_NO_SO, '') = '' OR SH.NO_SO = @P_NO_SO)
			AND (ISNULL(@P_TP_PACKING, '') = '' OR SH.TP_PACKING = @P_TP_PACKING)) SH 
	  ON SH.CD_COMPANY = GL.CD_COMPANY AND SH.NO_SO = GL.NO_SO
	  LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = SH.CD_COMPANY AND MC.CD_FIELD = 'TR_IM00011' AND MC.CD_SYSDEF = SH.TP_PACKING
	  GROUP BY GL.CD_COMPANY, GL.NO_GIR) GL
ON GL.CD_COMPANY = GH.CD_COMPANY AND GL.NO_GIR = GH.NO_GIR
LEFT JOIN (SELECT OL.CD_COMPANY,
	     	      OL.NO_ISURCV AS NO_GIR,
				  MAX(OL.NO_IO) AS NO_IO,
				  MAX(OH.DT_IO) AS DT_IO,
				  SUM(CASE WHEN IL.CD_ITEM = 'SD0003' THEN IL.AM_CLS ELSE 0 END) AS AM_CHARGE1,
				  SUM(CASE WHEN IL.CD_ITEM = 'SD0001' THEN IL.AM_CLS ELSE 0 END) AS AM_CHARGE2,
	     	      SUM(CASE WHEN IL.CD_USERDEF1 = 'Y' AND IL.CD_ITEM = 'SD0003' THEN IL.AM_CLS ELSE 0 END) AS AM_AUTO_CHARGE1,
				  SUM(CASE WHEN IL.CD_USERDEF1 = 'Y' AND IL.CD_ITEM = 'SD0001' THEN IL.AM_CLS ELSE 0 END) AS AM_AUTO_CHARGE2
	       FROM MM_QTIOH OH
		   JOIN MM_QTIO OL ON OL.CD_COMPANY = OH.CD_COMPANY AND OL.NO_IO = OH.NO_IO
	       LEFT JOIN SA_IVL IL ON IL.CD_COMPANY = OL.CD_COMPANY AND IL.NO_IO = OL.NO_IO AND IL.NO_IOLINE = OL.NO_IOLINE
		   GROUP BY OL.CD_COMPANY, OL.NO_ISURCV) OL 
ON OL.CD_COMPANY = GL.CD_COMPANY AND OL.NO_GIR = GL.NO_GIR
LEFT JOIN (SELECT B.CD_COMPANY, B.NO_GIR,
	         MAX(B.DT_PACK) AS DT_PACK,
			 MAX(B.CD_TYPE) AS CD_TYPE,
	         SUM(B.AM_CBM) AS AM_CBM
	  FROM B
	  GROUP BY B.CD_COMPANY, B.NO_GIR) PH 
ON PH.CD_COMPANY = GH.CD_COMPANY AND PH.NO_GIR = GH.NO_GIR
LEFT JOIN (SELECT CD_COMPANY, 
				  NO_IO,
				  SUM(ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) AS AM_IV
		   FROM CZ_SA_FORWARD_CHARGE_L
	       WHERE (ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) > 0
		   GROUP BY CD_COMPANY, NO_IO) FL 
ON FL.CD_COMPANY = OL.CD_COMPANY AND FL.NO_IO = OL.NO_IO
LEFT JOIN MA_EMP ME1 ON ME1.CD_COMPANY = GL.CD_COMPANY AND ME1.NO_EMP = GL.NO_EMP
LEFT JOIN MA_EXCHANGE EX ON EX.CD_COMPANY = GH.CD_COMPANY AND EX.NO_SEQ = '1' AND EX.YYMMDD = CONVERT(NVARCHAR(8), GETDATE(), 112) AND EX.CURR_SOUR = GL.CD_EXCH AND EX.CURR_DEST = '000'
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = PH.CD_COMPANY AND MC.CD_FIELD = 'CZ_SA00026' AND MC.CD_SYSDEF = PH.CD_TYPE
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = MP.CD_COMPANY AND MC1.CD_FIELD = 'MA_B000065' AND MC1.CD_SYSDEF = MP.CD_PARTNER_GRP
LEFT JOIN MA_CODEDTL MC2 ON MC2.CD_COMPANY = GL.CD_COMPANY AND MC2.CD_FIELD = 'MA_B000005' AND MC2.CD_SYSDEF = GL.CD_EXCH
WHERE GH.CD_COMPANY = @P_CD_COMPANY
AND (PH.AM_CBM > 0 OR FL.AM_IV > 0)
AND (ISNULL(@P_NO_GIR, '') = '' OR GH.NO_GIR = @P_NO_GIR)
AND (ISNULL(@P_YN_PACK_CHARGE, 'N') = 'N' OR ISNULL(PH.AM_CBM, 0) > 0)
AND (ISNULL(@P_YN_OVER, 'N') = 'N' OR ISNULL(PH.AM_CBM, 0) > ISNULL(GL.AM_PROFIT, 0))
AND (@P_TP_BILL = '' OR
	 (@P_TP_BILL = '001' AND GL.QT_NOT_BILL = 0) OR 
	 (@P_TP_BILL = '002' AND GL.QT_NOT_BILL > 0))
AND (@P_TP_DATE <> '001' OR PH.DT_PACK BETWEEN @P_DT_FROM AND @P_DT_TO)
AND (@P_TP_DATE <> '003' OR WD.DT_LOADING BETWEEN @P_DT_FROM AND @P_DT_TO)
AND (@P_TP_DATE <> '004' OR OL.DT_IO BETWEEN @P_DT_FROM AND @P_DT_TO)


GO