USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_CRM_CHART_P10_S]    Script Date: 2017-07-13 오후 3:13:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_SA_CRM_CHART_P10_S]
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_DT_FROM			NVARCHAR(8),
	@P_DT_TO			NVARCHAR(8),
	@P_CD_PARTNER		NVARCHAR(1000),
	@P_NO_IMO			NVARCHAR(10),
	@P_NO_EMP			NVARCHAR(10),
	@P_CD_ITEMGRP		NVARCHAR(20),
	@P_CD_SALEORG		NVARCHAR(7),
	@P_CD_SALEGRP		NVARCHAR(1000),
	@P_LENGTH			NUMERIC(1)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT IH.DT_IV,
	   SUM(IH1.AM_CLS) AS AM_CLS,
	   SUM(RH.AM_RCP) AS AM_RCP,
	   SUM(RH.AM_RCP_A) AS AM_RCP_A,
	   SUM(ISNULL(IH1.AM_CLS, 0) - (ISNULL(RH.AM_RCP, 0) + ISNULL(RH.AM_RCP_A, 0))) AS AM_REMAIN,
	   (CASE WHEN SUM(IH1.AM_CLS) = 0 THEN 0
									  ELSE ROUND(SUM(ISNULL(IH1.AM_CLS, 0) - (ISNULL(RH.AM_RCP, 0) + ISNULL(RH.AM_RCP_A, 0))) / SUM(IH1.AM_CLS) * 100, 2) END) AS RT_REMAIN
FROM (SELECT IH.CD_COMPANY,
			 LEFT(IH.DT_PROCESS, @P_LENGTH) AS DT_IV
	  FROM SA_IVH IH
	  JOIN SA_IVL IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IV = IH.NO_IV
	  WHERE IH.CD_COMPANY = @P_CD_COMPANY
	  AND IH.DT_PROCESS BETWEEN @P_DT_FROM AND @P_DT_TO
	  AND (ISNULL(@P_CD_PARTNER, '') = '' OR IH.CD_PARTNER IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PARTNER)))
	  GROUP BY IH.CD_COMPANY, LEFT(IH.DT_PROCESS, @P_LENGTH)) IH
LEFT JOIN (SELECT IH.CD_COMPANY, 
				  LEFT(IH.DT_PROCESS, @P_LENGTH) AS DT_IV,
				  IH.NO_IV,  
				  SUM(CASE WHEN IL.YN_RETURN = 'Y' THEN -(IL.AM_CLS + IL.VAT) 
												   ELSE (IL.AM_CLS + IL.VAT) END) AS AM_CLS
		   FROM SA_IVH IH
		   JOIN SA_IVL IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IV = IH.NO_IV
		   WHERE IH.CD_COMPANY = @P_CD_COMPANY
		   AND (ISNULL(@P_CD_PARTNER, '') = '' OR IH.CD_PARTNER IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_PARTNER)))
		   GROUP BY IH.CD_COMPANY, LEFT(IH.DT_PROCESS, @P_LENGTH), IH.NO_IV) IH1
ON IH1.CD_COMPANY = IH.CD_COMPANY AND IH1.DT_IV <= IH.DT_IV
LEFT JOIN (SELECT RH.CD_COMPANY,
				  RD.NO_IV,
				  MAX(RH.DT_RCP) AS DT_RCP,
				  SUM(CASE WHEN YN_RCP_A = 'N' THEN RD.AM_RCP ELSE 0 END) AS AM_RCP,
				  SUM(CASE WHEN YN_RCP_A = 'Y' THEN RD.AM_RCP ELSE 0 END) AS AM_RCP_A
		   FROM SA_RCPH RH
		   LEFT JOIN (SELECT RD.CD_COMPANY, RD.NO_RCP, RD.NO_TX AS NO_IV,
							 'N' AS YN_RCP_A,
  							 (ISNULL(RD.AM_RCP_TX, 0) + ISNULL(RD.AM_PL, 0)) AS AM_RCP
					  FROM SA_RCPD RD 
					  UNION ALL
					  SELECT BD.CD_COMPANY, BD.NO_RCP, BD.NO_IV,
							 'Y' AS YN_RCP_A,
  							 (ISNULL(BD.AM_RCPS, 0) + ISNULL(BD.AM_PL, 0)) AS AM_RCP
					  FROM SA_BILLSD BD) RD
		   ON RD.CD_COMPANY = RH.CD_COMPANY AND RD.NO_RCP = RH.NO_RCP
		   WHERE RD.NO_IV IS NOT NULL
		   GROUP BY RH.CD_COMPANY, RD.NO_IV) RH
ON RH.CD_COMPANY = IH1.CD_COMPANY AND RH.NO_IV = IH1.NO_IV AND LEFT(RH.DT_RCP, @P_LENGTH) <= IH.DT_IV
GROUP BY IH.DT_IV
ORDER BY IH.DT_IV

GO