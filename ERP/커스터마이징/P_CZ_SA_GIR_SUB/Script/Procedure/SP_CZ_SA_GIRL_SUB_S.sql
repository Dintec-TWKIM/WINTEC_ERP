USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_GIRL_SUB_S]    Script Date: 2015-06-01 오후 5:55:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_SA_GIRL_SUB_S]
(
    @P_CD_COMPANY		NVARCHAR(7),
	@P_NO_SO			NVARCHAR(20),    
    @P_DT_SO_FROM		NCHAR(8),  
    @P_DT_SO_TO			NCHAR(8),  
	@P_CD_PLANT			NVARCHAR(7),  
    @P_TP_BUSI			NVARCHAR(3),  
    @P_DT_GUBUN			NVARCHAR(4), --'SO' 수주일자 조회, 'IN' 입고일자 조회, 'DU' 납기일자 조회
	@P_CD_SUPPLIER      NVARCHAR(20),
	@P_IN_STATE			NVARCHAR(3), -- 001 -> 입고, 002 -> 미입고, 003 -> 전체
	@P_OUT_STATE		NVARCHAR(3), -- 001 -> 출고, 002 -> 미출고, 003 -> 전체
	@P_YN_PACK			NVARCHAR(1),
	@P_TP_REQ_QTY		NVARCHAR(3)  -- 001 -> 전체수량, 002 -> 입고수량 
)  
AS  

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT 'N' AS S,
	   SL.CD_COMPANY,
	   SL.NO_SO,
	   SL.SEQ_SO,
	   QL.NO_DSP,
	   QL.NM_SUBJECT,
	   QL.CD_ITEM_PARTNER,
	   QL.NM_ITEM_PARTNER,
	   SL.CD_ITEM,
	   MI.NM_ITEM,
	   (CASE WHEN SL.CD_USERDEF1 = '재고픽업' THEN SL.QT_SO ELSE PL.QT_PO END) AS QT_SO,
	   (CASE WHEN SL.CD_USERDEF1 = '재고픽업' THEN SL.QT_SO ELSE PL.QT_IN END) AS QT_IN,
	   PL.QT_GIR,
	   PL.QT_TAX,
	   PL.CUSTOMS,
	   PL.QT_BL,
	   (CASE WHEN SL.CD_USERDEF1 = '재고픽업' THEN SL.QT_SO ELSE PL.QT_REQ END) AS QT_REQ,
	   (CASE WHEN PL.DT_IN = 'STOCK' THEN (CASE WHEN PL.QT_PO <= PK.QT_GIR_STOCK_DONE THEN 'Y' ELSE 'N' END)
									 ELSE (CASE WHEN PL.QT_PO <= PK.QT_GIR_DONE THEN 'Y' ELSE 'N' END) END) AS YN_PACK,
	   ISNULL(PK.QT_GIR, 0) AS QT_PACK_REMAIN,
	   ISNULL(GL.QT_GIR, 0) AS QT_GIR_REMAIN,
	   PL.QT_REMAIN,
	   SL.DT_DUEDATE,
	   PL.DT_IN,
	   SL.DT_REQGI,
	   ISNULL(SL.UM_EX_S, 0) AS UM,
	   ROUND(ISNULL(SL.UM_EX_S, 0) * ISNULL(PL.QT_REQ, 0), 2) AS AM_GIR,
	   ROUND(ROUND(ISNULL(SL.UM_EX_S, 0) * ISNULL(PL.QT_REQ, 0), 2) * ISNULL(SH.RT_EXCH, 1), (CASE WHEN SH.CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) AS AM_GIRAMT,
	   ROUND(ROUND(ROUND(ISNULL(SL.UM_EX_S, 0) * ISNULL(PL.QT_REQ, 0), 2) * ISNULL(SH.RT_EXCH, 1), (CASE WHEN SH.CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) * (ISNULL(SL.RT_VAT, 0) / 100), (CASE WHEN SH.CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) AS AM_VAT,
	   ROUND(ROUND(ROUND(ISNULL(SL.UM_EX_S, 0) * ISNULL(PL.QT_REQ, 0), 2) * ISNULL(SH.RT_EXCH, 1), (CASE WHEN SH.CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) * (1 + (ISNULL(SL.RT_VAT, 0) / 100)), (CASE WHEN SH.CD_COMPANY = 'S100' THEN 2 ELSE 0 END)) AS AMT,
	   (CASE WHEN PL.DT_IN = 'STOCK'		THEN MI.CD_ZONE
			 WHEN PL.DT_IN = 'CHARGE'		THEN '비용'
			 WHEN ISNULL(PL.DT_IN, '') = '' THEN '미입고' 
											ELSE STUFF((SELECT DISTINCT ',' + LC.CD_LOCATION
														FROM PU_POL PL
														JOIN MM_QTIO OL ON OL.CD_COMPANY = PL.CD_COMPANY AND OL.NO_PSO_MGMT = PL.NO_PO AND OL.NO_PSOLINE_MGMT = PL.NO_LINE 
														JOIN MM_QTIO_LOCATION LC ON LC.CD_COMPANY = OL.CD_COMPANY AND LC.NO_IO = OL.NO_IO AND LC.NO_IOLINE = OL.NO_IOLINE
														WHERE PL.CD_COMPANY = SL.CD_COMPANY
														AND PL.NO_SO = SL.NO_SO
														AND PL.NO_SOLINE = SL.SEQ_SO
														FOR XML PATH('')),1,1,'') END) AS NO_LOCATION,
	   (PL.QT_REMAIN * (CASE WHEN ISNULL(MI.UNIT_SO_FACT, 0) = 0 THEN 1 ELSE MI.UNIT_SO_FACT END)) AS QT_REQ_IM,
	   SL.GI_PARTNER,
	   MP.LN_PARTNER AS NM_GI_PARTNER,
	   PL.CD_SUPPLIER,
	   PL.NM_SUPPLIER,
	   SL.NO_PO_PARTNER,
	   SL.NO_POLINE_PARTNER,
	   SH.CD_PARTNER,
	   SL.TP_BUSI,
	   SL.TP_GI,
	   EJ.NM_QTIOTP AS NM_GI,
	   SL.TP_IV,
	   SL.CD_PLANT,
	   SL.TP_ITEM,
	   MI.STND_ITEM,
	   ISNULL(MI.FG_SQC, 'N') AS YN_INSPECT,
	   (CASE WHEN @P_YN_PACK = 'Y' THEN NULL ELSE PL.CD_SL END) AS CD_SL,
	   (CASE WHEN @P_YN_PACK = 'Y' THEN NULL ELSE MS.NM_SL END) AS NM_SL,
	   (CASE WHEN PL.DT_IN = 'CHARGE' THEN 0
			 WHEN PL.DT_IN = 'STOCK'  THEN ISNULL(MY.QT_SL02, 0)
									  ELSE ISNULL(MY.QT_SL01, 0) END) AS QT_INV,
	   (ISNULL(EQ.QT_GIREQ, 0) - ISNULL(EQ1.QT_GIREQ, 0)) AS QT_STOCK_REMAIN,
	   SL.QT_GI,
	   SH.CD_EXCH,
	   MC.NM_SYSDEF AS NM_EXCH,
	   SH.RT_EXCH,
	   SL.UNIT_IM AS UNIT,
	   SL.NO_PROJECT,
	   SP.NM_PROJECT,
	   SL.SEQ_PROJECT,
	   SL.RT_VAT,
	   SH.CD_SALEGRP,
	   SG.NM_SALEGRP,
	   SL.TP_VAT,
	   SH.NO_EMP,
	   SH.FG_TAXP,
	   SL.DC1 AS DC_RMK,
	   SL.DC1 AS DC_RMK3,
	   SL.DC2 AS DC_RMK4,
	   TS.GIR,
	   EJ.YN_SALE AS IV,
	   SL.CD_WH,
	   SL.YN_PICKING,
	   SH.FG_VAT AS TP_UM_TAX,
	   SL.UMVAT_SO AS UMVAT_GIR,
	   MI.RT_PLUS,
	   SH.YN_CONFIRM,
	   (CASE WHEN ISNULL(MI.UNIT_SO_FACT, 0) = 0 THEN 1 ELSE MI.UNIT_SO_FACT END) AS UNIT_SO_FACT,
	   ISNULL(SL.YN_PARTIAL_DELV, 'N') AS YN_PARTIAL_DELV,
	   MI.GRP_ITEM
FROM SA_SOH SH
JOIN SA_SOL SL ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
JOIN (SELECT SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO,
			 'CHARGE' AS DT_IN,
			 SL.QT_SO AS QT_PO,
			 0.0000 AS QT_IN,
			 0.0000 AS QT_TAX,
			 0.0000 AS QT_BL,
			 0.0000 AS CUSTOMS,
			 ISNULL(GL.QT_GIR, 0) AS QT_GIR,
			 (SL.QT_SO - ISNULL(GL.QT_GIR, 0)) AS QT_REQ,
			 (SL.QT_SO - ISNULL(GL.QT_GIR, 0)) AS QT_REMAIN,
			 0.0000 AS QT_IN_REMAIN,
			 'CHARGE' AS CD_SUPPLIER,
			 'CHARGE' AS NM_SUPPLIER,
			 'VL01' AS CD_SL
	  FROM SA_SOL SL
	  LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
					    SUM(GL.QT_GIR) AS QT_GIR
				 FROM SA_GIRL GL
				 GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
	  ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
	  WHERE SL.CD_ITEM LIKE 'SD%'
	  UNION ALL
	  SELECT SL.CD_COMPANY, SL.NO_SO, SL.SEQ_SO,
			 PL.DT_IO AS DT_IN,
			 SL.QT_PO,
			 (CASE WHEN QL.TP_BOM = 'P' THEN ISNULL(IL.QT_IO, 0) 
	   		  						    ELSE ISNULL(PL.QT_IO, 0) END) AS QT_IN,
			 ISNULL(PL.QT_TAX, 0) AS QT_TAX,
			 ISNULL(PL.QT_BL, 0) AS QT_BL,
			 ISNULL(PL.CUSTOMS, 0) AS CUSTOMS,
			 ISNULL(GL.QT_GIR, 0) AS QT_GIR,
			 ((CASE WHEN @P_TP_REQ_QTY = '001' THEN SL.QT_PO
											   ELSE (CASE WHEN QL.TP_BOM = 'P' THEN ISNULL(IL.QT_IO, 0) 
	   		  														           ELSE ISNULL(PL.QT_IO, 0) END) END) - ISNULL(GL.QT_GIR, 0)) AS QT_REQ,
	   		 (ISNULL(SL.QT_PO, 0) - ISNULL(GL.QT_GIR, 0)) AS QT_REMAIN,
			 ((CASE WHEN QL.TP_BOM = 'P' THEN ISNULL(IL.QT_IO, 0) 
	   		  						     ELSE ISNULL(PL.QT_IO, 0) END) - ISNULL(GL.QT_GIR, 0)) AS QT_IN_REMAIN,
			 STUFF((SELECT DISTINCT ',' + PH.CD_PARTNER 
				    FROM PU_POL PL
				    LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
				    WHERE PL.CD_COMPANY = SL.CD_COMPANY
				    AND PL.NO_SO =SL.NO_SO
				    AND PL.NO_SOLINE = SL.SEQ_SO
				    FOR XML PATH('')),1,1,'') AS CD_SUPPLIER,
			 STUFF((SELECT DISTINCT ',' + MP.LN_PARTNER 
				    FROM PU_POL PL
				    LEFT JOIN PU_POH PH ON PH.CD_COMPANY = PL.CD_COMPANY AND PH.NO_PO = PL.NO_PO
				    LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = PH.CD_COMPANY AND MP.CD_PARTNER = PH.CD_PARTNER
				    WHERE PL.CD_COMPANY = SL.CD_COMPANY
				    AND PL.NO_SO =SL.NO_SO
				    AND PL.NO_SOLINE = SL.SEQ_SO
				    FOR XML PATH('')),1,1,'') AS NM_SUPPLIER,
			 ISNULL(PL.CD_SL, NULL) AS CD_SL 
	  FROM SA_SOL SL
	  LEFT JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = SL.CD_COMPANY AND QL.NO_FILE = SL.NO_SO AND QL.NO_LINE = SL.SEQ_SO
	  LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE,
				 	    MAX(IL.DT_IO) AS DT_IO,
				 	    MAX(IL.CD_SL) AS CD_SL,
				 	    SUM(IL.QT_IO) AS QT_IO,
				 	    SUM(TX.QT_TAX) AS QT_TAX,
				 	    SUM(TX.CUSTOMS) AS CUSTOMS,
				 	    SUM(CASE WHEN ISNULL(PL.YN_BL, 'N') = 'Y' THEN PL.QT_PO ELSE 0 END) AS QT_BL
				 FROM PU_POL PL
				 LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT,
				 		   		   MAX(CASE WHEN IL.CD_SL IN ('SL01', 'VL01', 'VL02') THEN IH.DT_IO 
				 		   		            WHEN IL1.CD_SL = 'SL01' THEN IH1.DT_IO									   
				 		   		            ELSE NULL END) AS DT_IO,
				 		   		   MAX(CASE WHEN IL.CD_SL IN ('SL01', 'VL01', 'VL02') THEN IL.CD_SL 
				 		   		            WHEN IL1.CD_SL = 'SL01' THEN IL1.CD_SL									   
				 		   		   	        ELSE NULL END) AS CD_SL,
				 		   		   SUM(CASE WHEN IL.CD_SL IN ('SL01', 'VL01', 'VL02') THEN IL.QT_IO 
				 		   		            WHEN IL1.CD_SL = 'SL01' THEN IL1.QT_IO									   
				 		   		   	        ELSE NULL END) AS QT_IO
				 		   FROM MM_QTIOH IH
				 		   JOIN MM_QTIO IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
				 		   LEFT JOIN MM_QTIO IL1 ON IL1.CD_COMPANY = IL.CD_COMPANY AND IL1.NO_IO_MGMT = IL.NO_IO AND IL1.NO_IOLINE_MGMT = IL.NO_IOLINE
				 		   LEFT JOIN MM_QTIOH IH1 ON IH1.CD_COMPANY = IL1.CD_COMPANY AND IH1.NO_IO = IL1.NO_IO
				 		   WHERE (IH.YN_RETURN IS NULL OR IH.YN_RETURN = 'N') 
				 		   AND (ISNULL(@P_DT_GUBUN, '') <> 'IN' OR (ISNULL(@P_DT_GUBUN, '') = 'IN' AND IH.DT_IO BETWEEN @P_DT_SO_FROM AND @P_DT_SO_TO))
				 		   GROUP BY IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL
				 ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PSO_MGMT = PL.NO_PO AND IL.NO_PSOLINE_MGMT = PL.NO_LINE
				 LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE,
				 				   SUM(IL.QT_TAX) AS QT_TAX,
				 				   SUM(DL.CUSTOMS) AS CUSTOMS
				 		    FROM CZ_FI_IMP_PMTL IL
				 		    LEFT JOIN CZ_PU_IMPORT_DECLARATIONL DL ON DL.CD_COMPANY = IL.CD_COMPANY AND REPLACE(DL.NO_IMPORT, '-', '') = IL.NO_IMPORT AND DL.SEQ = IL.SEQ_IMPORT
				 		    GROUP BY IL.CD_COMPANY, IL.NO_PO, IL.NO_POLINE) TX 
				 ON TX.CD_COMPANY = PL.CD_COMPANY AND TX.NO_PO = PL.NO_PO AND TX.NO_POLINE = PL.NO_LINE
				 WHERE (ISNULL(@P_CD_SUPPLIER, '') = '' OR EXISTS (SELECT 1 
				 												   FROM PU_POH PH
				 												   WHERE PH.CD_COMPANY = PL.CD_COMPANY
				 												   AND PH.NO_PO = PL.NO_PO
				 												   AND PH.CD_PARTNER = @P_CD_SUPPLIER))
				 GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.NO_SOLINE) PL
	  ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.NO_SOLINE = SL.SEQ_SO
	  LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT,
	   					SUM(IL.QT_IO) AS QT_IO
	   			 FROM MM_QTIO IL
	   			 WHERE IL.FG_PS = '1'
	   			 GROUP BY IL.CD_COMPANY, IL.NO_PSO_MGMT, IL.NO_PSOLINE_MGMT) IL 
	  ON IL.CD_COMPANY = SL.CD_COMPANY AND IL.NO_PSO_MGMT = SL.NO_SO AND IL.NO_PSOLINE_MGMT = SL.SEQ_SO
	  LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
	   					SUM(GL.QT_GIR - ISNULL(GL.QT_GIR_STOCK, 0)) AS QT_GIR 
	   			 FROM SA_GIRL GL
	   			 GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
	  ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
	  WHERE SL.CD_ITEM NOT LIKE 'SD%'
	  AND (SL.CD_USERDEF1 = '재고픽업' OR PL.NO_SO IS NOT NULL)
	  UNION ALL
	  SELECT SB.CD_COMPANY, SB.NO_FILE, SB.NO_LINE,
			 'STOCK' AS DT_IN,
			 ISNULL(SB.QT_STOCK, 0) AS QT_PO,
	   		 ISNULL(SB.QT_BOOK, 0) AS QT_IN,
			 0.0000 AS QT_TAX,
			 0.0000 AS QT_BL,
			 0.0000 AS CUSTOMS,
	   		 ISNULL(GL.QT_GIR, 0) AS QT_GIR,
	   		 (ISNULL(SB.QT_BOOK, 0) - ISNULL(GL.QT_GIR, 0)) AS QT_REQ,
	   		 (ISNULL(SB.QT_STOCK, 0) - ISNULL(GL.QT_GIR, 0)) AS QT_REMAIN,
			 (ISNULL(SB.QT_BOOK, 0) - ISNULL(GL.QT_GIR, 0)) AS QT_IN_REMAIN,
			 'STOCK' AS CD_SUPPLIER,
			 'STOCK' AS NM_SUPPLIER,
			 'SL01' AS CD_SL
	  FROM CZ_SA_STOCK_BOOK SB
	  LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
	   					SUM(GL.QT_GIR_STOCK) AS QT_GIR 
	   			 FROM SA_GIRL GL
	   			 GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
	  ON GL.CD_COMPANY = SB.CD_COMPANY AND GL.NO_SO = SB.NO_FILE AND GL.SEQ_SO = SB.NO_LINE) PL
ON PL.CD_COMPANY = SL.CD_COMPANY AND PL.NO_SO = SL.NO_SO AND PL.SEQ_SO = SL.SEQ_SO
LEFT JOIN (SELECT PL.CD_COMPANY, PL.NO_SO, PL.SEQ_SO,
				  SUM(CASE WHEN ISNULL(PH.STA_GIR, '') = 'C' THEN 0 ELSE PL.QT_GIR END) AS QT_GIR,
	       		  SUM(CASE WHEN ISNULL(PH.STA_GIR, '') = 'C' THEN PL.QT_GIR - ISNULL(PL.QT_GIR_STOCK, 0) ELSE 0 END) AS QT_GIR_DONE, 
	       		  SUM(CASE WHEN ISNULL(PH.STA_GIR, '') = 'C' THEN ISNULL(PL.QT_GIR_STOCK, 0) ELSE 0 END) AS QT_GIR_STOCK_DONE 
	       FROM CZ_SA_GIRH_PACK PH
		   JOIN CZ_SA_GIRL_PACK PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_GIR = PH.NO_GIR
	       WHERE EXISTS (SELECT 1 
						 FROM CZ_SA_GIRH_PACK_DETAIL PD
						 WHERE PD.CD_COMPANY = PH.CD_COMPANY
						 AND PD.NO_GIR = PH.NO_GIR
						 AND PD.CD_PACK_CATEGORY = '001')
	       GROUP BY PL.CD_COMPANY, PL.NO_SO, PL.SEQ_SO) PK
ON PK.CD_COMPANY = SL.CD_COMPANY AND PK.NO_SO = SL.NO_SO AND PK.SEQ_SO = SL.SEQ_SO
LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
				  SUM(GL.QT_GIR) AS QT_GIR,
				  SUM(GL.QT_GIR_STOCK) AS QT_GIR_STOCK
		   FROM SA_GIRL GL
		   WHERE EXISTS (SELECT 1 
						 FROM SA_GIRH GH
						 WHERE GH.CD_COMPANY = GL.CD_COMPANY
						 AND GH.NO_GIR = GL.NO_GIR
						 AND (GH.STA_GIR IS NULL OR GH.STA_GIR IN ('', 'R', 'O', 'D')))
		   GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
ON GL.CD_COMPANY = SL.CD_COMPANY AND GL.NO_SO = SL.NO_SO AND GL.SEQ_SO = SL.SEQ_SO
LEFT JOIN (SELECT B.CD_COMPANY,
		   		  B.CD_PLANT,
		   		  B.CD_ITEM,
		   		  ISNULL([SL01], 0) AS QT_SL01,
		   		  ISNULL([SL02], 0) AS QT_SL02
		   FROM
		   (SELECT MY.CD_COMPANY, MY.CD_PLANT, MY.CD_SL, MY.CD_ITEM,
		   		   (SUM(MY.QT_GOOD_OPEN + MY.QT_REJECT_OPEN + MY.QT_INSP_OPEN + MY.QT_TRANS_OPEN) 
		   		  + SUM(MY.QT_GOOD_GR + MY.QT_REJECT_GR + MY.QT_INSP_GR + MY.QT_TRANS_GR) 
		   		  - SUM(MY.QT_GOOD_GI + MY.QT_REJECT_GI + MY.QT_INSP_GI + MY.QT_TRANS_GI)) AS QT_INV
		   FROM MM_PINVN MY
		   WHERE MY.P_YR = LEFT(CONVERT(NVARCHAR(8), GETDATE(), 112), 4)
		   AND (MY.CD_SL = 'SL01' OR MY.CD_SL = 'SL02')
		   GROUP BY MY.CD_COMPANY, MY.CD_PLANT, MY.CD_SL, MY.CD_ITEM) A
		   PIVOT (SUM(QT_INV) FOR A.CD_SL IN ([SL01], [SL02])) AS B) MY
ON MY.CD_COMPANY = SL.CD_COMPANY AND MY.CD_PLANT = SL.CD_PLANT AND MY.CD_ITEM = SL.CD_ITEM
LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
		    	  SUM(QT_GIREQ) AS QT_GIREQ 
		   FROM MM_GIREQL QL
		   WHERE CD_SL = 'SL02'
		   AND CD_GRSL = 'SL03'
		   GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) EQ
ON EQ.CD_COMPANY = SL.CD_COMPANY AND EQ.NO_SO = SL.NO_SO AND EQ.SEQ_SO = SL.SEQ_SO
LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO,
		   		  SUM(QT_GIREQ) AS QT_GIREQ 
		   FROM MM_GIREQL QL
		   WHERE CD_SL = 'SL03'
		   AND CD_GRSL = 'SL01'
		   GROUP BY QL.CD_COMPANY, QL.NO_SO, QL.SEQ_SO) EQ1
ON EQ1.CD_COMPANY = SL.CD_COMPANY AND EQ1.NO_SO = SL.NO_SO AND EQ1.SEQ_SO = SL.SEQ_SO
LEFT JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = SL.CD_COMPANY AND QL.NO_FILE = SL.NO_SO AND QL.NO_LINE = SL.SEQ_SO
LEFT JOIN MA_PITEM MI ON MI.CD_COMPANY = SL.CD_COMPANY AND MI.CD_ITEM = SL.CD_ITEM
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = SL.CD_COMPANY AND MP.CD_PARTNER = SL.GI_PARTNER
LEFT JOIN MM_EJTP EJ ON EJ.CD_COMPANY = SL.CD_COMPANY AND EJ.CD_QTIOTP = SL.TP_GI
LEFT JOIN MA_SL MS ON MS.CD_COMPANY = SL.CD_COMPANY AND MS.CD_PLANT = SL.CD_PLANT AND MS.CD_SL = PL.CD_SL
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = SH.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = SH.CD_EXCH
LEFT JOIN SA_PROJECTH SP ON SP.CD_COMPANY = SL.CD_COMPANY AND SP.NO_PROJECT = SL.NO_PROJECT
LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
LEFT JOIN SA_TPSO TS ON TS.CD_COMPANY = SH.CD_COMPANY AND TS.TP_SO = SH.TP_SO
LEFT JOIN FI_GWDOCU GW ON GW.CD_COMPANY = 'K100' AND GW.CD_PC = '010000' AND GW.NO_DOCU = SH.NO_DOCU
WHERE SL.CD_COMPANY = @P_CD_COMPANY
AND SL.NO_SO = @P_NO_SO
AND (ISNULL(@P_DT_GUBUN, '') <> 'DU' OR (ISNULL(@P_DT_GUBUN, '') = 'DU' AND SL.DT_DUEDATE BETWEEN @P_DT_SO_FROM AND @P_DT_SO_TO))
AND ISNULL(SL.STA_SO, '') <> ''
AND (ISNULL(SH.YN_CLOSE, 'N') = 'N' OR GW.ST_STAT <> '1' OR SL.CD_USERDEF1 = '재고픽업')
AND (ISNULL(@P_CD_PLANT, '') = '' OR SL.CD_PLANT = @P_CD_PLANT)
AND (ISNULL(@P_TP_BUSI, '') = '' OR SL.TP_BUSI = @P_TP_BUSI)
AND (@P_YN_PACK = 'Y' OR (@P_YN_PACK = 'N' AND ISNULL(PL.QT_REMAIN, 0) > 0))
AND (SL.CD_ITEM LIKE 'SD%' OR
	 (@P_IN_STATE = '001' AND ISNULL(PL.QT_IN_REMAIN, 0) > 0) OR
     (@P_IN_STATE = '002' AND ISNULL(PL.QT_PO, 0) > ISNULL(PL.QT_IN, 0)) OR
	 (@P_IN_STATE = '003' OR ISNULL(@P_IN_STATE, '') = ''))
AND ((@P_OUT_STATE = '001' AND ISNULL(SL.QT_GI, 0) > 0) OR
	 (@P_OUT_STATE = '002' AND ISNULL(SL.QT_SO, 0) > ISNULL(SL.QT_GI, 0)) OR
	 (@P_OUT_STATE = '003' OR ISNULL(@P_OUT_STATE, '') = ''))
ORDER BY QL.NO_DSP

GO