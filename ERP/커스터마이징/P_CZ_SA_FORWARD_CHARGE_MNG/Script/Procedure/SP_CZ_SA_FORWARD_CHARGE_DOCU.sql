USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_FORWARD_CHARGE_DOCU]    Script Date: 2017-07-19 오전 9:01:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

                                                        
ALTER PROCEDURE [NEOE].[SP_CZ_SA_FORWARD_CHARGE_DOCU]                                                      
(                                                      
	@P_CD_COMPANY	NVARCHAR(7),                                                      
	@P_CD_PARTNER	NVARCHAR(20),
	@P_TP_DELIVERY	NVARCHAR(4),
	@P_DT_MONTH		NVARCHAR(6),
	@P_NO_MDOCU		NVARCHAR(20),
	@P_NO_MODULE    NVARCHAR(3),
	@P_ID_INSERT    NVARCHAR(15)					
)                                                      
AS
                                                      
DECLARE @V_ERRMSG		NVARCHAR(255),
		@V_NO_DOCU		NVARCHAR(20),

		@V_TP_DRCR		NVARCHAR(1),
		@V_CD_ACCT		NVARCHAR(10),
		@V_NM_NOTE		NVARCHAR(150),
		@V_AM_DR		NUMERIC(19,4),
        @V_AM_CR        NUMERIC(19,4),
		@V_TP_ACAREA	NVARCHAR(3),
	    @V_CD_RELATION  NCHAR(2),
		@V_CD_BANK		NVARCHAR(20),
		@V_NM_BANK		NVARCHAR(50),
		@V_CD_DEPOSIT	NVARCHAR(20),
		@V_NO_DEPOSIT	NVARCHAR(20),
		@V_CD_CC        NVARCHAR(12),
		@V_NM_CC		NVARCHAR(50),
		@V_CD_PJT		NVARCHAR(20),
		@V_NM_PJT		NVARCHAR(50),
		@V_CD_PARTNER	NVARCHAR(20),
		@V_NM_PARTNER	NVARCHAR(50),
		@V_NO_EMP       NVARCHAR(10),
		@V_NM_EMP       NVARCHAR(50),
		@V_AM_SUPPLY    NUMERIC(19,4),
		@V_FG_TAX	    NVARCHAR(4),
		@V_NM_TAX       NVARCHAR(200),
		@V_NO_COMPANY	NVARCHAR(20),
		@V_AM_VAT		NUMERIC(17,4),
		@V_CD_BIZAREA	NVARCHAR(7),
		@V_NM_BIZAREA	NVARCHAR(50),
		@V_NO_KEY		NVARCHAR(20)

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

IF ISNULL(@P_NO_MDOCU, '') <> ''
BEGIN
	SET @V_NO_KEY = @P_NO_MDOCU
END
ELSE
BEGIN
	SET @V_NO_KEY = @P_CD_PARTNER + @P_TP_DELIVERY + @P_DT_MONTH	
END

SELECT @V_NO_DOCU = MAX(NO_DOCU) 
FROM FI_DOCU
WHERE CD_COMPANY = @P_CD_COMPANY
AND NO_MODULE = @P_NO_MODULE
AND NO_MDOCU = @V_NO_KEY

IF @V_NO_DOCU IS NOT NULL
BEGIN
	SET @V_ERRMSG = @V_NO_DOCU + ' 로 이미 등록된 전표가 있습니다.'
    GOTO ERROR
END

DECLARE SRC_CURSOR CURSOR FOR

/* 차변 : 운반비 */
SELECT '1' AS TP_DRCR,
	   '58700' AS CD_ACCT,
	   (CASE WHEN ISNULL(GC.TP_CHARGE, '') <> '002' THEN ''
			 WHEN (ISNULL(GC.AM_CHARGE, 0) > 0 AND (ISNULL(GC.AM_CHARGE, 0) * ISNULL(GC.RT_EXCH, 0)) < ISNULL(FL.AM_CHARGE_MONTH, 0)) THEN '★ '
 			 WHEN (ISNULL(GC.AM_CHARGE, 0) <= 0 AND ISNULL(OL.AM_PROFIT, 0) < ISNULL(FL.AM_CHARGE_MONTH, 0)) THEN '★ '
			 ELSE '' END) +
	   '이윤 : ' + FORMAT(ISNULL(OL.AM_PROFIT, 0), '##,##0') + '(' + FORMAT(ISNULL(OL.RT_PROFIT, 0), '0.00') + '%)' + ' 운임 ' + 
	   (CASE WHEN ISNULL(GC.TP_CHARGE, '') = '002' THEN '수동청구' + ' (' + ISNULL(MC.NM_SYSDEF, '') + ' ' + CONVERT(NVARCHAR, CONVERT(NUMERIC(20, 2), ISNULL(GC.AM_CHARGE, 0))) + ')' ELSE '자동청구' END) AS NM_NOTE,
	   ISNULL(FL.AM_CHARGE_MONTH, 0) AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   OL.CD_CC,
	   OL.NM_CC,
	   OL.CD_PJT,
	   OL.NM_PJT,
	   NULL AS CD_PARTNER,
	   NULL AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   0 AS AM_SUPPLY,
	   '' AS FG_TAX,
	   '' AS NM_TAX,
	   NULL AS NO_COMPANY,
	   0 AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY, 
			 FL.NO_IO,
			 SUM(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_ETC_MONTH, 0) - ISNULL(FL.AM_WFG, 0)) AS AM_CHARGE_MONTH
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  AND ISNULL(FL.NM_NOTE, '') NOT IN ('서류', '선물')
	  GROUP BY FL.CD_COMPANY, FL.NO_IO) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '58700'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
LEFT JOIN (SELECT OL.CD_COMPANY,
		          OL.NO_IO,
				  OL.NO_GIR,
		          OL.CD_PJT,
				  OL.CD_CC,
	              OL.NM_CC,
	              OL.NM_PJT,
		          (ISNULL(OL.AM_SO, 0) - (ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0))) AS AM_PROFIT,
		          (CASE WHEN ISNULL(OL.AM_SO, 0) = 0 THEN 0 
		       									     ELSE ROUND(((1 - ((ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0)) / ISNULL(OL.AM_SO, 0))) * 100), 2) END) AS RT_PROFIT
		   FROM (SELECT OL.CD_COMPANY,
		                OL.NO_IO,
						OL.NO_GIR,
		                OL.CD_PJT,
						MC.CD_CC,
	                    MC.NM_CC,
	                    PJ.NM_PROJECT AS NM_PJT,
		                (CASE WHEN ISNULL(TP.RET, 'N') = 'Y' THEN -ISNULL(SL.AM_SO, 0) ELSE ISNULL(SL.AM_SO, 0) END) AS AM_SO,
		                SB.AM_STOCK,
		                PL.AM_PO 
		         FROM (SELECT CD_COMPANY, NO_IO, CD_PJT,
							  MAX(NO_ISURCV) AS NO_GIR,
		                      ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, NO_IO ORDER BY SUM(AM_EX) DESC) AS IDX
		         	   FROM MM_QTIO
		         	   GROUP BY CD_COMPANY, NO_IO, CD_PJT) OL
		         LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = OL.CD_COMPANY AND SH.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
		                           SUM(SL.AM_WONAMT) AS AM_SO
		                    FROM SA_SOL SL
		                    GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
		         ON SL.CD_COMPANY = OL.CD_COMPANY AND SL.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE,
		         		   	       ISNULL(SUM(SB.UM_KR * SB.QT_STOCK), 0) AS AM_STOCK
		         		    FROM CZ_SA_STOCK_BOOK SB
		         		    GROUP BY SB.CD_COMPANY, SB.NO_FILE) SB
		         ON SB.CD_COMPANY = OL.CD_COMPANY AND SB.NO_FILE = OL.CD_PJT
		         LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PJT,
		         		   	       ISNULL(SUM(PL.AM), 0) AS AM_PO 
		         		    FROM PU_POH PH
		         		    JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
		         		    WHERE PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400')
		         		    GROUP BY PH.CD_COMPANY, PH.CD_PJT) PL
		         ON PL.CD_COMPANY = OL.CD_COMPANY AND PL.CD_PJT = OL.CD_PJT
		         LEFT JOIN SA_TPSO TP ON TP.CD_COMPANY = OL.CD_COMPANY AND TP.TP_SO = SH.TP_SO
				 LEFT JOIN SA_PROJECTH PJ ON PJ.CD_COMPANY = OL.CD_COMPANY AND PJ.NO_PROJECT = OL.CD_PJT
				 LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
				 LEFT JOIN MA_CC MC ON MC.CD_COMPANY = SG.CD_COMPANY AND MC.CD_CC = SG.CD_CC
		         WHERE OL.IDX = 1) OL) OL
ON OL.CD_COMPANY = FL.CD_COMPANY AND OL.NO_IO = FL.NO_IO
LEFT JOIN (SELECT GH.CD_COMPANY, GH.NO_GIR,
                  MAX(GL.CD_EXCH) AS CD_EXCH,
				  MAX(GL.RT_EXCH) AS RT_EXCH,
                  MAX(WD.TP_CHARGE) AS TP_CHARGE,
                  SUM(GC.AM_EX_CHARGE) AS AM_CHARGE
           FROM SA_GIRH GH
           LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_GIR,
						     MAX(GL.RT_EXCH) AS RT_EXCH,
                             MAX(GL.CD_EXCH) AS CD_EXCH 
                      FROM SA_GIRL GL
                      GROUP BY GL.CD_COMPANY, GL.NO_GIR) GL
           ON GL.CD_COMPANY = GH.CD_COMPANY AND GL.NO_GIR = GH.NO_GIR
           LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GH.CD_COMPANY AND WD.NO_GIR = GH.NO_GIR
           LEFT JOIN CZ_SA_GIRH_CHARGE GC ON GC.CD_COMPANY = GH.CD_COMPANY AND GC.NO_GIR = GH.NO_GIR
		   WHERE GC.CD_ITEM = 'SD0001'
           GROUP BY GH.CD_COMPANY, GH.NO_GIR) GC
ON GC.CD_COMPANY = OL.CD_COMPANY AND GC.NO_GIR = OL.NO_GIR
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = GC.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = GC.CD_EXCH
WHERE ISNULL(FL.AM_CHARGE_MONTH, 0) <> 0
UNION ALL
SELECT '1' AS TP_DRCR,
	   '58700' AS CD_ACCT,
	   (CASE WHEN ISNULL(OL.AM_PROFIT, 0) < ISNULL(FL.AM_CHARGE_MONTH, 0) THEN '★ ' ELSE '' END) +
	   '이윤 : ' + FORMAT(ISNULL(OL.AM_PROFIT, 0), '##,##0') + '(' + FORMAT(ISNULL(OL.RT_PROFIT, 0), '0.00') + '%)' + ' 창고료' AS NM_NOTE,
	   ISNULL(FL.AM_CHARGE_MONTH, 0) AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   OL.CD_CC,
	   OL.NM_CC,
	   OL.CD_PJT,
	   OL.NM_PJT,
	   NULL AS CD_PARTNER,
	   NULL AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   0 AS AM_SUPPLY,
	   '' AS FG_TAX,
	   '' AS NM_TAX,
	   NULL AS NO_COMPANY,
	   0 AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY, 
			 FL.NO_IO,
			 SUM(ISNULL(FL.AM_WFG, 0)) AS AM_CHARGE_MONTH
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  AND ISNULL(FL.NM_NOTE, '') NOT IN ('서류', '선물')
	  GROUP BY FL.CD_COMPANY, FL.NO_IO) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '58700'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
LEFT JOIN (SELECT OL.CD_COMPANY,
		          OL.NO_IO,
		          OL.CD_PJT,
				  OL.CD_CC,
	              OL.NM_CC,
	              OL.NM_PJT,
		          (ISNULL(OL.AM_SO, 0) - (ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0))) AS AM_PROFIT,
		          (CASE WHEN ISNULL(OL.AM_SO, 0) = 0 THEN 0 
		       									     ELSE ROUND(((1 - ((ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0)) / ISNULL(OL.AM_SO, 0))) * 100), 2) END) AS RT_PROFIT
		   FROM (SELECT OL.CD_COMPANY,
		                OL.NO_IO,
		                OL.CD_PJT,
						MC.CD_CC,
	                    MC.NM_CC,
	                    PJ.NM_PROJECT AS NM_PJT,
		                (CASE WHEN ISNULL(TP.RET, 'N') = 'Y' THEN -ISNULL(SL.AM_SO, 0) ELSE ISNULL(SL.AM_SO, 0) END) AS AM_SO,
		                SB.AM_STOCK,
		                PL.AM_PO 
		         FROM (SELECT CD_COMPANY, NO_IO, CD_PJT,
		                      ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, NO_IO ORDER BY SUM(AM_EX) DESC) AS IDX
		         	   FROM MM_QTIO
		         	   GROUP BY CD_COMPANY, NO_IO, CD_PJT) OL
		         LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = OL.CD_COMPANY AND SH.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
		                           SUM(SL.AM_WONAMT) AS AM_SO
		                    FROM SA_SOL SL
		                    GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
		         ON SL.CD_COMPANY = OL.CD_COMPANY AND SL.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE,
		         		   	       ISNULL(SUM(SB.UM_KR * SB.QT_STOCK), 0) AS AM_STOCK
		         		    FROM CZ_SA_STOCK_BOOK SB
		         		    GROUP BY SB.CD_COMPANY, SB.NO_FILE) SB
		         ON SB.CD_COMPANY = OL.CD_COMPANY AND SB.NO_FILE = OL.CD_PJT
		         LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PJT,
		         		   	       ISNULL(SUM(PL.AM), 0) AS AM_PO 
		         		    FROM PU_POH PH
		         		    JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
		         		    WHERE PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400')
		         		    GROUP BY PH.CD_COMPANY, PH.CD_PJT) PL
		         ON PL.CD_COMPANY = OL.CD_COMPANY AND PL.CD_PJT = OL.CD_PJT
		         LEFT JOIN SA_TPSO TP ON TP.CD_COMPANY = OL.CD_COMPANY AND TP.TP_SO = SH.TP_SO
				 LEFT JOIN SA_PROJECTH PJ ON PJ.CD_COMPANY = OL.CD_COMPANY AND PJ.NO_PROJECT = OL.CD_PJT
				 LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
				 LEFT JOIN MA_CC MC ON MC.CD_COMPANY = SG.CD_COMPANY AND MC.CD_CC = SG.CD_CC
		         WHERE OL.IDX = 1) OL) OL
ON OL.CD_COMPANY = FL.CD_COMPANY AND OL.NO_IO = FL.NO_IO
WHERE ISNULL(FL.AM_CHARGE_MONTH, 0) <> 0
UNION ALL
/* 차변 : 통신비 */
SELECT '1' AS TP_DRCR,
	   '55200' AS CD_ACCT,
	   (CASE WHEN ISNULL(OL.AM_PROFIT, 0) < ISNULL(FL.AM_CHARGE_MONTH, 0) THEN '★ ' ELSE '' END) +
	   '이윤 : ' + FORMAT(ISNULL(OL.AM_PROFIT, 0), '##,##0') + '(' + FORMAT(ISNULL(OL.RT_PROFIT, 0), '0.00') + '%)' + ' 서류발송' AS NM_NOTE,
	   ISNULL(FL.AM_CHARGE_MONTH, 0) AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   OL.CD_CC,
	   OL.NM_CC,
	   OL.CD_PJT,
	   OL.NM_PJT,
	   NULL AS CD_PARTNER,
	   NULL AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   0 AS AM_SUPPLY,
	   '' AS FG_TAX,
	   '' AS NM_TAX,
	   NULL AS NO_COMPANY,
	   0 AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY, 
			 FL.NO_IO,
			 SUM(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_ETC_MONTH, 0)) AS AM_CHARGE_MONTH
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  AND ISNULL(FL.NM_NOTE, '') = '서류'
	  GROUP BY FL.CD_COMPANY, FL.NO_IO) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '55200'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
LEFT JOIN (SELECT OL.CD_COMPANY,
		          OL.NO_IO,
		          OL.CD_PJT,
				  OL.CD_CC,
	              OL.NM_CC,
	              OL.NM_PJT,
		          (ISNULL(OL.AM_SO, 0) - (ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0))) AS AM_PROFIT,
		          (CASE WHEN ISNULL(OL.AM_SO, 0) = 0 THEN 0 
		       									     ELSE ROUND(((1 - ((ISNULL(OL.AM_PO, 0) + ISNULL(OL.AM_STOCK, 0)) / ISNULL(OL.AM_SO, 0))) * 100), 2) END) AS RT_PROFIT
		   FROM (SELECT OL.CD_COMPANY,
		                OL.NO_IO,
		                OL.CD_PJT,
						MC.CD_CC,
	                    MC.NM_CC,
	                    PJ.NM_PROJECT AS NM_PJT,
		                (CASE WHEN ISNULL(TP.RET, 'N') = 'Y' THEN -ISNULL(SL.AM_SO, 0) ELSE ISNULL(SL.AM_SO, 0) END) AS AM_SO,
		                SB.AM_STOCK,
		                PL.AM_PO 
		         FROM (SELECT CD_COMPANY, NO_IO, CD_PJT,
		                      ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, NO_IO ORDER BY SUM(AM_EX) DESC) AS IDX
		         	   FROM MM_QTIO
		         	   GROUP BY CD_COMPANY, NO_IO, CD_PJT) OL
		         LEFT JOIN SA_SOH SH ON SH.CD_COMPANY = OL.CD_COMPANY AND SH.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
		                           SUM(SL.AM_WONAMT) AS AM_SO
		                    FROM SA_SOL SL
		                    GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
		         ON SL.CD_COMPANY = OL.CD_COMPANY AND SL.NO_SO = OL.CD_PJT
		         LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE,
		         		   	       ISNULL(SUM(SB.UM_KR * SB.QT_STOCK), 0) AS AM_STOCK
		         		    FROM CZ_SA_STOCK_BOOK SB
		         		    GROUP BY SB.CD_COMPANY, SB.NO_FILE) SB
		         ON SB.CD_COMPANY = OL.CD_COMPANY AND SB.NO_FILE = OL.CD_PJT
		         LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PJT,
		         		   	       ISNULL(SUM(PL.AM), 0) AS AM_PO 
		         		    FROM PU_POH PH
		         		    JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
		         		    WHERE PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400')
		         		    GROUP BY PH.CD_COMPANY, PH.CD_PJT) PL
		         ON PL.CD_COMPANY = OL.CD_COMPANY AND PL.CD_PJT = OL.CD_PJT
		         LEFT JOIN SA_TPSO TP ON TP.CD_COMPANY = OL.CD_COMPANY AND TP.TP_SO = SH.TP_SO
				 LEFT JOIN SA_PROJECTH PJ ON PJ.CD_COMPANY = OL.CD_COMPANY AND PJ.NO_PROJECT = OL.CD_PJT
				 LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
				 LEFT JOIN MA_CC MC ON MC.CD_COMPANY = SG.CD_COMPANY AND MC.CD_CC = SG.CD_CC
		         WHERE OL.IDX = 1) OL) OL
ON OL.CD_COMPANY = FL.CD_COMPANY AND OL.NO_IO = FL.NO_IO
WHERE ISNULL(FL.AM_CHARGE_MONTH, 0) <> 0
UNION ALL
SELECT '1' AS TP_DRCR,
	   '55200' AS CD_ACCT,
	   '선물발송' AS NM_NOTE,
	   ISNULL(FL.AM_CHARGE_MONTH, 0) AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   MC.CD_CC,
	   MC.NM_CC,
	   NULL AS CD_PJT,
	   NULL AS NM_PJT,
	   NULL AS CD_PARTNER,
	   NULL AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   0 AS AM_SUPPLY,
	   '' AS FG_TAX,
	   '' AS NM_TAX,
	   NULL AS NO_COMPANY,
	   0 AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY, 
			 FL.NO_IO,
			 SUM(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_ETC_MONTH, 0)) AS AM_CHARGE_MONTH
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  AND ISNULL(FL.NM_NOTE, '') = '선물'
	  GROUP BY FL.CD_COMPANY, FL.NO_IO) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '55200'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
LEFT JOIN MA_CC MC ON MC.CD_COMPANY = FL.CD_COMPANY AND MC.CD_CC = FL.NO_IO
WHERE ISNULL(FL.AM_CHARGE_MONTH, 0) <> 0
UNION ALL
/* 차변 : 부가세대급금 */
SELECT '1' AS TP_DRCR,
	   '12700' AS CD_ACCT,
	   '부가세대급금' AS NM_NOTE,
	   ISNULL(FL.AM_VAT_MONTH, 0) AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   NULL AS CD_CC,
	   NULL AS NM_CC,
	   NULL AS CD_PJT,
	   NULL AS NM_PJT,
	   MP.CD_PARTNER AS CD_PARTNER,
	   MP.LN_PARTNER AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   ISNULL(FL.AM_VAT_TARGET, 0) AS AM_SUPPLY,
	   '21' AS FG_TAX,
	   CD.NM_SYSDEF AS NM_TAX,
	   MP.NO_COMPANY,
	   ISNULL(FL.AM_VAT_MONTH, 0) AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY,
			 FL.CD_PARTNER,
			 SUM(FL.AM_VAT_TARGET) AS AM_VAT_TARGET,
			 SUM(FL.AM_VAT_MONTH) AS AM_VAT_MONTH 
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  GROUP BY FL.CD_COMPANY, FL.CD_PARTNER) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '12700'
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = FL.CD_COMPANY AND MP.CD_PARTNER = FL.CD_PARTNER
LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = FL.CD_COMPANY AND CD.CD_FIELD = 'MA_B000046' AND CD.CD_SYSDEF = '21'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
WHERE ISNULL(FL.AM_VAT_TARGET, 0) <> 0
UNION ALL
SELECT '1' AS TP_DRCR,
	   '12700' AS CD_ACCT,
	   '부가세대급금' AS NM_NOTE,
	   0 AS AM_DR,
	   0 AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   NULL AS CD_CC,
	   NULL AS NM_CC,
	   NULL AS CD_PJT,
	   NULL AS NM_PJT,
	   MP.CD_PARTNER AS CD_PARTNER,
	   MP.LN_PARTNER AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   ISNULL(FL.AM_CHARGE_MONTH, 0) AS AM_SUPPLY,
	   '23' AS FG_TAX,
	   CD.NM_SYSDEF AS NM_TAX,
	   MP.NO_COMPANY,
	   0 AS AM_VAT,
	   MB.CD_BIZAREA,
	   MB.NM_BIZAREA
FROM (SELECT FL.CD_COMPANY,
			 FL.CD_PARTNER,
			 SUM(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_ETC_MONTH, 0) - ISNULL(FL.AM_VAT_TARGET, 0)) AS AM_CHARGE_MONTH,
			 SUM(FL.AM_VAT_MONTH) AS AM_VAT_MONTH 
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND FL.TP_DELIVERY <> 'F2F'
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  GROUP BY FL.CD_COMPANY, FL.CD_PARTNER) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '12700'
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = FL.CD_COMPANY AND MP.CD_PARTNER = FL.CD_PARTNER
LEFT JOIN MA_CODEDTL CD ON CD.CD_COMPANY = FL.CD_COMPANY AND CD.CD_FIELD = 'MA_B000046' AND CD.CD_SYSDEF = '21'
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = FL.CD_COMPANY
WHERE ISNULL(FL.AM_CHARGE_MONTH, 0) <> 0
UNION ALL
/* 대변 : 국내미지급금 */    
SELECT '2' AS TP_DRCR,
	   '30310' AS CD_ACCT,
	   '국내미지급금' AS NM_NOTE,
	   0 AS AM_DR,
	   (ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_VAT_MONTH, 0)) AS AM_CR,
	   '0' AS TP_ACAREA,
	   AC.CD_RELATION,
	   NULL AS CD_BANK,
	   NULL AS NM_BANK,
	   NULL AS CD_DEPOSIT,
	   NULL AS NO_DEPOSIT,
	   NULL AS CD_CC,
	   NULL AS NM_CC,
	   NULL AS CD_PJT,
	   NULL AS NM_PJT,
	   MP.CD_PARTNER AS CD_PARTNER,
	   MP.LN_PARTNER AS NM_PARTNER,
	   NULL AS NO_EMP,
	   NULL AS NM_EMP,
	   0 AS AM_SUPPLY,
	   NULL AS FG_TAX,
	   NULL AS NM_TAX,
	   MP.NO_COMPANY,
	   0 AS AM_VAT,
	   NULL AS CD_BIZAREA,
	   NULL AS NM_BIZAREA
FROM (SELECT FL.CD_COMPANY,
	  	     FL.CD_PARTNER,
	  	     SUM(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_ETC_MONTH, 0)) AS AM_CHARGE_MONTH,
	  	     SUM(FL.AM_VAT_MONTH) AS AM_VAT_MONTH 
	  FROM CZ_SA_FORWARD_CHARGE_L FL
	  WHERE FL.CD_COMPANY = @P_CD_COMPANY
	  AND FL.CD_PARTNER = @P_CD_PARTNER
	  AND FL.TP_DELIVERY = @P_TP_DELIVERY
	  AND FL.DT_MONTH = @P_DT_MONTH
	  AND (ISNULL(@P_NO_MDOCU, '') = '' OR FL.NO_MDOCU = @P_NO_MDOCU)
	  GROUP BY FL.CD_COMPANY, FL.CD_PARTNER) FL
LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FL.CD_COMPANY AND AC.CD_ACCT = '30310'
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = FL.CD_COMPANY AND MP.CD_PARTNER = FL.CD_PARTNER
WHERE(ISNULL(FL.AM_CHARGE_MONTH, 0) + ISNULL(FL.AM_VAT_MONTH, 0)) <> 0

------------------------------------------
-- 여기서 부터 전표처리 하기 위한 부분  --
------------------------------------------
DECLARE @V_NO_DOLINE	NUMERIC(4, 0)	-- 전표라인
DECLARE @V_DT_ACCT		NVARCHAR(8)		-- 회계일자
DECLARE @V_NO_ACCT		NUMERIC(5, 0)	-- 회계번호 
DECLARE @V_DT_WRITE		NVARCHAR(8)		-- 작성일자
DECLARE @V_ID_WEMP		NVARCHAR(10)	-- 작성자
DECLARE @V_ID_ACCT		NVARCHAR(10)	-- 승인자
DECLARE @V_CD_PC		NVARCHAR(7)		-- 회계단위
DECLARE @V_CD_WDEPT		NVARCHAR(12)	-- 작성부서
DECLARE @V_ST_DOCUAPP	NVARCHAR(1)		-- 전표권한
DECLARE @V_ST_DOCU		NVARCHAR(1)		-- 전표상태
DECLARE @V_NM_PUMM      NVARCHAR(150)	-- 품의내역
DECLARE @V_TP_EVIDENCE	NVARCHAR(1)		-- 증빙
DECLARE @V_CD_MNG		NVARCHAR(20)	-- 관리번호

SET @V_NO_DOLINE = 0

IF ISNULL(@P_NO_MDOCU, '') <> ''
BEGIN
	SELECT @V_DT_ACCT = MAX(FL.DT_FORWARD)
	FROM CZ_SA_FORWARD_CHARGE_L FL
	WHERE FL.CD_COMPANY = @P_CD_COMPANY
	AND FL.CD_PARTNER = @P_CD_PARTNER
	AND FL.TP_DELIVERY = @P_TP_DELIVERY
	AND FL.DT_MONTH = @P_DT_MONTH
	AND FL.NO_MDOCU = @P_NO_MDOCU
END

IF ISNULL(@V_DT_ACCT, '') = ''
BEGIN
	SET @V_DT_ACCT = CONVERT(NVARCHAR(8), GETDATE(), 112)
END

SET @V_DT_WRITE = CONVERT(NVARCHAR(8), GETDATE(), 112)

IF @P_TP_DELIVERY = 'AIR'
	SET @V_NM_PUMM = '항송운임'
ELSE IF @P_TP_DELIVERY = 'SEA'
	SET @V_NM_PUMM = '해송운임'
ELSE IF @P_TP_DELIVERY = 'TEB'
	SET @V_NM_PUMM = '픽업운임'
ELSE IF @P_TP_DELIVERY = 'F2F'
	SET @V_NM_PUMM = 'F2F운임'

SELECT @V_ID_WEMP = ME.NO_EMP,
	   @V_ID_ACCT = ME.NO_EMP,
	   @V_CD_PC = MB.CD_PC,
	   @V_CD_WDEPT = ME.CD_DEPT,
	   @V_ST_DOCUAPP = ST_DOCUAPP 
FROM MA_USER MU
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = MU.CD_COMPANY AND ME.NO_EMP = MU.NO_EMP
LEFT JOIN MA_BIZAREA MB ON MB.CD_COMPANY = ME.CD_COMPANY AND MB.CD_BIZAREA = ME.CD_BIZAREA 
WHERE MU.CD_COMPANY = @P_CD_COMPANY
AND MU.ID_USER = @P_ID_INSERT

--IF (@V_ST_DOCUAPP = '2' OR @V_ST_DOCUAPP = '3')
--	SET @V_ST_DOCU = '2'
--ELSE
	SET @V_ST_DOCU = '1'

-- 전표번호 채번
EXEC UP_FI_DOCU_CREATE_SEQ @P_CD_COMPANY, 'FI01', @V_DT_ACCT, @V_NO_DOCU OUTPUT

--회계번호 채번
IF @V_ST_DOCU = '1'
BEGIN
	SET @V_NO_ACCT = 0
	SET @V_ID_ACCT = NULL
END
ELSE
BEGIN
	EXEC UP_FI_DOCU_CREATE_SEQ4 @P_CD_COMPANY, @V_CD_PC , 'FI04', @V_DT_ACCT, @V_NO_ACCT OUTPUT
END

OPEN SRC_CURSOR
FETCH NEXT FROM SRC_CURSOR INTO @V_TP_DRCR,
								@V_CD_ACCT,
								@V_NM_NOTE,
								@V_AM_DR,
								@V_AM_CR,
								@V_TP_ACAREA,
								@V_CD_RELATION,
								@V_CD_BANK,
								@V_NM_BANK,
								@V_CD_DEPOSIT,
								@V_NO_DEPOSIT,
								@V_CD_CC,
								@V_NM_CC,
								@V_CD_PJT,
								@V_NM_PJT,
								@V_CD_PARTNER,
								@V_NM_PARTNER,
								@V_NO_EMP,
								@V_NM_EMP,
								@V_AM_SUPPLY,
								@V_FG_TAX,
								@V_NM_TAX,
								@V_NO_COMPANY,
								@V_AM_VAT,
								@V_CD_BIZAREA,
								@V_NM_BIZAREA

IF @@FETCH_STATUS = -1 
BEGIN 
	RAISERROR ('전표처리할 데이터가 존재하지 않습니다', 18, 1)
	CLOSE SRC_CURSOR
	DEALLOCATE SRC_CURSOR
	RETURN
END

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @V_NO_DOLINE = @V_NO_DOLINE + 1
    SET @V_CD_MNG = @V_NO_KEY + '-' + CONVERT(NVARCHAR, @V_NO_DOLINE)
	
	-- 증빙 추가
	IF @V_CD_ACCT = '58700'
	BEGIN
		IF @P_CD_PARTNER = 01107 OR @V_NM_NOTE = '창고료' OR @P_TP_DELIVERY = 'F2F' OR @P_TP_DELIVERY = 'TEB1'
		BEGIN
			SET @V_TP_EVIDENCE = '5' -- 수취제외대상
		END
		ELSE
		BEGIN
			SET @V_TP_EVIDENCE = '3' -- 세금계산서
		END
	END
	ELSE IF @V_CD_ACCT = '55200'
	BEGIN
		SET @V_TP_EVIDENCE = '5' -- 수취제외대상
	END
	ELSE
	BEGIN
		SET @V_TP_EVIDENCE = NULL
	END
	
	EXEC UP_FI_AUTODOCU_1 @V_NO_DOCU,			  --전표번호 NO_DOCU
						  @V_NO_DOLINE,			  --라인번호 NO_DOLINE
						  @V_CD_PC,				  --회계단위 CD_PC
						  @P_CD_COMPANY,		  --회사코드 CD_COMPANY
						  @V_CD_WDEPT,			  --작성부서 CD_WDEPT
						  @V_ID_WEMP,			  --작성자	 ID_WRITE
						  @V_DT_ACCT,		      --회계일자 DT_ACCT
						  @V_NO_ACCT,			  --회계번호 NO_ACCT
						  '3',					  --전표구분-대체 TP_DOCU
						  '11',					  --전표유형-일반 CD_DOCU
						  @V_ST_DOCU,			  --전표상태-미결 ST_DOCU
						  @V_ID_ACCT,			  --승인자	 ID_ACCEPT
						  @V_TP_DRCR,			  --차대구분 TP_DRCR
						  @V_CD_ACCT,			  --계정코드 CD_ACCT
						  @V_NM_NOTE,			  --적요	 NM_NOTE
						  @V_AM_DR,				  --차변금액 AM_DR
						  @V_AM_CR,				  --대변금액 AM_CR
						  @V_TP_ACAREA,			  --'4' 일 경우 반제원인전표이므로 FI_BANH에 Insert된다
						  @V_CD_RELATION,		  --연동항목 CD_RELATION
						  @V_CD_CC,				  --예산코드 CD_BUDGET
						  NULL,					  --자금과목 CD_FUND
						  NULL,					  --원인전표번호 NO_BDOCU
						  0,					  --원인전표라인 NO_BDOLINE
						  '0',					  --타대구분 TP_ETCACCT
						  @V_CD_BIZAREA,		  --귀속사업장 CD_BIZAREA
						  @V_NM_BIZAREA,		  --귀속사업장명 NM_BIZAREA
						  @V_CD_CC,				  --코스트센터 CD_CC
						  @V_NM_CC,				  --코스트센터명 NM_CC
						  @V_CD_PJT,			  --프로젝트 CD_PJT
						  @V_NM_PJT,			  --프로젝트명 NM_PJT
						  NULL,					  --부서 CD_DEPT
						  NULL,					  --부서명 NM_DEPT
						  @V_NO_EMP,			  --사원 CD_EMPLOY
						  @V_NM_EMP,			  --사원명 NM_EMPLOY  
						  @V_CD_PARTNER,		  --거래처 CD_PARTNER
						  @V_NM_PARTNER,		  --거래처명 NM_PARTNER
						  @V_CD_DEPOSIT,		  --예적금코드 CD_DEPOSIT
						  @V_NO_DEPOSIT,		  --예적금명 NM_DEPOSIT
						  NULL,					  --카드번호 CD_CARD
						  NULL,					  --카드명 NM_CARD
						  @V_CD_BANK,			  --은행코드 CD_BANK  : MA_PARTNER에서 FG_PARTNER = '002' 인것
						  @V_NM_BANK,			  --은행명 NM_BANK
						  NULL,					  --품목코드 NO_ITEM
						  NULL,					  --품목명 NM_ITEM
						  @V_FG_TAX,			  --세무구분 TP_TAX
						  @V_NM_TAX,			  --세무구분명 NM_TAX
						  NULL,					  --거래구분 CD_TRADE
						  NULL,					  --거래구분명 NM_TRADE
						  NULL,					  --통화코드 CD_EXCH
						  NULL,					  --통화명 NM_EXCH
						  NULL,					  --사용자정의1 CD_UMNG1
						  NULL,					  --사용자정의2 CD_UMNG2
						  NULL,					  --사용자정의3 CD_UMNG3
						  NULL,					  --사용자정의4 CD_UMNG4
						  NULL,					  --사용자정의5 CD_UMNG5
						  @V_NO_COMPANY,		  --NO_COMPANY
						  @V_AM_SUPPLY,			  --과세표준 AM_SUPPLY
						  @V_CD_MNG,		      --관리번호 = 계산서번호 CD_MNG
						  NULL,					  --수금에정일 DT_START
						  NULL,					  --만기일자 DT_END
						  0,					  --환율 RT_EXCH
						  0,					  --외화금액 AM_EXDO
						  @P_NO_MODULE,			  --모듈구분(D01) NO_MODULE
						  @V_NO_KEY,		      --모듈관리번호 = 타모듈pkey NO_MDOCU
						  @V_CD_ACCT,			  --지출결의코드 CD_EPNOTE
						  @P_ID_INSERT,			  --전표처리자 ID_INSERT
						  @V_CD_ACCT,			  --예산계정 CD_BGACCT
						  NULL,					  --결의구분 TP_EPNOTE
						  @V_NM_PUMM,			  --품의내역 NM_PUMM
						  @V_DT_WRITE,			  --작성일자 DT_WRITE              
						  0,					  --AM_ACTSUM
						  0,					  --AM_JSUM
						  'N',					  --YN_GWARE
						  NULL,					  --사업계획코드 CD_BIZPLAN
						  NULL,					  --CD_ETC
						  NULL,
						  NULL,
						  NULL,
						  NULL ,
						  NULL,
						  NULL,					  --@P_NM_ARRIVE NVARCHAR(30) = NULL, -- 미착품구분 (전방추가)     
						  NULL,					  --@P_CD_PAYDEDUCT  NVARCHAR(3) = NULL,    --인사추가 (YTN)    
						  NULL,					  --@P_JUMIN_NO  NVARCHAR(40) = NULL,    --EC 추가 (본죽)    
						  NULL,					  --@P_DT_PAY   VARCHAR(8) = NULL,  --인사추가 (YTN)    
						  NULL,					  --@P_NO_INV  NVARCHAR(20) = NULL,    -- INVOICE NO    
						  NULL,					  --@P_NO_TO   NVARCHAR(20) = NULL,     -- 면장번호(NO_TO)    
						  @V_AM_VAT,			  --NUMERIC(17,4) = 0		--부가세 (전방추가)
						  NULL,
						  NULL,
						  NULL,
						  NULL,
						  NULL,
						  NULL,
						  NULL,
						  0,
						  0,
						  NULL,
						  0,
						  NULL,
						  @V_TP_EVIDENCE

	IF @V_CD_RELATION = '30'                     
    BEGIN                 
        /* FI_TAX 만들기*/   
	    EXEC UP_FI_AUTODOCU_TAX @P_CD_COMPANY, @V_CD_PC, @V_NO_DOCU, @V_NO_DOLINE, @V_AM_SUPPLY, '2', 0, @V_NO_COMPANY
    END

	FETCH NEXT FROM SRC_CURSOR INTO @V_TP_DRCR,
									@V_CD_ACCT,
									@V_NM_NOTE,
									@V_AM_DR,
									@V_AM_CR,
									@V_TP_ACAREA,
									@V_CD_RELATION,
									@V_CD_BANK,
									@V_NM_BANK,
									@V_CD_DEPOSIT,
									@V_NO_DEPOSIT,
									@V_CD_CC,
									@V_NM_CC,
									@V_CD_PJT,
									@V_NM_PJT,
									@V_CD_PARTNER,
									@V_NM_PARTNER,
									@V_NO_EMP,
									@V_NM_EMP,
									@V_AM_SUPPLY,
									@V_FG_TAX,
									@V_NM_TAX,
									@V_NO_COMPANY,
									@V_AM_VAT,
									@V_CD_BIZAREA,
									@V_NM_BIZAREA
END

CLOSE SRC_CURSOR
DEALLOCATE SRC_CURSOR

IF ISNULL(@P_NO_MDOCU, '') = ''
BEGIN
	UPDATE CZ_SA_FORWARD_CHARGE_H
	SET NO_MDOCU = @V_NO_KEY
	WHERE CD_COMPANY = @P_CD_COMPANY
	AND CD_PARTNER = @P_CD_PARTNER
	AND TP_DELIVERY = @P_TP_DELIVERY
	AND DT_MONTH = @P_DT_MONTH	
END

RETURN

ERROR:
    ROLLBACK TRAN
    RAISERROR (@V_ERRMSG, 18, 1)

GO

