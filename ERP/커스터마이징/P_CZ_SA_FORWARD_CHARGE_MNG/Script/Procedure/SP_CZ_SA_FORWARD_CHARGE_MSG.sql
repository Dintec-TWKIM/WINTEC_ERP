USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_FORWARD_CHARGE_MSG]    Script Date: 2017-07-19 오전 9:01:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

                                                        
ALTER PROCEDURE [NEOE].[SP_CZ_SA_FORWARD_CHARGE_MSG]                                                      
(                                                      
	@P_CD_COMPANY	NVARCHAR(7)		
)                                                      
AS
                                                      
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @V_CD_PJT			NVARCHAR(20)
DECLARE @V_NO_EMP			NVARCHAR(20)
DECLARE @V_CONTENTS			NVARCHAR(MAX)
DECLARE @V_CONTENTS1		NVARCHAR(MAX)
DECLARE @V_AM_DR			NUMERIC(19, 4)
DECLARE @V_AM_PROFIT		NUMERIC(19, 4)
DECLARE @V_AM_CHARGE		NUMERIC(19, 4)
DECLARE @V_AM_PO_CHARGE     NUMERIC(19, 4)
DECLARE @V_AM_BOE			NUMERIC(19, 4)

DECLARE @sCOIDs		    NVARCHAR(4000)
DECLARE @sUserIDs	    NVARCHAR(4000)
DECLARE @sUserNMs	    NVARCHAR(1000)
DECLARE @sGrpIDs	    NVARCHAR(4000)

DECLARE @sMsgID		    NVARCHAR(30)

CREATE TABLE #TEMP
(
    CD_PJT			NVARCHAR(20),
    NO_EMP			NVARCHAR(20),
    AM_DR			NUMERIC(19, 4),
	AM_PROFIT		NUMERIC(19, 4),
	AM_CHARGE		NUMERIC(19, 4),
	AM_PO_CHARGE	NUMERIC(19, 4),
	AM_BOE			NUMERIC(19, 4)
)

;WITH A AS
(
	SELECT FC.CD_COMPANY,
           OL.CD_PJT,
           FC.AM_CHARGE
    FROM (SELECT CD_COMPANY, NO_IO,
    		     SUM(ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) AS AM_CHARGE
    	  FROM CZ_SA_FORWARD_CHARGE_L
    	  WHERE (ISNULL(AM_IV, 0) + ISNULL(AM_TAX, 0)) > 0
    	  GROUP BY CD_COMPANY, NO_IO) FC
    JOIN (SELECT OL.CD_COMPANY, OL.NO_IO, OL.CD_PJT,
                 ROW_NUMBER() OVER (PARTITION BY OL.CD_COMPANY, OL.NO_IO ORDER BY SUM(OL.AM_EX) DESC) AS IDX,
                 MAX(OL.NO_ISURCV) AS NO_GIR
          FROM MM_QTIO OL
          GROUP BY OL.CD_COMPANY, OL.NO_IO, OL.CD_PJT) OL
    ON OL.CD_COMPANY = FC.CD_COMPANY AND OL.NO_IO = FC.NO_IO
    LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = OL.CD_COMPANY AND WD.NO_GIR = OL.NO_GIR
    WHERE FC.CD_COMPANY = @P_CD_COMPANY
    AND OL.IDX = 1
    AND (ISNULL(WD.TP_CHARGE, '001') = '001' OR NOT EXISTS (SELECT 1 
    														FROM CZ_SA_GIRH_CHARGE GC
    														WHERE GC.CD_COMPANY = OL.CD_COMPANY
    														AND GC.NO_GIR = OL.NO_GIR
    														AND GC.CD_ITEM = 'SD0001'))
    AND NOT EXISTS (SELECT 1 
    				FROM MM_QTIO OL
    				WHERE OL.CD_COMPANY = FC.CD_COMPANY
    				AND OL.NO_IO = FC.NO_IO
    				AND OL.CD_ITEM = 'SD0001')
    UNION ALL
    SELECT OL.CD_COMPANY,
           OL.CD_PJT,
           (ROUND(GC.AM_EX_CHARGE, 2) * OL.RT_EXCH) AS AM_CHARGE
    FROM CZ_SA_GIRH_CHARGE GC
    JOIN (SELECT OL.CD_COMPANY, OL.NO_IO, OL.CD_PJT,
                 ROW_NUMBER() OVER (PARTITION BY OL.CD_COMPANY, OL.NO_IO ORDER BY SUM(OL.AM_EX) DESC) AS IDX,
                 MAX(OL.RT_EXCH) AS RT_EXCH,
                 MAX(OL.NO_ISURCV) AS NO_GIR
          FROM MM_QTIO OL
          GROUP BY OL.CD_COMPANY, OL.NO_IO, OL.CD_PJT) OL
    ON OL.CD_COMPANY = GC.CD_COMPANY AND OL.NO_GIR = GC.NO_GIR
    LEFT JOIN CZ_SA_GIRH_WORK_DETAIL WD ON WD.CD_COMPANY = GC.CD_COMPANY AND WD.NO_GIR = GC.NO_GIR
    WHERE OL.CD_COMPANY = 'K100'
    AND OL.IDX = 1
    AND ISNULL(WD.TP_CHARGE, '001') = '002'
    AND GC.AM_EX_CHARGE > 0
)
INSERT INTO #TEMP
SELECT FD.CD_PJT,
       (CASE WHEN ME.CD_INCOM = '099' THEN ME1.NO_EMP 
									  ELSE (CASE WHEN SG.CD_CC = '010420' THEN ME1.NO_EMP + '|' + SH.NO_EMP 
																		  ELSE SH.NO_EMP END) END) AS NO_EMP,
       FD.AM_DR,
       (ISNULL(SL.AM_SO, 0) - (ISNULL(PL.AM_PO, 0) + ISNULL(SB.AM_STOCK, 0))) AS AM_PROFIT,
	   ISNULL(A.AM_CHARGE, 0) AS AM_CHARGE,
	   ISNULL(IL.AM_PO_CHARGE, 0) AS AM_PO_CHARGE,
	   ISNULL(IL1.AM_BOE, 0) AS AM_BOE
FROM (SELECT FD.CD_COMPANY,
             FD.CD_PJT,
             SUM(FD.AM_DR) AS AM_DR
      FROM FI_DOCU FD
      WHERE FD.CD_COMPANY = @P_CD_COMPANY
      AND FD.CD_ACCT IN ('58700', '52130')
      AND FD.TP_DRCR = '1'
	  AND FD.CD_PJT NOT LIKE 'CL%'
      GROUP BY FD.CD_COMPANY, FD.CD_PJT
      HAVING MAX(LEFT(FD.DTS_INSERT, 8)) = CONVERT(CHAR(8), DATEADD(DAY, -1, GETDATE()), 112)) FD
JOIN SA_SOH SH ON SH.CD_COMPANY = FD.CD_COMPANY AND SH.NO_SO = FD.CD_PJT
LEFT JOIN MA_EMP ME ON ME.CD_COMPANY = SH.CD_COMPANY AND ME.NO_EMP = SH.NO_EMP
LEFT JOIN MA_SALEGRP SG ON SG.CD_COMPANY = SH.CD_COMPANY AND SG.CD_SALEGRP = SH.CD_SALEGRP
LEFT JOIN MA_EMP ME1 ON ME1.CD_COMPANY = SG.CD_COMPANY AND ME1.CD_CC = SG.CD_CC AND ME1.CD_DUTY_RESP = '400' AND ME1.CD_INCOM <> '099'
LEFT JOIN (SELECT A.CD_COMPANY, A.CD_PJT,
				  SUM(A.AM_CHARGE) AS AM_CHARGE
		   FROM A
		   GROUP BY A.CD_COMPANY, A.CD_PJT) A
ON A.CD_COMPANY = FD.CD_COMPANY AND A.CD_PJT = FD.CD_PJT
LEFT JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
                  SUM(SL.AM_WONAMT) AS AM_SO
           FROM SA_SOL SL
           GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
ON SL.CD_COMPANY = SH.CD_COMPANY AND SL.NO_SO = SH.NO_SO
LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE,
				  ISNULL(SUM(SB.UM_KR * SB.QT_STOCK), 0) AS AM_STOCK
		   FROM CZ_SA_STOCK_BOOK SB
	       GROUP BY SB.CD_COMPANY, SB.NO_FILE) SB
ON SB.CD_COMPANY = FD.CD_COMPANY AND SB.NO_FILE = FD.CD_PJT
LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PJT,
	              ISNULL(SUM(PL.AM), 0) AS AM_PO
	       FROM PU_POH PH
	       JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
	       WHERE PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400')
	       GROUP BY PH.CD_COMPANY, PH.CD_PJT) PL
ON PL.CD_COMPANY = FD.CD_COMPANY AND PL.CD_PJT = FD.CD_PJT
LEFT JOIN (SELECT IL.CD_COMPANY, IL.CD_PJT,
		          SUM(IL.AM_CLS) AS AM_PO_CHARGE
		   FROM PU_IVL IL
		   JOIN MA_PITEM MI ON MI.CD_COMPANY = IL.CD_COMPANY AND MI.CD_PLANT = IL.CD_PLANT AND MI.CD_ITEM = IL.CD_ITEM
		   WHERE MI.CLS_ITEM = '010'
		   AND EXISTS (SELECT 1 
		               FROM FI_DOCU FD
		               WHERE FD.CD_COMPANY = IL.CD_COMPANY
		               AND FD.NO_MDOCU = IL.NO_IV)
		   GROUP BY IL.CD_COMPANY, IL.CD_PJT) IL
ON IL.CD_COMPANY = FD.CD_COMPANY AND IL.CD_PJT = FD.CD_PJT
LEFT JOIN (SELECT IL.CD_COMPANY, IL.CD_PJT,
		          SUM(CASE WHEN IL.YN_RETURN = 'Y' THEN -IL.AM_CLS ELSE IL.AM_CLS END) AS AM_BOE
		   FROM SA_IVL IL
		   WHERE IL.NO_SO <> IL.CD_PJT
		   AND IL.CD_ITEM IN ('SD0001', 'SD0002', 'SD0004')
		   GROUP BY IL.CD_COMPANY, IL.CD_PJT) IL1
ON IL1.CD_COMPANY = FD.CD_COMPANY AND IL1.CD_PJT = FD.CD_PJT
WHERE FD.AM_DR > (ISNULL(SL.AM_SO, 0) - (ISNULL(PL.AM_PO, 0) + ISNULL(SB.AM_STOCK, 0))) + ISNULL(A.AM_CHARGE, 0) + ISNULL(IL.AM_PO_CHARGE, 0) + ISNULL(IL1.AM_BOE, 0)

DECLARE SRC_CURSOR CURSOR FOR
SELECT NO_EMP 
FROM #TEMP
GROUP BY NO_EMP

OPEN SRC_CURSOR
FETCH NEXT FROM SRC_CURSOR INTO @V_NO_EMP

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @V_CONTENTS = ''
	
	DECLARE SRC_CURSOR1 CURSOR FOR
	SELECT CD_PJT,
		   AM_DR,
		   AM_PROFIT,
		   AM_CHARGE,
		   AM_PO_CHARGE,
		   AM_BOE
	FROM #TEMP
	WHERE NO_EMP = @V_NO_EMP
	
	OPEN SRC_CURSOR1
	FETCH NEXT FROM SRC_CURSOR1 INTO @V_CD_PJT, @V_AM_DR, @V_AM_PROFIT, @V_AM_CHARGE, @V_AM_PO_CHARGE, @V_AM_BOE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @V_CONTENTS = @V_CONTENTS + '=== 수주번호 : ' + @V_CD_PJT + ' ===' + CHAR(13) + CHAR(10) + 
						                '- 이윤 : ' + FORMAT(@V_AM_PROFIT, '#,##0') + '원' + CHAR(13) + CHAR(10) +
										'- 청구금액 : ' + FORMAT(@V_AM_CHARGE, '#,##0') + '원' + CHAR(13) + CHAR(10) +
										'- 매입부대비용 : ' + FORMAT(@V_AM_PO_CHARGE, '#,##0') + '원' + CHAR(13) + CHAR(10) +
										'- BOE 발행 : ' + FORMAT(@V_AM_BOE, '#,##0') + '원' + CHAR(13) + CHAR(10) +
						                '- 운송비 : ' + FORMAT(@V_AM_DR, '#,##0') + '원' + CHAR(13) + CHAR(10) +
						                '- 차액 : ' + FORMAT(((@V_AM_PROFIT + @V_AM_CHARGE + @V_AM_PO_CHARGE + @V_AM_BOE) - @V_AM_DR), '#,##0') + '원' + CHAR(13) + CHAR(10) + CHAR(13) + CHAR(10) +
						                '-- 운송비 내역 --' + CHAR(13) + CHAR(10)

		SELECT @V_CONTENTS1 = STRING_AGG('전표번호 : ' + FD.NO_DOCU + CHAR(13) + CHAR(10) +
		                                 '계정명 : ' + (AC.NM_ACCT + '(' + FD.CD_ACCT + ')') + CHAR(13) + CHAR(10) +
		                                 '적요 : ' + FD.NM_NOTE + CHAR(13) + CHAR(10) +
		                                 '금액 : ' + FORMAT(FD.AM_DR, '#,##0') + '원', CHAR(13) + CHAR(10) + CHAR(13) + CHAR(10)) WITHIN GROUP (ORDER BY FD.DTS_INSERT ASC)
		FROM FI_DOCU FD
		LEFT JOIN FI_ACCTCODE AC ON AC.CD_COMPANY = FD.CD_COMPANY AND AC.CD_ACCT = FD.CD_ACCT
		JOIN (SELECT SL.CD_COMPANY, SL.NO_SO,
		             SUM(SL.AM_WONAMT) AS AM_SO
		      FROM SA_SOL SL
		      GROUP BY SL.CD_COMPANY, SL.NO_SO) SL
		ON SL.CD_COMPANY = FD.CD_COMPANY AND SL.NO_SO = FD.CD_PJT
		LEFT JOIN (SELECT SB.CD_COMPANY, SB.NO_FILE,
					      ISNULL(SUM(SB.UM_KR * SB.QT_STOCK), 0) AS AM_STOCK
			       FROM CZ_SA_STOCK_BOOK SB
			       GROUP BY SB.CD_COMPANY, SB.NO_FILE) SB
		ON SB.CD_COMPANY = FD.CD_COMPANY AND SB.NO_FILE = FD.CD_PJT
		LEFT JOIN (SELECT PH.CD_COMPANY, PH.CD_PJT,
			              ISNULL(SUM(PL.AM), 0) AS AM_PO 
			       FROM PU_POH PH
			       JOIN PU_POL PL ON PL.CD_COMPANY = PH.CD_COMPANY AND PL.NO_PO = PH.NO_PO
			       WHERE PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400')
			       GROUP BY PH.CD_COMPANY, PH.CD_PJT) PL
		ON PL.CD_COMPANY = FD.CD_COMPANY AND PL.CD_PJT = FD.CD_PJT
		WHERE FD.CD_COMPANY = @P_CD_COMPANY
		AND FD.CD_ACCT IN ('58700', '52130')
		AND FD.TP_DRCR = '1'
		AND FD.CD_PJT = @V_CD_PJT

		SET @V_CONTENTS = @V_CONTENTS + @V_CONTENTS1 + CHAR(13) + CHAR(10) + CHAR(13) + CHAR(10)
	
		FETCH NEXT FROM SRC_CURSOR1 INTO @V_CD_PJT, @V_AM_DR, @V_AM_PROFIT, @V_AM_CHARGE, @V_AM_PO_CHARGE, @V_AM_BOE
	END

	CLOSE SRC_CURSOR1
	DEALLOCATE SRC_CURSOR1

	SET @V_CONTENTS = '*** 운송비 이윤 초과 알림' + CHAR(13) + CHAR(10) + CHAR(13) + CHAR(10) +
					  @V_CONTENTS +
					  '** 발생 원인 확인 후 회신바랍니다. (회신대상: 이정철JM, 부서장, 팀장)' + CHAR(13) + CHAR(10) +
					  '※ 본 쪽지는 발신전용 입니다.'

    SELECT @sCOIDs = STRING_AGG('1', ','),
		   @sUserIDs = STRING_AGG(user_id, ','),
		   @sUserNMs = STRING_AGG(user_nm_kr, ','),
		   @sGrpIDs = STRING_AGG('2330', ',')
	FROM NeoBizboxS2.BX.TCMG_USER
	WHERE EXISTS (SELECT 1 
				  FROM string_split(@V_NO_EMP, '|') A
				  WHERE A.value = logon_cd)

	EXEC NeoBizboxS2.BX.PMS_MSG_C @nGrpID = 2330,	
								  @nCOID = 1,	
								  @nUserID = 242, -- ERP(관리자)
								  @sBiz_yn = '0',
								  @sRev_yn = '0',
								  @sContent	= @V_CONTENTS,
								  @sTarget_url = '',
								  @sCOIDs = @sCOIDs,	
								  @sUserIDs = @sUserIDs,
								  @sDeptIDs	= '',
								  @sUserNMs	= @sUserNMs,
								  @sDeptNMs	= '',
								  @nEffect = 1073741824,
								  @nHeight = 180,
								  @nOffSet = 0,
								  @nTextclr = 0,
								  @sFaceNM = '맑은 고딕',
								  @nAttachMID = 0,
								  @nAttachDID = 0,
								  @sFileNMs = '',
								  @sFileSZs = '',
								  @sMsgID = @sMsgID,
								  @sInsertINF = 'Y',
								  @sGrpIDs = @sGrpIDs
	
	INSERT INTO CZ_SA_AUTO_MSG_LOG
	(
		CD_COMPANY,
		TP_MSG,
		DC_EMP,
		DC_CONTENTS,
		DTS_INSERT
	)
	VALUES
	(
		@P_CD_COMPANY,
		'SP_CZ_SA_FORWARD_CHARGE_MSG',
		@V_NO_EMP,
		@V_CONTENTS,
		NEOE.SF_SYSDATE(GETDATE())
	)

FETCH NEXT FROM SRC_CURSOR INTO @V_NO_EMP
END

CLOSE SRC_CURSOR
DEALLOCATE SRC_CURSOR

DROP TABLE #TEMP

GO