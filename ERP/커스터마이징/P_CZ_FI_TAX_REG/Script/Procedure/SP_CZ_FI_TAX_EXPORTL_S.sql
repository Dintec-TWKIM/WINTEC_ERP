USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_FI_TAX_EXPORTL_S]    Script Date: 2015-08-11 오전 9:59:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_FI_TAX_EXPORTL_S] 
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_NO_TAX			NVARCHAR(20)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT TX.NO_TO,
	   TX.NO_IV,
	   TX.NO_IO,
	   TX.NO_SO,
	   IH.CD_EXCH AS CD_EXCH_IV,
	   MC.NM_SYSDEF AS NM_EXCH_IV,
	   IH.RT_EXCH AS RT_EXCH_IV,
	   IL.AM_EX_IO,
	   IL.AM_IO,
	   IL.AM_EX_IV,
	   IL.AM_IV,
	   TX.CD_EXCH,
	   MC1.NM_SYSDEF AS NM_EXCH,
	   TX.RT_EXCH,
	   TX.AM_EX,
	   TX.AM
FROM CZ_FI_TAX TX
LEFT JOIN SA_IVH IH ON IH.CD_COMPANY = TX.CD_COMPANY AND IH.NO_IV = TX.NO_IV
LEFT JOIN (SELECT IL.CD_COMPANY, IL.NO_IV, IL.NO_IO, IL.NO_SO,
		   	      SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -IL.AM_EX_CLS ELSE IL.AM_EX_CLS END) AS AM_EX_IV,
		          SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -IL.AM_CLS ELSE IL.AM_CLS END) AS AM_IV,
				  SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -OL.AM_EX ELSE OL.AM_EX END) AS AM_EX_IO,
				  SUM(CASE WHEN ISNULL(IL.YN_RETURN, 'N') = 'Y' THEN -OL.AM ELSE OL.AM END) AS AM_IO
		   FROM SA_IVL IL
		   JOIN MM_QTIO OL ON OL.CD_COMPANY = IL.CD_COMPANY AND OL.NO_IO = IL.NO_IO AND OL.NO_IOLINE = IL.NO_IOLINE AND IL.QT_CLS > 0
		   GROUP BY IL.CD_COMPANY, IL.NO_IV, IL.NO_IO, IL.NO_SO) IL
ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IV = IH.NO_IV AND IL.NO_IO = TX.NO_IO AND IL.NO_SO = TX.NO_SO
LEFT JOIN MA_CODEDTL MC ON MC.CD_COMPANY = IH.CD_COMPANY AND MC.CD_FIELD = 'MA_B000005' AND MC.CD_SYSDEF = IH.CD_EXCH
LEFT JOIN MA_CODEDTL MC1 ON MC1.CD_COMPANY = TX.CD_COMPANY AND MC1.CD_FIELD = 'MA_B000005' AND MC1.CD_SYSDEF = TX.CD_EXCH
WHERE TX.CD_COMPANY = @P_CD_COMPANY
AND TX.NO_TO = @P_NO_TAX

GO