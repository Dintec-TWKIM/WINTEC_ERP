USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_OUTSTANDING_INVOICE_S]    Script Date: 2019-02-26 오후 3:00:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [NEOE].[SP_CZ_SA_OUTSTANDING_INVOICE_S]
(
	@P_CD_COMPANY	NVARCHAR(7)
) 
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #SA_IVH
(
	CD_COMPANY NVARCHAR(7),
	CD_PARTNER NVARCHAR(20),
	DT_PROCESS NVARCHAR(8),
	AM_CLS	   NUMERIC(17, 4),
	AM_BAN	   NUMERIC(17, 4)
)

CREATE NONCLUSTERED INDEX IDX_CZ_SA_IVH ON #SA_IVH (CD_COMPANY, CD_PARTNER, DT_PROCESS)

CREATE TABLE #MA_PARTNER
(
	CD_COMPANY				NVARCHAR(7),
	CD_PARTNER				NVARCHAR(20),
    LN_PARTNER				NVARCHAR(50),
	DT_RCP_PREARRANGED		NVARCHAR(8),
	DT_RCP_PRETOLERANCE		NUMERIC(3, 0),
	DT_TODAY				NVARCHAR(8),
	DT_BEFORE_1MONTH		NVARCHAR(8),
	DT_BEFORE_2MONTH		NVARCHAR(8),
	DT_BEFORE_3MONTH		NVARCHAR(8),
	DT_BEFORE_4MONTH		NVARCHAR(8),
	DT_BEFORE_5MONTH		NVARCHAR(8),
	DT_BEFORE_6MONTH		NVARCHAR(8),
	DT_BEFORE_12MONTH		NVARCHAR(8)
)

CREATE NONCLUSTERED INDEX IDX_MA_PARTNER ON #MA_PARTNER (CD_COMPANY, CD_PARTNER)

CREATE TABLE #NEW_PARTNER
(
	CD_COMPANY NVARCHAR(7),
	CD_PARTNER NVARCHAR(20)
)

CREATE NONCLUSTERED INDEX IDX_NEW_PARTNER ON #NEW_PARTNER (CD_COMPANY, CD_PARTNER)

CREATE TABLE #WARNING_MESSAGE
(
	CD_EWS		NVARCHAR(4),
	DC_MESSAGE	NVARCHAR(500),
	WN_LEVEL	INT
)

CREATE NONCLUSTERED INDEX IDX_WARNING_MESSAGE ON #WARNING_MESSAGE (CD_EWS)

CREATE TABLE #CONDITION
(
	CD_EWS		NVARCHAR(4),
	VALUE		NUMERIC(17, 2)
)

CREATE NONCLUSTERED INDEX IDX_CONDITION ON #CONDITION (CD_EWS)

CREATE TABLE #EWS_PARTNER
(
	CD_COMPANY				NVARCHAR(7),
	CD_PARTNER				NVARCHAR(20),
	YN_OUTSTANDING_MAIL		NVARCHAR(1),
	YN_CHECK_7				NVARCHAR(1)
)

CREATE NONCLUSTERED INDEX EWS_PARTNER ON #EWS_PARTNER (CD_COMPANY, CD_PARTNER)

INSERT INTO #SA_IVH
SELECT IH.CD_COMPANY,
	   IH.CD_PARTNER,
	   IH.DT_PROCESS,
	   (ISNULL(IH.AM_K, 0) + ISNULL(IH.VAT_TAX, 0)) AS AM_CLS,
	   IH.AM_BAN
FROM SA_IVH IH
WHERE IH.CD_COMPANY = @P_CD_COMPANY

INSERT INTO #MA_PARTNER
SELECT IH.CD_COMPANY,
	   IH.CD_PARTNER,
	   MP.LN_PARTNER,
	   MP.DT_RCP_PREARRANGED,
	   MP.DT_RCP_PRETOLERANCE,
	   CONVERT(NVARCHAR(8), DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE()), 112) AS DT_TODAY,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -1, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_1MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -2, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_2MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -3, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_3MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -4, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_4MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -5, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_5MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -6, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_6MONTH,
	   CONVERT(NVARCHAR(8), DATEADD(MONTH, -12, DATEADD(DAY, -MP.DT_RCP_PREARRANGED, GETDATE())), 112) AS DT_BEFORE_12MONTH
FROM (SELECT CD_COMPANY, CD_PARTNER 
	  FROM #SA_IVH
	  GROUP BY CD_COMPANY, CD_PARTNER) IH
JOIN MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
WHERE (MP.CD_CON IS NULL OR MP.CD_CON = '001')

INSERT INTO #NEW_PARTNER
SELECT MP.CD_COMPANY, MP.CD_PARTNER 
FROM (SELECT IH.CD_COMPANY, IH.CD_PARTNER 
	  FROM #SA_IVH IH
	  WHERE IH.CD_COMPANY = @P_CD_COMPANY
	  AND IH.DT_PROCESS BETWEEN CONVERT(NVARCHAR(8), DATEADD(MONTH, -6, GETDATE()), 112) AND CONVERT(NVARCHAR(8), GETDATE(), 112)
	  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) MP
WHERE NOT EXISTS (SELECT 1
				  FROM #SA_IVH IH
				  WHERE IH.CD_COMPANY = MP.CD_COMPANY
				  AND IH.CD_PARTNER = MP.CD_PARTNER
				  AND ((IH.DT_PROCESS >= CONVERT(NVARCHAR(8), DATEADD(MONTH, -12, GETDATE()), 112) AND IH.DT_PROCESS < CONVERT(NVARCHAR(8), DATEADD(MONTH, -6, GETDATE()), 112)) 
				  OR (IH.DT_PROCESS < CONVERT(NVARCHAR(8), DATEADD(MONTH, -12, GETDATE()), 112) AND ISNULL(IH.AM_CLS, 0) > ISNULL(IH.AM_BAN, 0))))

INSERT INTO #WARNING_MESSAGE
SELECT EWS.CD_EWS,
	   (EWS.DC_EWS + CHAR(13) + '(' + EWS.DC_EWS1 + ')') AS DC_MESSAGE,
	   CONVERT(INT, EWS.DC_EWS2) AS WN_LEVEL
FROM CZ_SA_EWS_CONDITION EWS
WHERE EWS.CD_COMPANY = @P_CD_COMPANY
AND EWS.YN_SIMULATION = 'N'
AND EWS.TP_GUBUN = 'M'

INSERT INTO #CONDITION
SELECT CD_EWS,
	   CONVERT(NUMERIC, DC_EWS) AS VALUE 
FROM CZ_SA_EWS_CONDITION EWS
WHERE EWS.CD_COMPANY = @P_CD_COMPANY
AND EWS.YN_SIMULATION = 'N'
AND EWS.TP_GUBUN = 'C'

INSERT INTO #EWS_PARTNER
SELECT CD_COMPANY,
	   CD_PARTNER,
	   YN_OUTSTANDING_MAIL,
	   YN_CHECK_7
FROM CZ_SA_EWS_PARTNER EP
WHERE EP.CD_COMPANY = @P_CD_COMPANY

;WITH SA_IVH1 AS 
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   (CASE WHEN ISNULL(IH.AM_CLS1, 0) = 0 THEN NULL
			   		 			  			    ELSE (ISNULL(IH.AM_CLS1, 0) - ISNULL(IH.AM_RCP1, 0)) / ISNULL(IH.AM_CLS1, 0) * 100 END) AS RT_REMAIN1,
		   (CASE WHEN ISNULL(IH.AM_CLS2, 0) = 0 THEN NULL 
			   		 			  			    ELSE (ISNULL(IH.AM_CLS2, 0) - ISNULL(IH.AM_RCP2, 0)) / ISNULL(IH.AM_CLS2, 0) * 100 END) AS RT_REMAIN2,
		   (CASE WHEN ISNULL(IH.AM_CLS3, 0) = 0 THEN NULL
			   		 			  			    ELSE (ISNULL(IH.AM_CLS3, 0) - ISNULL(IH.AM_RCP3, 0)) / ISNULL(IH.AM_CLS3, 0) * 100 END) AS RT_REMAIN3
	FROM (SELECT IH.CD_COMPANY,
		  	     IH.CD_PARTNER,
		  	     SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_BEFORE_2MONTH THEN IH.AM_CLS ELSE 0 END) AS AM_CLS1,
		  	     SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_BEFORE_1MONTH THEN IH.AM_CLS ELSE 0 END) AS AM_CLS2,
		  	     SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_TODAY THEN IH.AM_CLS ELSE 0 END) AS AM_CLS3,
		  	     SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_BEFORE_2MONTH THEN IH.AM_BAN ELSE 0 END) AS AM_RCP1,
				 SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_BEFORE_1MONTH THEN IH.AM_BAN ELSE 0 END) AS AM_RCP2,
		  	     SUM(CASE WHEN IH.DT_PROCESS <= MP.DT_TODAY THEN IH.AM_BAN ELSE 0 END) AS AM_RCP3
		  FROM #SA_IVH IH
		  JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER 
		  WHERE IH.CD_COMPANY = @P_CD_COMPANY
		  AND IH.DT_PROCESS <= MP.DT_TODAY
		  AND NOT EXISTS (SELECT 1 
					      FROM #NEW_PARTNER
					      WHERE CD_COMPANY = IH.CD_COMPANY
					      AND CD_PARTNER = IH.CD_PARTNER)
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
),
C1 AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
			(CASE WHEN IH.RT_REMAIN_ID_AVG > 0 AND IH.RT_REMAIN_AVG >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '011') THEN '013'
			      WHEN IH.RT_REMAIN_ID_AVG = 0 AND IH.RT_REMAIN_AVG >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '011') THEN '011'
				  WHEN IH.RT_REMAIN_ID_AVG > 0 AND IH.RT_REMAIN_AVG >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '010') THEN '012'
				  WHEN IH.RT_REMAIN_ID_AVG = 0 AND IH.RT_REMAIN_AVG >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '010') THEN '010' END) AS RESULT	  
	FROM (SELECT IH.CD_COMPANY,
		  	     IH.CD_PARTNER,
		  	     IH.RT_REMAIN_AVG,
		  	     IH1.RT_REMAIN_ID_AVG
		  FROM (SELECT IH1.CD_COMPANY,
		  		       IH1.CD_PARTNER,
		  			   AVG(IH1.RT_REMAIN) AS RT_REMAIN_AVG
		        FROM SA_IVH1 IH
		        UNPIVOT (RT_REMAIN FOR TP_REMAIN IN (RT_REMAIN1, RT_REMAIN2, RT_REMAIN3)) AS IH1
		        GROUP BY IH1.CD_COMPANY, IH1.CD_PARTNER) IH
		  LEFT JOIN (SELECT IH1.CD_COMPANY,
		  		   	        IH1.CD_PARTNER,
		  		   	        AVG(IH1.RT_REMAIN_ID) AS RT_REMAIN_ID_AVG
		  		     FROM (SELECT IH.CD_COMPANY,
		  		   		  	      IH.CD_PARTNER,
		  		   		  	      (CASE WHEN IH.RT_REMAIN1 = 0 THEN (IH.RT_REMAIN2 - IH.RT_REMAIN1) ELSE ((IH.RT_REMAIN2 - IH.RT_REMAIN1) / IH.RT_REMAIN1) * 100 END) AS RT_REMAIN_ID1,
		  		   		          (CASE WHEN IH.RT_REMAIN2 = 0 THEN (IH.RT_REMAIN3 - IH.RT_REMAIN2) ELSE ((IH.RT_REMAIN3 - IH.RT_REMAIN2) / IH.RT_REMAIN2) * 100 END) AS RT_REMAIN_ID2
		  		   	       FROM SA_IVH1 IH) IH
		  		           UNPIVOT (RT_REMAIN_ID FOR TP_REMAIN IN (RT_REMAIN_ID1, RT_REMAIN_ID2)) IH1
		  		     GROUP BY IH1.CD_COMPANY, IH1.CD_PARTNER) IH1 
		  ON IH1.CD_COMPANY = IH.CD_COMPANY AND IH1.CD_PARTNER = IH.CD_PARTNER) IH
),
SA_IVH2 AS
(
	SELECT IH.CD_COMPANY, IH.CD_PARTNER,
	       DATEDIFF(DAY, MIN(CASE WHEN ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0 THEN IH.DT_PROCESS ELSE NULL END), MP.DT_TODAY) AS DT_PROGRESS,
		   SUM(CASE WHEN IH.DT_PROCESS >= MP.DT_BEFORE_12MONTH THEN IH.AM_CLS ELSE 0 END) AS AM_IV,
		   SUM(ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0)) AS AM_REMAIN
	FROM #SA_IVH IH
	JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
	WHERE IH.DT_PROCESS <= MP.DT_TODAY
	AND NOT EXISTS (SELECT 1 
					FROM #NEW_PARTNER
					WHERE CD_COMPANY = IH.CD_COMPANY
					AND CD_PARTNER = IH.CD_PARTNER)
	GROUP BY IH.CD_COMPANY, IH.CD_PARTNER, MP.DT_TODAY
	HAVING SUM(ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0)) > 0
),
C2 AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   (CASE WHEN ISNULL(IH.AM_IV, 0) = 0 AND ISNULL(IH.AM_REMAIN, 0) > 0 THEN '024'
				 WHEN ISNULL(IH.AM_IV, 0) > 0 AND (ISNULL(IH.AM_REMAIN, 0) / ISNULL(IH.AM_IV, 0)) * 100 >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '021') AND IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '023') THEN '023'
				 WHEN ISNULL(IH.AM_IV, 0) > 0 AND (ISNULL(IH.AM_REMAIN, 0) / ISNULL(IH.AM_IV, 0)) * 100 >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '021') AND IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '022') THEN '022'
				 WHEN ISNULL(IH.AM_IV, 0) > 0 AND (ISNULL(IH.AM_REMAIN, 0) / ISNULL(IH.AM_IV, 0)) * 100 >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '021') THEN '021'
		         WHEN ISNULL(IH.AM_IV, 0) > 0 AND (ISNULL(IH.AM_REMAIN, 0) / ISNULL(IH.AM_IV, 0)) * 100 >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '020') THEN '020' END) AS RESULT
    FROM SA_IVH2 IH
),
SA_IVH3 AS
(
	SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		   IH.DT_PROGRESS,
		   (CASE WHEN ISNULL(IH.AM_CLS, 0) = 0 THEN 0
		   								       ELSE ISNULL(IH.AM_REMAIN, 0) / ISNULL(IH.AM_CLS, 0) * 100 END) AS RT_AM_REMAIN,
		   (CASE WHEN ISNULL(IH.QT_IV, 0) = 0 THEN 0
		   								      ELSE ISNULL(IH.QT_REMAIN, 0) / ISNULL(IH.QT_IV, 0) * 100 END) AS RT_QT_REMAIN
	FROM (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		  	     AVG(CASE WHEN ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0 THEN DATEDIFF(MONTH, IH.DT_PROCESS, MP.DT_TODAY) ELSE 0 END) AS DT_PROGRESS,
		  	     COUNT(1) AS QT_IV,
		  	     SUM(CASE WHEN ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0 THEN 1 ELSE 0 END) AS QT_REMAIN,
		  	     SUM(IH.AM_CLS) AS AM_CLS,
		  	     SUM(ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0)) AS AM_REMAIN
		  FROM #SA_IVH IH
		  JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
		  WHERE IH.CD_COMPANY = @P_CD_COMPANY
		  AND IH.DT_PROCESS <= MP.DT_TODAY
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
),
C3 AS 
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   (CASE WHEN IH.RT_AM_REMAIN >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '031') AND IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '032') THEN '031'
			     WHEN IH.RT_QT_REMAIN >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '031') AND IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '032') THEN '033'
		   		 WHEN IH.RT_AM_REMAIN >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '030') THEN '030'
				 WHEN IH.RT_QT_REMAIN >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '030') THEN '032' END) AS RESULT 
    FROM SA_IVH3 IH
),
SA_IVH4 AS
(
	SELECT MP.CD_COMPANY,
		   MP.CD_PARTNER,
		   DATEDIFF(DAY, IH.DT_IV, MP.DT_TODAY) AS DT_IV 
	FROM #MA_PARTNER MP
	JOIN (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		  	     MIN(IH.DT_PROCESS) AS DT_IV 
		  FROM #SA_IVH IH
		  WHERE (ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0)) > 0
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
	ON IH.CD_COMPANY = MP.CD_COMPANY AND IH.CD_PARTNER = MP.CD_PARTNER
	WHERE EXISTS (SELECT 1 
				  FROM #SA_IVH IH
				  WHERE IH.CD_COMPANY = MP.CD_COMPANY
				  AND IH.CD_PARTNER = MP.CD_PARTNER
				  AND IH.DT_PROCESS BETWEEN MP.DT_BEFORE_3MONTH AND MP.DT_TODAY)
	AND NOT EXISTS (SELECT 1 
				    FROM SA_RCPH RH
					WHERE RH.CD_COMPANY = MP.CD_COMPANY
					AND RH.CD_PARTNER = MP.CD_PARTNER
					AND RH.DT_RCP >= MP.DT_BEFORE_3MONTH)
),
C4 AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   (CASE WHEN IH.DT_IV >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '041') THEN '041'
				 WHEN IH.DT_IV >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '040') THEN '040' END) AS RESULT 
	FROM SA_IVH4 IH
),
SA_IVH5 AS
(
	SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		   DATEDIFF(MONTH, IH.DT_PROCESS, MP.DT_TODAY) AS DT_PROCESS
	FROM (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
				 MIN(IH.DT_PROCESS) AS DT_PROCESS 
		  FROM #SA_IVH IH
		  WHERE ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
	JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
	WHERE EXISTS (SELECT 1 
			      FROM #NEW_PARTNER
				  WHERE CD_COMPANY = IH.CD_COMPANY
				  AND CD_PARTNER = IH.CD_PARTNER)
),
C5 AS 
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   (CASE WHEN IH.DT_PROCESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '051') THEN '051'
				 WHEN IH.DT_PROCESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '050') THEN '050' END) AS RESULT 
	FROM SA_IVH5 IH
	
),
SA_IVH6 AS
(
	SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		   DATEDIFF(MONTH, IH.DT_PROCESS, MP.DT_TODAY) AS DT_PROGRESS
	FROM (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
				 MIN(IH.DT_PROCESS) AS DT_PROCESS 
		  FROM #SA_IVH IH
		  WHERE ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
	JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
),
C6 AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   IH.DT_PROGRESS,
		   (CASE WHEN IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '061') THEN '061'
				 WHEN IH.DT_PROGRESS >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '060') THEN '060' END) AS RESULT 
	FROM SA_IVH6 IH
	WHERE (IH.CD_COMPANY <> 'K100' OR IH.CD_PARTNER NOT IN ('02574',
															'00878',
															'03489',
															'01309',
															'05004',
															'09677',
															'01214',
															'01465',
															'03097',
															'02945',
															'02064',
															'00840',
															'04912',
															'09560',
															'07826',
															'00879'))
),
SA_IVH7 AS
(
	SELECT IH.CD_COMPANY, IH.CD_PARTNER,
		   DATEDIFF(DAY, IH.DT_PROCESS, GETDATE()) AS DT_PROGRESS,
		   MP.DT_RCP_PREARRANGED,
		   MP.DT_RCP_PRETOLERANCE
	FROM (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
				 MIN(IH.DT_PROCESS) AS DT_PROCESS 
		  FROM #SA_IVH IH
		  WHERE ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0) > 0
		  GROUP BY IH.CD_COMPANY, IH.CD_PARTNER) IH
	JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
	WHERE EXISTS (SELECT 1 
				  FROM #EWS_PARTNER EP
				  WHERE EP.CD_COMPANY = IH.CD_COMPANY
				  AND EP.CD_PARTNER = IH.CD_PARTNER
				  AND ISNULL(EP.YN_CHECK_7, 'N') = 'Y')
),
C7 AS
(
	SELECT IH.CD_COMPANY,
		   IH.CD_PARTNER,
		   IH.DT_PROGRESS,
		   IH.DT_RCP_PRETOLERANCE,
		   (CASE WHEN (IH.DT_PROGRESS - (ISNULL(IH.DT_RCP_PREARRANGED, 0) + ISNULL(IH.DT_RCP_PRETOLERANCE, 0))) >= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '071') THEN '071'
				 WHEN ABS(IH.DT_PROGRESS - (ISNULL(IH.DT_RCP_PREARRANGED, 0) + ISNULL(IH.DT_RCP_PRETOLERANCE, 0))) <= (SELECT VALUE FROM #CONDITION WHERE CD_EWS = '070') THEN '070' END) AS RESULT
	FROM SA_IVH7 IH
),
RE AS
(
	SELECT MP.CD_COMPANY,
		   MP.CD_PARTNER,
		   (SELECT RESULT FROM C1 WHERE C1.CD_COMPANY = MP.CD_COMPANY AND C1.CD_PARTNER = MP.CD_PARTNER) AS C1,
		   (SELECT RESULT FROM C2 WHERE C2.CD_COMPANY = MP.CD_COMPANY AND C2.CD_PARTNER = MP.CD_PARTNER) AS C2,
		   (SELECT RESULT FROM C3 WHERE C3.CD_COMPANY = MP.CD_COMPANY AND C3.CD_PARTNER = MP.CD_PARTNER) AS C3,
		   (SELECT RESULT FROM C4 WHERE C4.CD_COMPANY = MP.CD_COMPANY AND C4.CD_PARTNER = MP.CD_PARTNER) AS C4,
		   (SELECT RESULT FROM C5 WHERE C5.CD_COMPANY = MP.CD_COMPANY AND C5.CD_PARTNER = MP.CD_PARTNER) AS C5,
		   (SELECT RESULT FROM C6 WHERE C6.CD_COMPANY = MP.CD_COMPANY AND C6.CD_PARTNER = MP.CD_PARTNER AND C6.CD_COMPANY != 'K200') AS C6,
		   (SELECT RESULT FROM C7 WHERE C7.CD_COMPANY = MP.CD_COMPANY AND C7.CD_PARTNER = MP.CD_PARTNER AND C7.CD_COMPANY != 'K200') AS C7
	FROM #MA_PARTNER MP
)
SELECT RE.CD_COMPANY,
	   RE.CD_PARTNER, 
	   IH.LN_PARTNER,
	   IH.DT_TODAY,
	   RE.WN_LEVEL
FROM (SELECT RE.CD_COMPANY,
			 RE.CD_PARTNER,
			 (SELECT ISNULL(MAX(A.WN_LEVEL), 0) 
		      FROM (SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C1
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C2
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C3
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C4
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C5
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C6
					UNION ALL
					SELECT WN_LEVEL FROM #WARNING_MESSAGE WHERE CD_EWS = RE.C7) A) AS WN_LEVEL 
	  FROM RE) RE
LEFT JOIN (SELECT IH.CD_COMPANY, IH.CD_PARTNER,
			      MP.LN_PARTNER,
				  MP.DT_TODAY,
			      SUM(CASE WHEN IH.DT_PROCESS < MP.DT_TODAY THEN (ISNULL(IH.AM_CLS, 0) - ISNULL(IH.AM_BAN, 0)) ELSE NULL END) AS AM_END
		   FROM #SA_IVH IH
		   LEFT JOIN #MA_PARTNER MP ON MP.CD_COMPANY = IH.CD_COMPANY AND MP.CD_PARTNER = IH.CD_PARTNER
		   GROUP BY IH.CD_COMPANY, IH.CD_PARTNER, MP.LN_PARTNER, MP.DT_TODAY) IH
ON IH.CD_COMPANY = RE.CD_COMPANY AND IH.CD_PARTNER = RE.CD_PARTNER
LEFT JOIN #EWS_PARTNER EP ON EP.CD_COMPANY = RE.CD_COMPANY AND EP.CD_PARTNER = RE.CD_PARTNER
WHERE (RE.WN_LEVEL IN (1, 2) OR ISNULL(EP.YN_OUTSTANDING_MAIL, 'N') = 'Y')
AND NOT EXISTS (SELECT 1 
			    FROM CZ_SA_EWS_EXCEPT_PARTNER EP
			    WHERE EP.CD_COMPANY = RE.CD_COMPANY
				AND EP.CD_PARTNER = RE.CD_PARTNER
				AND ISNULL(EP.YN_PAY, 'N') = 'N'
		        AND ((ISNULL(EP.DT_EXPIRE, '') <> '' AND EP.DT_EXPIRE >= CONVERT(VARCHAR(8), GETDATE(), 112)) OR
				     ISNULL(EP.AM_LIMIT, 0) >= ISNULL(IH.AM_END, 0)))

DROP TABLE #SA_IVH
DROP TABLE #MA_PARTNER
DROP TABLE #NEW_PARTNER
DROP TABLE #WARNING_MESSAGE
DROP TABLE #CONDITION
DROP TABLE #EWS_PARTNER

GO