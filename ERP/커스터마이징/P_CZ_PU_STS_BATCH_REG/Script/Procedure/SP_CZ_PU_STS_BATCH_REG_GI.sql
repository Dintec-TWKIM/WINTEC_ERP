USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_PU_STS_BATCH_REG_GI]    Script Date: 2017-05-24 오전 9:36:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/*******************************************          
**  System    : 구매/자재  
**  Sub System   : 출고관리  
**  Page    : 계정대체출고일괄등록 , 공장이동일괄등록
**  Desc    : 수불 헤더 저장        
**           P_PU_CGI_BATCH_REG,P_PU_STS_BATCH_REG
**  Return Values          
**          
**  작    성    자  :           
**  작    성    일  :           
**  수    정    자  : 허성철          
*********************************************          
** Change History          
*********************************************          
*********************************************/          
ALTER PROCEDURE [NEOE].[SP_CZ_PU_STS_BATCH_REG_GI]          
(
	@P_CD_COMPANY		NVARCHAR(7),
	@P_CD_BIZAREA		NVARCHAR(7),
	@P_NO_GIREQ			NVARCHAR(20),
	@P_NO_EMP			NVARCHAR(10),
	@P_CD_DEPT			NVARCHAR(12),
	@P_ID_INSERT		NVARCHAR(15)
)           
AS

DECLARE @V_ERRMSG   VARCHAR(255),   -- ERROR 메시지
		@V_NO_KEY	NVARCHAR(20)   

BEGIN TRAN SP_CZ_PU_STS_BATCH_REG_GI
BEGIN TRY

DECLARE @V_NO_IO	NVARCHAR(20)
DECLARE @V_YYYYMM	NVARCHAR(6)
DECLARE @V_NM_USER	NVARCHAR(40)

IF EXISTS (SELECT 1 
		   FROM MM_GIREQL QL
		   WHERE QL.CD_COMPANY = @P_CD_COMPANY
		   AND QL.NO_GIREQ = @P_NO_GIREQ
		   AND ISNULL(QL.QT_GI, 0) > 0)
BEGIN
	SELECT @V_ERRMSG = '이미 재고 출고 처리된 건이 포함되어 있습니다.'                     
	GOTO ERROR	
END

SET @V_YYYYMM = SUBSTRING(CONVERT(CHAR(8), GETDATE(), 112), 1, 6)
EXEC CP_GETNO @P_CD_COMPANY, 'PU', '12', @V_YYYYMM, @V_NO_IO OUTPUT

INSERT INTO MM_QTIOH        
(
	CD_COMPANY,
	NO_IO,
	CD_PLANT,
	CD_PARTNER,
	FG_TRANS,        
	DT_IO,
	CD_DEPT,
	NO_EMP,
	DC_RMK,
	YN_RETURN,        
	ID_INSERT,
	DTS_INSERT        
)        
SELECT QH.CD_COMPANY,
	   @V_NO_IO,
	   QH.CD_PLANT,
	   QH.CD_PARTNER,
	   NULL AS FG_TRANS,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   @P_CD_DEPT,
	   @P_NO_EMP,
	   NULL,
	   'N' AS YN_RETURN,
	   @P_ID_INSERT,
	   NEOE.SF_SYSDATE(GETDATE()) 
FROM MM_GIREQH QH
WHERE QH.CD_COMPANY = @P_CD_COMPANY
AND QH.NO_GIREQ = @P_NO_GIREQ

INSERT INTO MM_QTIO
(
	CD_COMPANY,
	NO_IO,
	NO_IOLINE,
	CD_PLANT,
	CD_BIZAREA,
	CD_SL,
	DT_IO,
	NO_ISURCV,
	NO_ISURCVLINE,
	NO_PSO_MGMT,
	NO_PSOLINE_MGMT,
	FG_PS,
	FG_IO,
	CD_QTIOTP,
	FG_TRANS,
	CD_ITEM,
	QT_IO,
	QT_REJECT_INV,
	QT_GOOD_INV,
	CD_EXCH,
	RT_EXCH,
	UM_EX,
	UM,
	NO_EMP,
	NO_IO_MGMT,
	NO_IOLINE_MGMT,
	CD_PLANT_RCV,
	CD_SL_REF,
	QT_UNIT_MM,
	TP_UM_TAX,
	CD_PJT
)
SELECT QL.CD_COMPANY,
	   @V_NO_IO,
	   (QL.NO_LINE * 2 - 1) AS NO_IOLINE,
	   QL.CD_PLANT,
	   @P_CD_BIZAREA,
	   QL.CD_SL,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   QL.NO_GIREQ AS NO_ISURCV,
	   QL.NO_LINE AS NO_ISURCVLINE,
	   QL.NO_SO AS NO_PSO_MGMT,
	   QL.SEQ_SO AS NO_PSOLINE_MGMT,
	   '2' AS FG_PS,
	   '022' AS FG_IO,
	   QH.FG_GIREQ AS CD_QTIOTP,
	   '001' AS FG_TRANS,
	   QL.CD_ITEM,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_IO,
	   0 AS QT_REJECT_INV,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_GOOD_INV,
	   QL.CD_EXCH,
	   QL.RT_EXCH,
	   QL.UM_EX,
	   QL.UM,
	   @P_NO_EMP AS NO_EMP,
	   QL.NO_GIREQ,
	   QL.NO_LINE,
	   QL.CD_PLANT,
	   QL.CD_GRSL,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_UNIT_PO,
	   '002' AS TP_UM_TAX,
	   QL.CD_PJT
FROM MM_GIREQL QL
LEFT JOIN MM_GIREQH QH ON QH.CD_COMPANY = QL.CD_COMPANY AND QH.NO_GIREQ = QL.NO_GIREQ
WHERE QL.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_GIREQ = @P_NO_GIREQ
AND QL.QT_GIREQ > QL.QT_GI
UNION ALL
SELECT QL.CD_COMPANY,
	   @V_NO_IO,
	   (QL.NO_LINE * 2) AS NO_IOLINE,
	   QL.CD_PLANT,
	   @P_CD_BIZAREA,
	   QL.CD_GRSL,
	   CONVERT(CHAR(8), GETDATE(), 112) AS DT_IO,
	   QL.NO_GIREQ AS NO_ISURCV,
	   QL.NO_LINE AS NO_ISURCVLINE,
	   QL.NO_SO AS NO_PSO_MGMT,
	   QL.SEQ_SO AS NO_PSOLINE_MGMT,
	   '1' AS FG_PS,
	   '022' AS FG_IO,
	   QH.FG_GIREQ AS CD_QTIOTP,
	   '001' AS FG_TRANS,
	   QL.CD_ITEM,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_IO,
	   0 AS QT_REJECT_INV,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_GOOD_INV,
	   QL.CD_EXCH,
	   QL.RT_EXCH,
	   QL.UM_EX,
	   QL.UM,
	   @P_NO_EMP AS NO_EMP,
	   NULL AS NO_IO_MGMT,
	   0 AS NO_IOLINE_MGMT,
	   QL.CD_PLANT,
	   QL.CD_SL,
	   (ISNULL(QL.QT_GIREQ, 0) - ISNULL(QL.QT_GI, 0)) AS QT_UNIT_PO,
	   '002' AS TP_UM_TAX,
	   QL.CD_PJT
FROM MM_GIREQL QL
LEFT JOIN MM_GIREQH QH ON QH.CD_COMPANY = QL.CD_COMPANY AND QH.NO_GIREQ = QL.NO_GIREQ
WHERE QL.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_GIREQ = @P_NO_GIREQ
AND QL.QT_GIREQ > QL.QT_GI

UPDATE SB 
SET SB.QT_GI = (ISNULL(GL.QT_GIR_STOCK_OLD, 0) + ISNULL(QL.QT_GI, 0))
FROM CZ_SA_STOCK_BOOK SB
LEFT JOIN (SELECT GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO,
				 SUM(CASE WHEN GL.YN_GI_STOCK = 'Y' THEN GL.QT_GIR_STOCK ELSE 0 END) AS QT_GIR_STOCK_OLD 
           FROM SA_GIRL GL
           WHERE GL.QT_GIR_STOCK > 0
		   AND GL.QT_GI > 0
           GROUP BY GL.CD_COMPANY, GL.NO_SO, GL.SEQ_SO) GL
ON GL.CD_COMPANY = SB.CD_COMPANY AND GL.NO_SO = SB.NO_FILE AND GL.SEQ_SO = SB.NO_LINE
LEFT JOIN (SELECT CD_COMPANY, NO_SO, SEQ_SO, 
				  SUM(QT_GI) AS QT_GI
		   FROM MM_GIREQL
		   WHERE CD_SL = 'SL02'
		   AND CD_GRSL = 'SL03'
		   AND QT_GI > 0
		   GROUP BY CD_COMPANY, NO_SO, SEQ_SO) QL
ON QL.CD_COMPANY = SB.CD_COMPANY AND QL.NO_SO = SB.NO_FILE AND QL.SEQ_SO = SB.NO_LINE
WHERE SB.CD_COMPANY = @P_CD_COMPANY
AND EXISTS (SELECT 1 
			FROM MM_QTIO OL
			WHERE OL.CD_COMPANY = SB.CD_COMPANY
			AND OL.NO_IO = @V_NO_IO
			AND OL.NO_PSO_MGMT = SB.NO_FILE
			AND OL.NO_PSOLINE_MGMT = SB.NO_LINE)

COMMIT TRAN SP_CZ_PU_STS_BATCH_REG_GI

END TRY
BEGIN CATCH
	ROLLBACK TRAN SP_CZ_PU_STS_BATCH_REG_GI
	SELECT @V_ERRMSG = ERROR_MESSAGE()
	GOTO ERROR
END CATCH

RETURN
ERROR: 
RAISERROR(@V_ERRMSG, 16, 1)
ROLLBACK TRAN SP_CZ_PU_STS_BATCH_REG_GI


GO

