USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_SA_OUTSTANDING_INV_RPT_CHART_S]    Script Date: 2017-12-08 오전 8:56:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





ALTER PROCEDURE [NEOE].[SP_CZ_SA_OUTSTANDING_INV_RPT_CHART_S]          
(  
	@P_CD_COMPANY		NVARCHAR(7),
	@P_CD_PARTNER		NVARCHAR(20),
	@P_DT_MONTH			NVARCHAR(6)
)  
AS
   
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT DT.DT_MONTH,
	   ISNULL(SUM(IH.AM_IV), 0) AS AM_IV,
	   ISNULL(SUM(IH.AM_RCP), 0) AS AM_RCP,
	   SUM(ISNULL(IH.AM_IV, 0) - ISNULL(IH.AM_RCP, 0)) AS AM_REMAIN,
	   ISNULL(SUM(CASE WHEN IH.DT_MONTH = DT.DT_MONTH THEN IH.AM_IV ELSE 0 END), 0) AS AM_IV_MONTH,
	   ISNULL(SUM(CASE WHEN IH.DT_MONTH = DT.DT_MONTH THEN IH.AM_RCP ELSE 0 END), 0) AS AM_RCP_MONTH,
	   SUM(CASE WHEN IH.DT_MONTH < DT.DT_MONTH THEN ISNULL(IH.AM_IV, 0) - ISNULL(IH.AM_RCP, 0) ELSE 0 END) AS AM_REMAIN_BEFORE,
	   ROUND(CASE WHEN (SUM(CASE WHEN IH.DT_MONTH < DT.DT_MONTH THEN ISNULL(IH.AM_IV, 0) - ISNULL(IH.AM_RCP, 0) ELSE 0 END) + 
						ISNULL(SUM(CASE WHEN IH.DT_MONTH = DT.DT_MONTH THEN IH.AM_IV ELSE 0 END), 0)) =  0 THEN 0 
																										   ELSE(ISNULL(SUM(CASE WHEN IH.DT_MONTH = DT.DT_MONTH THEN IH.AM_RCP ELSE 0 END), 0) / 
																											    (SUM(CASE WHEN IH.DT_MONTH < DT.DT_MONTH THEN ISNULL(IH.AM_IV, 0) - ISNULL(IH.AM_RCP, 0) ELSE 0 END) + 
																												 ISNULL(SUM(CASE WHEN IH.DT_MONTH = DT.DT_MONTH THEN IH.AM_IV ELSE 0 END), 0))) * 100 END, 2) AS RT_RETURN
FROM (SELECT CD_COMPANY,
			 CD_PARTNER, 
	     	 LEFT(DT_PROCESS, 6) AS DT_MONTH 
	  FROM SA_IVH
	  GROUP BY CD_COMPANY, CD_PARTNER, LEFT(DT_PROCESS, 6)
	  UNION
	  SELECT CD_COMPANY,
			 CD_PARTNER, 
	     	 LEFT(DT_RCP, 6) AS DT_MONTH 
	  FROM SA_RCPH
	  GROUP BY CD_COMPANY, CD_PARTNER, LEFT(DT_RCP, 6)) DT
LEFT JOIN (SELECT IH.CD_COMPANY, 
				  IH.CD_PARTNER,
				  LEFT(IH.DT_PROCESS, 6) AS DT_MONTH,
				  SUM(ISNULL(IH.AM_K, 0) + ISNULL(IH.VAT_TAX, 0)) AS AM_IV,
				  0 AS AM_RCP
		   FROM SA_IVH IH
		   GROUP BY IH.CD_COMPANY, IH.CD_PARTNER, LEFT(IH.DT_PROCESS, 6)
		   UNION ALL
		   SELECT RH.CD_COMPANY,
				  RH.CD_PARTNER,
		          LEFT(RH.DT_RCP, 6) AS DT_MONTH,
				  0 AS AM_IV,
		          SUM(RD.AM_RCP) AS AM_RCP
		   FROM SA_RCPH RH
		   LEFT JOIN (SELECT RD.CD_COMPANY, RD.NO_RCP,
  		     				 (ISNULL(RD.AM_RCP_TX, 0) + ISNULL(RD.AM_PL, 0)) AS AM_RCP
		   			  FROM SA_RCPD RD 
		   			  UNION ALL
		   			  SELECT BD.CD_COMPANY, BD.NO_RCP,
  		     				 (ISNULL(BD.AM_RCPS, 0) + ISNULL(BD.AM_PL, 0)) AS AM_RCP
		   			  FROM SA_BILLSD BD) RD
		   ON RD.CD_COMPANY = RH.CD_COMPANY AND RD.NO_RCP = RH.NO_RCP
		   GROUP BY RH.CD_COMPANY, RH.CD_PARTNER, LEFT(RH.DT_RCP, 6)) IH
ON IH.CD_COMPANY = DT.CD_COMPANY AND IH.CD_PARTNER = DT.CD_PARTNER AND IH.DT_MONTH <= DT.DT_MONTH
WHERE DT.CD_COMPANY = @P_CD_COMPANY
AND DT.CD_PARTNER = @P_CD_PARTNER
AND DT.DT_MONTH <= @P_DT_MONTH
GROUP BY DT.DT_MONTH
ORDER BY DT.DT_MONTH

GO