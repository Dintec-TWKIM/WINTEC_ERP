<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1KQtBSlKXSrTmK50pjatKUxfelOGBgQAOw==
</value>
  </data>
</root>