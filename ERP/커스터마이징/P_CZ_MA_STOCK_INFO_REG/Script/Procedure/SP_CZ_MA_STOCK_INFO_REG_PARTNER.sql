USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[PS_CZ_MA_SOURCING_REG_PARTNER]    Script Date: 2019-04-29 오후 5:36:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [NEOE].[SP_CZ_MA_STOCK_INFO_REG_PARTNER]
(
	@P_CD_COMPANY		NVARCHAR(7), 
	@P_NO_DRAWING		NVARCHAR(20),
	@P_CD_SPEC			NVARCHAR(20), 
	@P_CD_PARTNER		NVARCHAR(20), 
	@P_CD_ITEM		    NVARCHAR(20), 
	@P_NM_ITEM		    NVARCHAR(50),
	@P_NO_PO			NVARCHAR(20),
	@P_TP_DATE			NVARCHAR(3),
	@P_DT_START			NVARCHAR(8),
	@P_DT_END			NVARCHAR(8),
	@P_QT_QTN_FROM		NUMERIC(5, 0),
	@P_QT_QTN_TO		NUMERIC(5, 0),
	@P_TP_PO			NVARCHAR(3),
	@P_YN_STOCK			NVARCHAR(1),
	@P_YN_INV			NVARCHAR(1),
	@P_YN_PACK			NVARCHAR(1),
	@P_CD_ITEM_MULTI	NVARCHAR(4000)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

CREATE TABLE #추가정보
(
	CD_COMPANY		NVARCHAR(7),
	NO_KEY	     	NVARCHAR(200),
	DT_IO			NVARCHAR(8),
	NO_PO			NVARCHAR(20),
	NO_LINE			NUMERIC(5, 0),
	CD_ITEM			NVARCHAR(20),
	NM_ITEM			NVARCHAR(200),
	CLS_ITEM		NVARCHAR(3),
	CD_ITEM_PARTNER	NVARCHAR(50),
	NM_ITEM_PARTNER NVARCHAR(1000),
	QT_INV			NUMERIC,
	YN_PACK			NVARCHAR(1)
)

CREATE NONCLUSTERED INDEX NO_KEY ON #추가정보 (CD_COMPANY, NO_KEY);

WITH A AS
(
	SELECT IH.CD_COMPANY,
		   (CASE WHEN QL.CD_COMPANY IS NULL THEN MI.NO_STND ELSE QL.NO_DRAWING END) NO_DRAWING,
		   (CASE WHEN QL.CD_COMPANY IS NULL THEN MI.STND_DETAIL_ITEM ELSE QL.CD_SPEC END) CD_SPEC,
		   IH.DT_IO,
		   PL.NO_PO,
		   PL.NO_LINE,
		   PL.CD_ITEM,
		   MI.NM_ITEM,
		   MI.CLS_ITEM,
		   MI.CD_PARTNER1,
		   MI.CD_PARTNER2,
		   QL.CD_ITEM_PARTNER,
		   QL.NM_ITEM_PARTNER,
		   (ISNULL(ML.QT_OPEN, 0) + ISNULL(OM.QT_MONTH, 0)) AS QT_INV,
		   (CASE WHEN EXISTS (SELECT 1 
							  FROM CZ_SA_PACKL PK 
							  WHERE PK.CD_COMPANY = QL.CD_COMPANY
							  AND PK.NO_FILE = QL.NO_FILE
							  AND PK.NO_QTLINE = QL.NO_LINE) THEN 'Y' ELSE 'N' END) AS YN_PACK
	FROM MM_QTIOH IH
	JOIN MM_QTIO IL ON IL.CD_COMPANY = IH.CD_COMPANY AND IL.NO_IO = IH.NO_IO
	JOIN PU_POL PL ON PL.CD_COMPANY = IL.CD_COMPANY AND PL.NO_PO = IL.NO_PSO_MGMT AND PL.NO_LINE = IL.NO_PSOLINE_MGMT
	JOIN MA_PITEM MI ON MI.CD_COMPANY = PL.CD_COMPANY AND MI.CD_PLANT = PL.CD_PLANT AND MI.CD_ITEM = PL.CD_ITEM
	LEFT JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = PL.CD_COMPANY AND QL.NO_FILE = PL.NO_SO AND QL.NO_LINE = PL.NO_LINE
	LEFT JOIN (SELECT OL.CD_COMPANY, OL.CD_ITEM,
		  	   	      SUM(ISNULL(OL.QT_GOOD_INV, 0) + ISNULL(OL.QT_REJECT_INV, 0) + ISNULL(OL.QT_INSP_INV, 0) + ISNULL(OL.QT_TRANS_INV, 0)) AS QT_OPEN
		  	   FROM MM_OPENQTL OL
		  	   WHERE OL.YM_STANDARD = CONVERT(NVARCHAR, YEAR(GETDATE())) + '00'
			   AND OL.CD_SL IN ('SL01', 'SL02')
		  	   GROUP BY OL.CD_COMPANY, OL.CD_ITEM) ML
	ON ML.CD_COMPANY = MI.CD_COMPANY AND ML.CD_ITEM = MI.CD_ITEM
	LEFT JOIN (SELECT CD_COMPANY, CD_ITEM,
			   		  SUM(ISNULL(QT_GOOD_GR, 0) - ISNULL(QT_GOOD_GI, 0)) AS QT_MONTH 
			   FROM MM_OHSLINVM
			   WHERE YY_INV = YEAR(GETDATE())
			   AND CD_SL IN ('SL01', 'SL02')
			   GROUP BY CD_COMPANY, CD_ITEM) OM
	ON OM.CD_COMPANY = MI.CD_COMPANY AND OM.CD_ITEM = MI.CD_ITEM
	WHERE IH.CD_COMPANY = @P_CD_COMPANY
	AND (@P_TP_DATE <> '001' OR (IH.DT_IO BETWEEN @P_DT_START AND @P_DT_END))
	AND (ISNULL(@P_CD_ITEM, '') = '' OR PL.CD_ITEM LIKE @P_CD_ITEM + '%')
	AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR PL.CD_ITEM IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ITEM_MULTI)))
    AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM LIKE '%' + @P_NM_ITEM + '%')
	AND (ISNULL(@P_NO_PO, '') = '' OR PL.NO_PO LIKE @P_NO_PO + '%')
	AND (ISNULL(@P_TP_PO, '') = '' OR
	     (@P_TP_PO = '001' AND EXISTS (SELECT 1 
									   FROM PU_POH PH
									   WHERE PH.CD_COMPANY = IL.CD_COMPANY
									   AND PH.NO_PO = IL.NO_PSO_MGMT
									   AND PH.CD_TPPO IN ('1300', '1400', '2300', '2400'))) OR
		 (@P_TP_PO = '002' AND EXISTS (SELECT 1 
									   FROM PU_POH PH
									   WHERE PH.CD_COMPANY = IL.CD_COMPANY
									   AND PH.NO_PO = IL.NO_PSO_MGMT
									   AND PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400'))))
),
B1 AS
(
	SELECT A.CD_COMPANY,
		   A.NO_DRAWING,
		   A.DT_IO,
		   A.NO_PO,
		   A.NO_LINE,
		   A.CD_ITEM,
		   A.NM_ITEM,
		   A.CLS_ITEM,
		   A.CD_ITEM_PARTNER,
		   A.NM_ITEM_PARTNER,
		   A.QT_INV,
		   A.YN_PACK,
		   ROW_NUMBER() OVER (PARTITION BY A.CD_COMPANY, A.NO_DRAWING ORDER BY A.DT_IO DESC) AS IDX 
	FROM A
	WHERE A.NO_DRAWING IS NOT NULL
	AND A.NO_DRAWING <> ''
	AND	(ISNULL(@P_NO_DRAWING, '') = '' OR A.NO_DRAWING LIKE @P_NO_DRAWING + '%')
	AND ISNULL(@P_CD_SPEC, '') = ''
	AND (ISNULL(@P_YN_INV, 'N') = 'N' OR A.QT_INV > 0)
	AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR A.YN_PACK = 'N')
),
B2 AS
(
	SELECT A.CD_COMPANY,
		   A.CD_SPEC,
		   A.DT_IO,
		   A.NO_PO,
		   A.NO_LINE,
		   A.CD_ITEM,
		   A.NM_ITEM,
		   A.CLS_ITEM,
		   A.CD_ITEM_PARTNER,
		   A.NM_ITEM_PARTNER,
		   A.QT_INV,
		   A.YN_PACK,
		   ROW_NUMBER() OVER (PARTITION BY A.CD_COMPANY, A.CD_SPEC ORDER BY A.DT_IO DESC) AS IDX 
	FROM A
	WHERE A.CD_SPEC IS NOT NULL
	AND A.CD_SPEC <> ''
	AND ISNULL(@P_NO_DRAWING, '') = ''
	AND	(ISNULL(@P_CD_SPEC, '') = '' OR A.CD_SPEC LIKE @P_CD_SPEC + '%')
	AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR A.YN_PACK = 'N')
),
B3 AS
(
	SELECT A.CD_COMPANY,
		   A.DT_IO,
		   A.NO_PO,
		   A.NO_LINE,
		   A.CD_ITEM,
		   A.NM_ITEM,
		   A.CLS_ITEM,
		   A.CD_ITEM_PARTNER,
		   A.NM_ITEM_PARTNER,
		   A.QT_INV,
		   A.YN_PACK,
		   ROW_NUMBER() OVER (PARTITION BY A.CD_COMPANY, A.CD_ITEM ORDER BY A.DT_IO DESC) AS IDX 
	FROM A
    WHERE A.CLS_ITEM = '009'
	AND (A.CD_PARTNER1 IS NOT NULL OR A.CD_PARTNER2 IS NOT NULL)
	AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR A.YN_PACK = 'N')
)
INSERT INTO #추가정보
(
	CD_COMPANY,
	NO_KEY,
	DT_IO,
	NO_PO,
	NO_LINE,
	CD_ITEM,
	NM_ITEM,
	CLS_ITEM,
	CD_ITEM_PARTNER,
	NM_ITEM_PARTNER,
	QT_INV,
	YN_PACK
)
SELECT B1.CD_COMPANY,
	   B1.NO_DRAWING AS NO_KEY,
	   B1.DT_IO,
	   B1.NO_PO,
	   B1.NO_LINE,
	   B1.CD_ITEM,
	   B1.NM_ITEM,
	   B1.CLS_ITEM,
	   B1.CD_ITEM_PARTNER,
	   B1.NM_ITEM_PARTNER,
	   B1.QT_INV,
	   B1.YN_PACK
FROM B1
WHERE IDX = 1
UNION ALL
SELECT B2.CD_COMPANY,
	   B2.CD_SPEC AS NO_KEY,
	   B2.DT_IO,
	   B2.NO_PO,
	   B2.NO_LINE,
	   B2.CD_ITEM,
	   B2.NM_ITEM,
	   B2.CLS_ITEM,
	   B2.CD_ITEM_PARTNER,
	   B2.NM_ITEM_PARTNER,
	   B2.QT_INV,
	   B2.YN_PACK
FROM B2
WHERE IDX = 1
UNION ALL
SELECT B3.CD_COMPANY,
	   B3.CD_ITEM AS NO_KEY,
	   B3.DT_IO,
	   B3.NO_PO,
	   B3.NO_LINE,
	   B3.CD_ITEM,
	   B3.NM_ITEM,
	   B3.CLS_ITEM,
	   B3.CD_ITEM_PARTNER,
	   B3.NM_ITEM_PARTNER,
	   B3.QT_INV,
	   B3.YN_PACK
FROM B3
WHERE IDX = 1

SELECT NULL AS KCODE,
	   NULL AS UCODE,
	   MI.WEIGHT AS WEIGHT_LOG,
	   NULL AS WEIGHT_HGS,
	   MI.CD_PARTNER1 AS CD_PARTNER, 
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI1.DT_IO,
	   MI1.NO_PO,
	   MI1.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI1.CD_ITEM_PARTNER,
	   MI1.NM_ITEM_PARTNER,
	   MI1.YN_PACK,
	   MI1.QT_INV,
	   MI.DC_RMK, 
	   MI.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   MI.DTS_INSERT, 
	   MI.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(MI.DTS_UPDATE, 8) AS DTS_UPDATE  
FROM MA_PITEM MI
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = MI.CD_COMPANY AND MP.CD_PARTNER = MI.CD_PARTNER1
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = MI.CD_COMPANY AND MU1.ID_USER = MI.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = MI.CD_COMPANY AND MU2.ID_USER = MI.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.CD_ITEM,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.CD_ITEM) QL
ON QL.CD_COMPANY = MI.CD_COMPANY AND QL.CD_ITEM = MI.CD_ITEM
LEFT JOIN #추가정보 MI1 ON MI1.CD_COMPANY = MI.CD_COMPANY AND MI1.NO_KEY = MI.CD_ITEM
WHERE MI.CD_COMPANY = @P_CD_COMPANY
AND ISNULL(MI.CD_PARTNER1, '') <> ''
AND ISNULL(@P_NO_DRAWING, '') = ''
AND	ISNULL(@P_CD_SPEC, '') = ''
AND (@P_TP_DATE <> '001' OR MI1.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (MI.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR MI.CD_PARTNER1 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI1.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI1.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI1.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI1.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI1.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI1.YN_PACK IS NULL OR MI1.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))
UNION ALL
SELECT NULL AS KCODE,
	   NULL AS UCODE,
	   MI.WEIGHT AS WEIGHT_LOG,
	   NULL AS WEIGHT_HGS,
	   MI.CD_PARTNER2 AS CD_PARTNER, 
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI1.DT_IO,
	   MI1.NO_PO,
	   MI1.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI1.CD_ITEM_PARTNER,
	   MI1.NM_ITEM_PARTNER,
	   MI1.YN_PACK,
	   MI1.QT_INV,
	   MI.DC_RMK, 
	   MI.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   MI.DTS_INSERT, 
	   MI.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(MI.DTS_UPDATE, 8) AS DTS_UPDATE  
FROM MA_PITEM MI
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = MI.CD_COMPANY AND MP.CD_PARTNER = MI.CD_PARTNER2
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = MI.CD_COMPANY AND MU1.ID_USER = MI.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = MI.CD_COMPANY AND MU2.ID_USER = MI.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.CD_ITEM,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.CD_ITEM) QL
ON QL.CD_COMPANY = MI.CD_COMPANY AND QL.CD_ITEM = MI.CD_ITEM
LEFT JOIN #추가정보 MI1 ON MI1.CD_COMPANY = MI.CD_COMPANY AND MI1.NO_KEY = MI.CD_ITEM
WHERE MI.CD_COMPANY = @P_CD_COMPANY
AND ISNULL(MI.CD_PARTNER2, '') <> ''
AND ISNULL(@P_NO_DRAWING, '') = ''
AND	ISNULL(@P_CD_SPEC, '') = ''
AND (@P_TP_DATE <> '001' OR MI1.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (MI.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR MI.CD_PARTNER2 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI1.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI1.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI1.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI1.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI1.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI1.YN_PACK IS NULL OR MI1.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))
UNION ALL
SELECT KH.KCODE,
	   NULL AS UCODE,
	   KH.WEIGHT_LOG,
	   KH.WEIGHT_HGS,
	   KH.CD_PARTNER1 AS CD_PARTNER, 
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI.DT_IO,
	   MI.NO_PO,
	   MI.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI.CD_ITEM_PARTNER,
	   MI.NM_ITEM_PARTNER,
	   MI.YN_PACK,
	   MI.QT_INV,
	   KH.DC_RMK, 
	   KH.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   KH.DTS_INSERT, 
	   KH.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(KH.DTS_UPDATE, 8) AS DTS_UPDATE  
FROM CZ_MA_KCODE_HGS KH
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = KH.CD_COMPANY AND MP.CD_PARTNER = KH.CD_PARTNER1
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = KH.CD_COMPANY AND MU1.ID_USER = KH.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = KH.CD_COMPANY AND MU2.ID_USER = KH.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_DRAWING,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.NO_DRAWING) QL
ON QL.CD_COMPANY = KH.CD_COMPANY AND QL.NO_DRAWING = KH.KCODE
LEFT JOIN #추가정보 MI ON MI.CD_COMPANY = KH.CD_COMPANY AND MI.NO_KEY = KH.KCODE
WHERE KH.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_ENGINE IS NOT NULL
AND ISNULL(KH.CD_PARTNER1, '') <> ''
AND	ISNULL(@P_CD_SPEC, '') = ''
AND (@P_TP_DATE <> '001' OR MI.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (KH.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_NO_DRAWING, '') = '' OR KH.KCODE LIKE @P_NO_DRAWING + '%')
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR KH.CD_PARTNER1 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_STOCK, 'N') = 'N' OR MI.CLS_ITEM <> '009')
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI.YN_PACK IS NULL OR MI.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))
UNION ALL
SELECT KH.KCODE,
	   NULL AS UCODE,
	   KH.WEIGHT_LOG,
	   KH.WEIGHT_HGS,
	   KH.CD_PARTNER2 AS CD_PARTNER,
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI.DT_IO,
	   MI.NO_PO,
	   MI.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI.CD_ITEM_PARTNER,
	   MI.NM_ITEM_PARTNER,
	   MI.YN_PACK,
	   MI.QT_INV,
	   KH.DC_RMK, 
	   KH.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   KH.DTS_INSERT, 
	   KH.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(KH.DTS_UPDATE, 8) AS DTS_UPDATE
FROM CZ_MA_KCODE_HGS KH
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = KH.CD_COMPANY AND MP.CD_PARTNER = KH.CD_PARTNER2
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = KH.CD_COMPANY AND MU1.ID_USER = KH.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = KH.CD_COMPANY AND MU2.ID_USER = KH.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.NO_DRAWING,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.NO_DRAWING) QL
ON QL.CD_COMPANY = KH.CD_COMPANY AND QL.NO_DRAWING = KH.KCODE
LEFT JOIN #추가정보 MI ON MI.CD_COMPANY = KH.CD_COMPANY AND MI.NO_KEY = KH.KCODE
WHERE KH.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_ENGINE IS NOT NULL
AND ISNULL(KH.CD_PARTNER2, '') <> ''
AND	ISNULL(@P_CD_SPEC, '') = ''
AND (@P_TP_DATE <> '001' OR MI.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (KH.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_NO_DRAWING, '') = '' OR KH.KCODE LIKE @P_NO_DRAWING + '%')
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR KH.CD_PARTNER2 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_STOCK, 'N') = 'N' OR MI.CLS_ITEM <> '009')
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI.YN_PACK IS NULL OR MI.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))
UNION ALL
SELECT NULL AS KCODE,
       UH.UCODE,
	   UH.WEIGHT_LOG,
	   NULL AS WEIGHT_HGS,
	   UH.CD_PARTNER1 AS CD_PARTNER, 
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI.DT_IO,
	   MI.NO_PO,
	   MI.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI.CD_ITEM_PARTNER,
	   MI.NM_ITEM_PARTNER,
	   MI.YN_PACK,
	   MI.QT_INV,
	   UH.DC_RMK, 
	   UH.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   UH.DTS_INSERT, 
	   UH.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(UH.DTS_UPDATE, 8) AS DTS_UPDATE
FROM CZ_MA_UCODE_HGS UH
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = UH.CD_COMPANY AND MP.CD_PARTNER = UH.CD_PARTNER1
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = UH.CD_COMPANY AND MU1.ID_USER = UH.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = UH.CD_COMPANY AND MU2.ID_USER = UH.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.CD_SPEC,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.CD_SPEC) QL
ON QL.CD_COMPANY = UH.CD_COMPANY AND QL.CD_SPEC = UH.UCODE
LEFT JOIN #추가정보 MI ON MI.CD_COMPANY = UH.CD_COMPANY AND MI.NO_KEY = UH.UCODE
WHERE UH.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_ENGINE IS NOT NULL
AND ISNULL(UH.CD_PARTNER1, '') <> ''
AND	ISNULL(@P_NO_DRAWING, '') = ''
AND (@P_TP_DATE <> '001' OR MI.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (UH.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_CD_SPEC, '') = '' OR UH.UCODE LIKE @P_CD_SPEC + '%')
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR UH.CD_PARTNER1 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_STOCK, 'N') = 'N' OR MI.CLS_ITEM <> '009')
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI.YN_PACK IS NULL OR MI.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))
UNION ALL
SELECT NULL AS KCODE,
	   UH.UCODE,
	   UH.WEIGHT_LOG,
	   NULL AS WEIGHT_HGS,
	   UH.CD_PARTNER2 AS CD_PARTNER,
	   MP.LN_PARTNER AS NM_PARTNER,
	   QL.QT_ITEM,
	   MI.DT_IO,
	   MI.NO_PO,
	   MI.NO_LINE,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI.CD_ITEM_PARTNER,
	   MI.NM_ITEM_PARTNER,
	   MI.YN_PACK,
	   MI.QT_INV,
	   UH.DC_RMK, 
	   UH.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   UH.DTS_INSERT, 
	   UH.ID_UPDATE,
	   MU2.NM_USER	AS NM_UPDATE, 
	   LEFT(UH.DTS_UPDATE, 8) AS DTS_UPDATE
FROM CZ_MA_UCODE_HGS UH
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = UH.CD_COMPANY AND MP.CD_PARTNER = UH.CD_PARTNER2
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = UH.CD_COMPANY AND MU1.ID_USER = UH.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = UH.CD_COMPANY AND MU2.ID_USER = UH.ID_UPDATE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.CD_SPEC,
				  SUM(CASE WHEN QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112) THEN 1 ELSE 0 END) AS QT_ITEM,
				  MAX(QL.NO_ENGINE) AS NO_ENGINE 
		   FROM CZ_SA_QTNH QH 
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   GROUP BY QL.CD_COMPANY, QL.CD_SPEC) QL
ON QL.CD_COMPANY = UH.CD_COMPANY AND QL.CD_SPEC = UH.UCODE
LEFT JOIN #추가정보 MI ON MI.CD_COMPANY = UH.CD_COMPANY AND MI.NO_KEY = UH.UCODE
WHERE UH.CD_COMPANY = @P_CD_COMPANY
AND QL.NO_ENGINE IS NOT NULL
AND ISNULL(UH.CD_PARTNER2, '') <> ''
AND	ISNULL(@P_NO_DRAWING, '') = ''
AND (@P_TP_DATE <> '001' OR MI.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (UH.DTS_UPDATE BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_CD_SPEC, '') = '' OR UH.UCODE LIKE @P_CD_SPEC + '%')
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR UH.CD_PARTNER2 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI.CD_ITEM IS NOT NULL)
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM IS NOT NULL)
AND (ISNULL(@P_NO_PO, '') = '' OR MI.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_STOCK, 'N') = 'N' OR MI.CLS_ITEM <> '009')
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR MI.QT_INV > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI.YN_PACK IS NULL OR MI.YN_PACK = 'N')
AND ((@P_QT_QTN_TO = 0 AND QL.QT_ITEM >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND QL.QT_ITEM <= @P_QT_QTN_TO) OR
	 (QL.QT_ITEM BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))

GO