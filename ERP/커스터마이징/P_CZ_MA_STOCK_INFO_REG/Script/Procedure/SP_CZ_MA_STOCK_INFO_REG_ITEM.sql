USE [NEOE]
GO

/****** Object:  StoredProcedure [NEOE].[SP_CZ_MA_STOCK_INFO_REG_ITEM]    Script Date: 2019-05-07 오후 7:21:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [NEOE].[SP_CZ_MA_STOCK_INFO_REG_ITEM]
(
	  @P_CD_COMPANY		NVARCHAR(7), 
	  @P_NO_DRAWING		NVARCHAR(20),
	  @P_CD_SPEC		NVARCHAR(20),
	  @P_CD_PARTNER		NVARCHAR(20), 
	  @P_CD_ITEM		NVARCHAR(20), 
	  @P_NM_ITEM		NVARCHAR(50),
	  @P_NO_PO			NVARCHAR(20),
	  @P_TP_DATE		NVARCHAR(3),
	  @P_DT_START		NVARCHAR(8),
	  @P_DT_END			NVARCHAR(8),
	  @P_QT_QTN_FROM    NUMERIC(5, 0),
	  @P_QT_QTN_TO      NUMERIC(5, 0),
	  @P_TP_PO			NVARCHAR(3),
	  @P_YN_INV			NVARCHAR(1),
	  @P_YN_PACK		NVARCHAR(1),
	  @P_YN_WEIGHT		NVARCHAR(1),
	  @P_YN_PARTNER		NVARCHAR(1),
	  @P_YN_IMAGE		NVARCHAR(1),
	  @P_TP_STOCK		NVARCHAR(3),
	  @P_CD_ITEM_MULTI  NVARCHAR(4000)
)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

SELECT 'N' AS S,
	   MI.CD_ITEM,
	   MI.NM_ITEM,
	   MI.NO_STND,
	   MI.STND_DETAIL_ITEM,
	   MI.WEIGHT,
	   MI.CD_PARTNER1,
	   MP.LN_PARTNER AS NM_PARTNER1,
	   MI.CD_PARTNER2,
	   MP1.LN_PARTNER AS NM_PARTNER2,
	   MF.IMAGE1,
	   MF.IMAGE2,
	   MF.IMAGE3,
	   MF.IMAGE4,
	   MF.IMAGE5,
	   MF.IMAGE6,
	   MF.IMAGE7,
	   QL.QT_ITEM,
	   MI1.DT_IO,
	   MI1.NO_PO,
	   MI1.NO_LINE,
	   ISNULL(MI1.CD_LOCATION, MI.CD_ZONE) AS CD_LOCATION,
	   (ISNULL(ML.QT_OPEN, 0) + ISNULL(OM.QT_MONTH, 0)) AS QT_INV,
	   QL1.CD_ITEM_PARTNER,
	   QL1.NM_ITEM_PARTNER,
	   MI1.YN_PACK,
	   MI.DC_RMK1,
	   MI.DC_RMK2,
	   MI.DC_RMK,
	   MI.ID_INSERT,
	   MU1.NM_USER AS NM_INSERT, 
	   MI.DTS_INSERT, 
	   MI.ID_UPDATE,
	   MU2.NM_USER AS NM_UPDATE, 
	   MI.DTS_UPDATE,
	   LEFT(MI.CD_USERDEF17, 8) AS DT_UPDATE, 
	   ((CASE WHEN MI.CD_COMPANY = 'K200' THEN 'http://erpd.dintec.co.kr/stock/m/write.aspx?code=' 
										  ELSE 'http://erp.dintec.co.kr/stock/m/write.aspx?code=' END) + MI.CD_ITEM) AS CD_QR,
	   1 AS QT_QR
FROM MA_PITEM MI
LEFT JOIN CZ_MA_PITEM_FILE MF ON MF.CD_COMPANY = MI.CD_COMPANY AND MF.CD_PLANT = MI.CD_PLANT AND MF.CD_ITEM = MI.CD_ITEM
LEFT JOIN MA_PARTNER MP ON MP.CD_COMPANY = MI.CD_COMPANY AND MP.CD_PARTNER = MI.CD_PARTNER1
LEFT JOIN MA_PARTNER MP1 ON MP1.CD_COMPANY = MI.CD_COMPANY AND MP1.CD_PARTNER = MI.CD_PARTNER2
LEFT JOIN MA_USER MU1 ON MU1.CD_COMPANY = MI.CD_COMPANY AND MU1.ID_USER = MI.ID_INSERT
LEFT JOIN MA_USER MU2 ON MU2.CD_COMPANY = MI.CD_COMPANY AND MU2.ID_USER = MI.ID_UPDATE
LEFT JOIN (SELECT A.CD_COMPANY,
		   		  A.CD_ITEM,
		   		  A.DT_IO,
		   		  A.NO_SO,
		   		  A.NO_PO,
		   		  A.NO_LINE,
		   		  A.CD_LOCATION,
		   		  A.YN_PACK 
		   FROM (SELECT PL.CD_COMPANY,
		   				PL.CD_ITEM,
		   				IH.DT_IO,
		   				PL.NO_SO,
		   				PL.NO_PO,
		   				PL.NO_LINE,
		   				LC.CD_LOCATION,
		   				(CASE WHEN EXISTS (SELECT 1 
		    				  			   FROM CZ_SA_PACKL PK 
		    				  			   WHERE PK.CD_COMPANY = PL.CD_COMPANY
		    				  			   AND PK.NO_FILE = PL.NO_SO
		    				  			   AND PK.NO_QTLINE = PL.NO_LINE) THEN 'Y' ELSE 'N' END) AS YN_PACK,
		   				ROW_NUMBER() OVER (PARTITION BY PL.CD_COMPANY, PL.CD_ITEM ORDER BY IH.DT_IO DESC) AS IDX  
				 FROM PU_POL PL
				 LEFT JOIN MM_QTIO IL ON IL.CD_COMPANY = PL.CD_COMPANY AND IL.NO_PSO_MGMT = PL.NO_PO AND IL.NO_PSOLINE_MGMT = PL.NO_LINE
				 LEFT JOIN MM_QTIO_LOCATION LC ON LC.CD_COMPANY = IL.CD_COMPANY AND LC.NO_IO = IL.NO_IO AND LC.NO_IOLINE = IL.NO_IOLINE
				 LEFT JOIN MM_QTIOH IH ON IH.CD_COMPANY = IL.CD_COMPANY AND IH.NO_IO = IL.NO_IO
				 WHERE PL.CD_COMPANY = @P_CD_COMPANY
				 AND (@P_TP_DATE <> '001' OR (IH.DT_IO BETWEEN @P_DT_START AND @P_DT_END))
				 AND (ISNULL(@P_CD_ITEM, '') = '' OR PL.CD_ITEM LIKE @P_CD_ITEM + '%')
				 AND (ISNULL(@P_NO_PO, '') = '' OR PL.NO_PO LIKE @P_NO_PO + '%')
				 AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR NOT EXISTS (SELECT 1 
				  	  				  						       FROM CZ_SA_PACKL PK 
				  	  				  						       WHERE PK.CD_COMPANY = PL.CD_COMPANY
				  	  				  						       AND PK.NO_FILE = PL.NO_SO
				  	  				  						       AND PK.NO_QTLINE = PL.NO_LINE))
				 AND (ISNULL(@P_TP_PO, '') = '' OR (@P_TP_PO = '001' AND EXISTS (SELECT 1 
				 																 FROM PU_POH PH
				 																 WHERE PH.CD_COMPANY = PL.CD_COMPANY
				 																 AND PH.NO_PO = PL.NO_PO
				 																 AND PH.CD_TPPO IN ('1300', '1400', '2300', '2400'))) OR
				 								  (@P_TP_PO = '002' AND EXISTS (SELECT 1 
				 																FROM PU_POH PH
				 																WHERE PH.CD_COMPANY = PL.CD_COMPANY
				 																AND PH.NO_PO = PL.NO_PO
				 																AND PH.CD_TPPO NOT IN ('1300', '1400', '2300', '2400'))))) A
		   WHERE A.IDX = 1) MI1 
ON MI1.CD_COMPANY = MI.CD_COMPANY AND MI1.CD_ITEM = MI.CD_ITEM
LEFT JOIN CZ_SA_QTNL QL1 ON QL1.CD_COMPANY = MI1.CD_COMPANY AND QL1.NO_FILE = MI1.NO_SO AND QL1.NO_LINE = MI1.NO_LINE
LEFT JOIN (SELECT QL.CD_COMPANY, QL.CD_ITEM,
			      COUNT(1) AS QT_ITEM 
		   FROM CZ_SA_QTNH QH
		   JOIN CZ_SA_QTNL QL ON QL.CD_COMPANY = QH.CD_COMPANY AND QL.NO_FILE = QH.NO_FILE
		   WHERE QH.DT_INQ BETWEEN CONVERT(CHAR(8), DATEADD(YEAR, -1, GETDATE()), 112) AND CONVERT(CHAR(8), GETDATE(), 112)
		   GROUP BY QL.CD_COMPANY, QL.CD_ITEM) QL
ON QL.CD_COMPANY = MI.CD_COMPANY AND QL.CD_ITEM = MI.CD_ITEM
LEFT JOIN (SELECT OL.CD_COMPANY, OL.CD_ITEM,
	  	   	      SUM(ISNULL(OL.QT_GOOD_INV, 0) + ISNULL(OL.QT_REJECT_INV, 0) + ISNULL(OL.QT_INSP_INV, 0) + ISNULL(OL.QT_TRANS_INV, 0)) AS QT_OPEN
	  	   FROM MM_OPENQTL OL
	  	   WHERE OL.YM_STANDARD = CONVERT(NVARCHAR, YEAR(GETDATE())) + '00'
		   AND OL.CD_SL = 'SL02'
	  	   GROUP BY OL.CD_COMPANY, OL.CD_ITEM) ML
ON ML.CD_COMPANY = MI.CD_COMPANY AND ML.CD_ITEM = MI.CD_ITEM
LEFT JOIN (SELECT CD_COMPANY, CD_ITEM,
		   		  SUM(ISNULL(QT_GOOD_GR, 0) - ISNULL(QT_GOOD_GI, 0)) AS QT_MONTH 
		   FROM MM_OHSLINVM
		   WHERE YY_INV = YEAR(GETDATE())
		   AND CD_SL = 'SL02'
		   GROUP BY CD_COMPANY, CD_ITEM) OM
ON OM.CD_COMPANY = MI.CD_COMPANY AND OM.CD_ITEM = MI.CD_ITEM
WHERE MI.CD_COMPANY = @P_CD_COMPANY
AND ISNULL(MI.CLS_ITEM, '') = '009'
AND ISNULL(MI.YN_USE, 'N') = 'Y'
AND MI.CD_ITEM NOT LIKE 'ME%'
AND MI.CD_ITEM NOT LIKE 'HE%'
AND (@P_TP_STOCK <> '001' OR LEN(MI.CD_ITEM) = 7)
AND (@P_TP_STOCK <> '002' OR LEN(MI.CD_ITEM) > 7)
AND (@P_TP_DATE <> '001' OR MI1.DT_IO IS NOT NULL)
AND (@P_TP_DATE <> '002' OR (MI.CD_USERDEF17 BETWEEN @P_DT_START + '000000' AND @P_DT_END + '999999'))
AND	(ISNULL(@P_NO_DRAWING, '') = '' OR MI.NO_STND LIKE @P_NO_DRAWING + '%')
AND	(ISNULL(@P_CD_SPEC, '') = '' OR MI.STND_DETAIL_ITEM LIKE @P_CD_SPEC + '%')
AND	(ISNULL(@P_CD_PARTNER, '') = '' OR MI.CD_PARTNER1 = @P_CD_PARTNER OR MI.CD_PARTNER2 = @P_CD_PARTNER)
AND (ISNULL(@P_CD_ITEM, '') = '' OR MI.CD_ITEM LIKE @P_CD_ITEM + '%')
AND (ISNULL(@P_CD_ITEM_MULTI, '') = '' OR MI.CD_ITEM IN (SELECT CD_STR FROM GETTABLEFROMSPLIT(@P_CD_ITEM_MULTI)))
AND (ISNULL(@P_NM_ITEM, '') = '' OR MI.NM_ITEM LIKE '%' + @P_NM_ITEM + '%')
AND (ISNULL(@P_NO_PO, '') = '' OR MI1.NO_PO IS NOT NULL)
AND (ISNULL(@P_YN_INV, 'N') = 'N' OR (ISNULL(ML.QT_OPEN, 0) + ISNULL(OM.QT_MONTH, 0)) > 0)
AND (ISNULL(@P_YN_PACK, 'N') = 'N' OR MI1.YN_PACK IS NULL OR MI1.YN_PACK = 'N')	
AND (ISNULL(@P_YN_WEIGHT, 'N') = 'N' OR MI.WEIGHT IS NULL OR MI.WEIGHT = 0)
AND (ISNULL(@P_YN_PARTNER, 'N') = 'N' OR ((MI.CD_PARTNER1 IS NULL OR MI.CD_PARTNER1 = '') AND 
										  (MI.CD_PARTNER2 IS NULL OR MI.CD_PARTNER2 = '')))
AND (ISNULL(@P_YN_IMAGE, 'N') = 'N' OR ((MF.IMAGE1 IS NULL OR (MF.IMAGE1 NOT LIKE '%.jpg' AND MF.IMAGE1 NOT LIKE '%.png')) AND 
										(MF.IMAGE2 IS NULL OR (MF.IMAGE2 NOT LIKE '%.jpg' AND MF.IMAGE2 NOT LIKE '%.png')) AND
										(MF.IMAGE3 IS NULL OR (MF.IMAGE3 NOT LIKE '%.jpg' AND MF.IMAGE3 NOT LIKE '%.png')) AND
										(MF.IMAGE4 IS NULL OR (MF.IMAGE4 NOT LIKE '%.jpg' AND MF.IMAGE4 NOT LIKE '%.png')) AND
										(MF.IMAGE5 IS NULL OR (MF.IMAGE5 NOT LIKE '%.jpg' AND MF.IMAGE5 NOT LIKE '%.png')) AND
										(MF.IMAGE6 IS NULL OR (MF.IMAGE6 NOT LIKE '%.jpg' AND MF.IMAGE6 NOT LIKE '%.png')) AND
										(MF.IMAGE7 IS NULL OR (MF.IMAGE7 NOT LIKE '%.jpg' AND MF.IMAGE7 NOT LIKE '%.png'))))
AND ((@P_QT_QTN_TO = 0 AND ISNULL(QL.QT_ITEM, 0) >= @P_QT_QTN_FROM) OR 
	 (@P_QT_QTN_FROM = 0 AND ISNULL(QL.QT_ITEM, 0) <= @P_QT_QTN_TO) OR
	 (ISNULL(QL.QT_ITEM, 0) BETWEEN @P_QT_QTN_FROM AND @P_QT_QTN_TO))








GO

